<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
    <title>probes</title>
    <link rel="self" type="application/atom+xml" href="https://clux.dev/atom.xml"/>
    <link rel="alternate" type="text/html" href="https://clux.dev"/>
    <generator uri="https://www.getzola.org/">Zola</generator>
    <updated>2024-09-07T00:00:00+00:00</updated>
    <id>https://clux.dev/atom.xml</id>
    <entry xml:lang="en">
        <title>Running a Minimal Prometheus</title>
        <published>2024-09-07T00:00:00+00:00</published>
        <updated>2024-09-07T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://clux.dev/post/2024-09-07-prometheus-minified/"/>
        <id>https://clux.dev/post/2024-09-07-prometheus-minified/</id>
        
        <content type="html" xml:base="https://clux.dev/post/2024-09-07-prometheus-minified/">&lt;p&gt;Prometheus does not need to be hugely complicated, nor a massive resource hog, provided you follow some principles.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;background&quot;&gt;Background&lt;&#x2F;h2&gt;
&lt;p&gt;My last &lt;a href=&quot;&#x2F;tags&#x2F;prometheus&#x2F;&quot;&gt;#prometheus&lt;&#x2F;a&gt; posts have been exclusively about large scale production setups, and the difficulties this pulls in.&lt;&#x2F;p&gt;
&lt;p&gt;I would like to argue that these difficulties are often self-imposed, and a combination result of inadequate &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;prometheus.io&#x2F;docs&#x2F;practices&#x2F;instrumentation&#x2F;#do-not-overuse-labels&quot;&gt;cardinality control&lt;&#x2F;a&gt; and &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Induced_demand&quot;&gt;induced demand&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;👺: You should be able to run a prometheus on your handful-of-machine-sized homelab with &amp;lt;10k time series active, using less than 512Mi memory, and 10m CPU.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;details&gt;&lt;summary style=&quot;cursor:pointer;color:#0af&quot;&gt;&lt;b&gt;Disclaimer: Who am I?&lt;&#x2F;b&gt;&lt;&#x2F;summary&gt;
&lt;p&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&quot;&gt;I&lt;&#x2F;a&gt; am a platform engineer working maintenance of observability infrastructure, and a maintainer of &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;kube.rs&quot;&gt;kube-rs&lt;&#x2F;a&gt; working on rust integration of observability with Kubernetes platforms. My knowledge of prometheus is superficial and mostly based on practical observations around operating it for years. Suggestions or corrections are welcome (links at bottom).&lt;&#x2F;p&gt;
&lt;&#x2F;details&gt;
&lt;h2 id=&quot;signals-symptoms-causes&quot;&gt;Signals, Symptoms &amp;amp; Causes&lt;&#x2F;h2&gt;
&lt;p&gt;To illustrate this, let&#x27;s try to answer the (perhaps obvious question): &lt;strong&gt;why do you install a metrics system at all?&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Primarily; we want to be able to track and get notified on changes to key &lt;strong&gt;signals&lt;&#x2F;strong&gt;. At the very basic level you want to tell if your &quot;service is down&quot;, because you want to be able to use it. That&#x27;s the main, user-facing signal. Setup something that test if the service responds with a &lt;code&gt;2XX&lt;&#x2F;code&gt;, and alert on deviations. You &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.checklyhq.com&#x2F;product&#x2F;api-monitoring&#x2F;&quot;&gt;don&#x27;t even need&lt;&#x2F;a&gt; prometheus for this.&lt;&#x2F;p&gt;
&lt;p&gt;However, while you can do basic sanity outside the cluster, you need &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.brendangregg.com&#x2F;usemethod.html&quot;&gt;utilisation and saturation&lt;&#x2F;a&gt;, to tell you about less obvious &#x2F; upcoming failures:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;message queues full&lt;&#x2F;strong&gt; :: rejected work&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;high cpu utilisation&lt;&#x2F;strong&gt; :: degraded latency&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;memory utilisation high&lt;&#x2F;strong&gt; :: oom kill imminent&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;disk space nearing full&lt;&#x2F;strong&gt; :: failures imminent&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;You can argue &lt;strong&gt;idealistically&lt;&#x2F;strong&gt; about whether you should only be &quot;aware of something going wrong&quot;, or be &quot;aware that something is in a risky state&quot; (e.g. &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;cloud.google.com&#x2F;blog&#x2F;topics&#x2F;developers-practitioners&#x2F;why-focus-symptoms-not-causes&quot;&gt;symptoms not causes&lt;&#x2F;a&gt;), but it&#x27;s silly to avoid utilisation&#x2F;saturation as a predictor for degraded performance (in the same sense as; you don&#x27;t wait for a certificate to expire before renewing it).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;how-many-signals&quot;&gt;How Many Signals&lt;&#x2F;h2&gt;
&lt;blockquote&gt;
&lt;p&gt;MAIN POINT: You should be able to enumerate the &lt;strong&gt;basic&lt;&#x2F;strong&gt; signals that you want to have visibility of.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Let&#x27;s do some simplified &lt;strong&gt;enumeration maths&lt;&#x2F;strong&gt; on &lt;strong&gt;how many signals&lt;&#x2F;strong&gt; you actually want to properly identify failures quickly.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;compute-utilisation-saturation&quot;&gt;Compute Utilisation&#x2F;Saturation&lt;&#x2F;h3&gt;
&lt;p&gt;Consider an &lt;strong&gt;example cluster with 200 pods, and 5 nodes&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Want {utilization,saturation} of {cpu,memory} at cluster level :: 2 * 2 = &lt;strong&gt;4 signals&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Want to break these down per &lt;code&gt;Pod&lt;&#x2F;code&gt; :: 200 * 4 = &lt;strong&gt;800 signals&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Want to break these down per &lt;code&gt;Node&lt;&#x2F;code&gt; :: 5 * 4 = &lt;strong&gt;20 signals&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;So, in theory, we should be able to visualise cluster, node, and pod level utilisation for cpu and memory with only 820 metrics (but likely more if you want to break down node metrics).&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;NB: Pods are only found on one node, so &lt;code&gt;Pod&lt;&#x2F;code&gt; cardinality does not multiply with &lt;code&gt;Node&lt;&#x2F;code&gt; cardinality.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;These will come from a combination of &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;google&#x2F;cadvisor&#x2F;blob&#x2F;master&#x2F;docs&#x2F;storage&#x2F;prometheus.md&quot;&gt;cadvisor&lt;&#x2F;a&gt; and &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kubernetes&#x2F;kube-state-metrics&quot;&gt;kube-state-metrics&lt;&#x2F;a&gt;; huge beasts with lots of functionality and way more signals than we need. Depending on how much of the &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;monitoring.mixins.dev&#x2F;kubernetes&#x2F;&quot;&gt;kubernetes mixin&lt;&#x2F;a&gt; you want, you may want more signals.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;node-state-breakdown&quot;&gt;Node State Breakdown&lt;&#x2F;h3&gt;
&lt;p&gt;If you want to break down things &lt;strong&gt;within a node&lt;&#x2F;strong&gt; on a more physical level, then you you can also grab &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;prometheus&#x2F;node_exporter&quot;&gt;node-exporter&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Assuming, for simplicity, 10 cores per node, 10 disk devices per node, and 10 network interfaces:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Want {utilization,saturation,errors} of cpu :: 3*10 * 5 = &lt;strong&gt;60 signals&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Want {utilization,saturation,errors} for memory :: 3*5 = &lt;strong&gt;15 signals&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Want {utilisation,saturation,errors} of disks :: 3*10 * 5 = &lt;strong&gt;100 signals&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Want {utilisation,saturation,errors} of network interfaces :: 10*3 * 5 = &lt;strong&gt;150 signals&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;In theory, you should be able to get decent node monitoring with less than 400 metrics.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;in-practice&quot;&gt;In Practice&lt;&#x2F;h2&gt;
&lt;p&gt;Doing this type of enumeration is helpful as a way to tell how close you are to your theoretical 100% optimised system, but how does the number hold up in practice?&lt;&#x2F;p&gt;
&lt;h3 id=&quot;metric-inefficiencies&quot;&gt;Metric Inefficiencies&lt;&#x2F;h3&gt;
&lt;p&gt;The problems with expecting this type of perfection in practice is that many metric producers are very inefficient &#x2F; overly lenient with their output. You can click on the addendum below for some examples, but without extreme tuning you can minimally expect a &lt;strong&gt;5x inefficiency factor&lt;&#x2F;strong&gt; to apply to the above in practice.&lt;&#x2F;p&gt;
&lt;details&gt;&lt;summary style=&quot;cursor:pointer;color:#0af&quot;&gt;&lt;b&gt;Addendum: Inefficiency Examples&lt;&#x2F;b&gt;&lt;&#x2F;summary&gt;
&lt;p&gt;Minor: &lt;code&gt;job=&quot;kube-state-metrics&quot;&lt;&#x2F;code&gt; denormalising &lt;strong&gt;disjoint phases&lt;&#x2F;strong&gt; (never letting old&#x2F;zero phases go out of scope):&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;promql&quot; class=&quot;language-promql z-code&quot;&gt;&lt;code class=&quot;language-promql&quot; data-lang=&quot;promql&quot;&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;kube_pod_status_phase{phase=&amp;quot;Pending&amp;quot;, pod=&amp;quot;forgejo-975b98575-fbjz8&amp;quot;} 0
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;kube_pod_status_phase{phase=&amp;quot;Succeeded&amp;quot;, pod=&amp;quot;forgejo-975b98575-fbjz8&amp;quot;} 0
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;kube_pod_status_phase{phase=&amp;quot;Failed&amp;quot;, pod=&amp;quot;forgejo-975b98575-fbjz8&amp;quot;} 0
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;kube_pod_status_phase{phase=&amp;quot;Unknown&amp;quot;, pod=&amp;quot;forgejo-975b98575-fbjz8&amp;quot;} 0
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;kube_pod_status_phase{phase=&amp;quot;Running&amp;quot;, pod=&amp;quot;forgejo-975b98575-fbjz8&amp;quot;} 1
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;This &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kubernetes&#x2F;kube-state-metrics&#x2F;issues&#x2F;2380&quot;&gt;may get a fix&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Annoying: &lt;code&gt;job=&quot;node-exporter&quot;&lt;&#x2F;code&gt; putting tons of labels on metrics such as &lt;code&gt;node_cpu_seconds_total&lt;&#x2F;code&gt;:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;promql&quot; class=&quot;language-promql z-code&quot;&gt;&lt;code class=&quot;language-promql&quot; data-lang=&quot;promql&quot;&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;{cpu=&amp;quot;15&amp;quot;, mode=&amp;quot;idle&amp;quot;} 1
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;{cpu=&amp;quot;15&amp;quot;, mode=&amp;quot;iowait&amp;quot;} 1
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;{cpu=&amp;quot;15&amp;quot;, mode=&amp;quot;irq&amp;quot;} 1
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;{cpu=&amp;quot;15&amp;quot;, mode=&amp;quot;nice&amp;quot;} 1
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;{cpu=&amp;quot;15&amp;quot;, mode=&amp;quot;softirq&amp;quot;} 1
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;{cpu=&amp;quot;15&amp;quot;, mode=&amp;quot;steal&amp;quot;} 1
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;{cpu=&amp;quot;15&amp;quot;, mode=&amp;quot;system&amp;quot;} 1
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;{cpu=&amp;quot;15&amp;quot;, mode=&amp;quot;user&amp;quot;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;and while you can &lt;code&gt;action: labeldrop&lt;&#x2F;code&gt; the &lt;code&gt;cpu&lt;&#x2F;code&gt; breakdown, you can&#x27;t do the same for &lt;code&gt;mode&lt;&#x2F;code&gt; because the &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;prometheus&#x2F;node_exporter&#x2F;blob&#x2F;b9d0932179a0c5b3a8863f3d6cdafe8584cedc8e&#x2F;docs&#x2F;node-mixin&#x2F;rules&#x2F;rules.libsonnet#L9-L14&quot;&gt;standard recording rules depend on mode&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Similarly, if you want to support a bunch of the mixin dashboards with container level breakdown, you are also forced to grab a bunch of container level info for e.g. &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;prometheus-community&#x2F;helm-charts&#x2F;blob&#x2F;71845c4d5795ec552e3ea96036c39dcfb97132ad&#x2F;charts&#x2F;kube-prometheus-stack&#x2F;templates&#x2F;prometheus&#x2F;rules-1.14&#x2F;k8s.rules.container_resource.yaml#L43&quot;&gt;k8s.rules.container_resource&lt;&#x2F;a&gt; unless if you want to rewrite the world.&lt;&#x2F;p&gt;
&lt;&#x2F;details&gt;
&lt;h3 id=&quot;visualising-cardinality&quot;&gt;Visualising Cardinality&lt;&#x2F;h3&gt;
&lt;p&gt;I have a &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;homelab&#x2F;blob&#x2F;main&#x2F;dashboards&#x2F;prometheus.json&quot;&gt;dashboard&lt;&#x2F;a&gt; for this with this panel:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;&#x2F;imgs&#x2F;prometheus&#x2F;cardinality-control.png&quot;&gt;&lt;img src=&quot;&#x2F;imgs&#x2F;prometheus&#x2F;cardinality-control.png&quot; alt=&quot;cardinality control panel&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Shows metrics produced, how many we decided to keep, and a breakdown link leading to &lt;code&gt;topk(50, count({job=&quot;JOB-IN-ROW&quot;}) by (__name__))&lt;&#x2F;code&gt;. It&#x27;s probably the panel that has helped the most in slimming down prometheus.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;outing-out&quot;&gt;Outing Out&lt;&#x2F;h3&gt;
&lt;p&gt;The most unfortunate reality is that this stuff is all opt-out. The &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;prometheus-community&#x2F;helm-charts&#x2F;blob&#x2F;ecc58b9baecc43b0d5719ed509a89e7ca5a7e8e3&#x2F;charts&#x2F;kube-prometheus-stack&#x2F;values.yaml#L47-L83&quot;&gt;defaults are crazy inclusive&lt;&#x2F;a&gt;, and new versions of exporters introduce new metrics forcing you to watch your usage graph upgrades.&lt;&#x2F;p&gt;
&lt;p&gt;Thankfully, in a &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;homelab&quot;&gt;gitops repo&lt;&#x2F;a&gt; this is easy to do (if you &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;hachyderm.io&#x2F;@clux&#x2F;113044641297413034&quot;&gt;actually generate your helm templates&lt;&#x2F;a&gt; into a &lt;code&gt;deploy&lt;&#x2F;code&gt; folder) because all your dashboards and recording rules live there.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Procedure&lt;&#x2F;strong&gt;: Unsure if you need this &lt;code&gt;container_sockets&lt;&#x2F;code&gt; metric? &lt;code&gt;rg container_sockets deploy&#x2F;&lt;&#x2F;code&gt; and see if anything comes up:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;No hits? &lt;code&gt;action: drop&lt;&#x2F;code&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;Only used in a dashboard? Do you care about this dashboard? No? &lt;code&gt;action: drop&lt;&#x2F;code&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;Used in a recording rule? Does the recording rule go towards an alert&#x2F;dashboard you care about? No? &lt;code&gt;action: drop&lt;&#x2F;code&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;Partially used in dashboard or recording rule? &lt;code&gt;labeldrop&lt;&#x2F;code&gt; subset.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;Grafana cloud has its own opt-out ML based &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=ZkXJIQYbUVs&quot;&gt;adaptive metrics thing&lt;&#x2F;a&gt; to do this, and while this is probably helpful if you are locked into their cloud, the solution definitely has a &lt;strong&gt;big engineering solution&lt;&#x2F;strong&gt; feel to it:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;imgs&#x2F;prometheus&#x2F;adaptive-metric-power-meme.png&quot; alt=&quot;fraction of my power meme comparing grafana adaptive metrics to just a git repo with grep&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;things-you-don-t-need&quot;&gt;Things You Don&#x27;t Need&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;sub-minute-data-fidelity&quot;&gt;Sub Minute Data Fidelity&lt;&#x2F;h3&gt;
&lt;p&gt;You are probably checking your homelab once every few days at most, so why do you expect you would need 15s&#x2F;30s data fidelity? You can set &lt;code&gt;60s&lt;&#x2F;code&gt; scrape&#x2F;eval intervals and be fine:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;yaml&quot; class=&quot;language-yaml z-code&quot;&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;scrapeInterval&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;60s&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;evaluationInterval&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;60s&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;You could go even higher, but above &lt;code&gt;1m&lt;&#x2F;code&gt; grafana does starts to look less clean.&lt;&#x2F;p&gt;
&lt;p&gt;To compensate, you &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;homelab&#x2F;blob&#x2F;main&#x2F;justfile&quot;&gt;can hack your mixin dashboards&lt;&#x2F;a&gt; to increase the time window, and set a less aggressive refresh:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; class=&quot;language-sh z-code&quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-begin z-shell&quot;&gt;#&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt; change default refreshes on grafana dashboards to be 1m rather than 10s&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;fd&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;g&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-single z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;*.yaml&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; deploy&#x2F;promstack&#x2F;promstack&#x2F;charts&#x2F;kube-prometheus-stack&#x2F;templates&#x2F;grafana&#x2F;dashboards-1.14&#x2F; &lt;span class=&quot;z-punctuation z-separator z-continuation z-line z-shell&quot;&gt;\
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt;   -&lt;&#x2F;span&gt;x&lt;&#x2F;span&gt; sd &lt;span class=&quot;z-string z-quoted z-single z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&amp;quot;refresh&amp;quot;:&amp;quot;10s&amp;quot;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-single z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&amp;quot;refresh&amp;quot;:&amp;quot;1m&amp;quot;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-group z-expansion z-brace z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-expansion z-brace z-begin z-shell&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-expansion z-brace z-end z-shell&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-begin z-shell&quot;&gt;#&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt; change default time range to be now-12h rather than now-1h on boards that cannot handle 2 days...&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;fd&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;g&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-single z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;*.yaml&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; deploy&#x2F;promstack&#x2F;promstack&#x2F;charts&#x2F;kube-prometheus-stack&#x2F;templates&#x2F;grafana&#x2F;dashboards-1.14&#x2F; &lt;span class=&quot;z-punctuation z-separator z-continuation z-line z-shell&quot;&gt;\
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt;   -&lt;&#x2F;span&gt;x&lt;&#x2F;span&gt; sd &lt;span class=&quot;z-string z-quoted z-single z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&amp;quot;from&amp;quot;:&amp;quot;now-1h&amp;quot;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-single z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&amp;quot;from&amp;quot;:&amp;quot;now-12h&amp;quot;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-group z-expansion z-brace z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-expansion z-brace z-begin z-shell&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-expansion z-brace z-end z-shell&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-begin z-shell&quot;&gt;#&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt; change default time range to be now-2d rather than now-1h on solid dashboards...&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;fd&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;g&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-single z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;k8s*.yaml&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; deploy&#x2F;promstack&#x2F;promstack&#x2F;charts&#x2F;kube-prometheus-stack&#x2F;templates&#x2F;grafana&#x2F;dashboards-1.14&#x2F; &lt;span class=&quot;z-punctuation z-separator z-continuation z-line z-shell&quot;&gt;\
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt;   -&lt;&#x2F;span&gt;x&lt;&#x2F;span&gt; sd &lt;span class=&quot;z-string z-quoted z-single z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&amp;quot;from&amp;quot;:&amp;quot;now-12h&amp;quot;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-single z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&amp;quot;from&amp;quot;:&amp;quot;now-2d&amp;quot;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-group z-expansion z-brace z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-expansion z-brace z-begin z-shell&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-expansion z-brace z-end z-shell&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;..which is &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;homelab&#x2F;blob&#x2F;ff02315f3280c8199451160ab82a8e35a48f5cb1&#x2F;justfile#L36-L51&quot;&gt;actually practical&lt;&#x2F;a&gt; if you use &lt;code&gt;helm template&lt;&#x2F;code&gt; rather than &lt;code&gt;helm upgrade&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;👺: Somewhere out there, &lt;code&gt;jsonnet&lt;&#x2F;code&gt; users are gouging their eyes out reading this.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;most-kubelet-metrics&quot;&gt;Most Kubelet Metrics&lt;&#x2F;h3&gt;
&lt;p&gt;97% of kubelet metrics are junk. In a small cluster it&#x27;s the biggest waste producer in a small cluster, often producing 10x more metrics than anything else. Look at the top 10 metrics they produce with just 1 node and 30 pods:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;&#x2F;imgs&#x2F;prometheus&#x2F;kublet-defaults-1-node.png&quot;&gt;&lt;img src=&quot;&#x2F;imgs&#x2F;prometheus&#x2F;kublet-defaults-1-node.png&quot; alt=&quot;kubelet metrics top 10&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;None of these are useful &#x2F; contribute towards my above goal. Number 4 and 5 on that list &lt;strong&gt;together&lt;&#x2F;strong&gt; produce more signals than I consume in TOTAL in my actual setup. The &lt;code&gt;kube-prometheus-stack&lt;&#x2F;code&gt; chart does &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;prometheus-community&#x2F;helm-charts&#x2F;blob&#x2F;ecc58b9baecc43b0d5719ed509a89e7ca5a7e8e3&#x2F;charts&#x2F;kube-prometheus-stack&#x2F;values.yaml#L1331-L1456&quot;&gt;attempt to reduce this somewhat&lt;&#x2F;a&gt;, but it by far too little.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;histograms&quot;&gt;Histograms&lt;&#x2F;h3&gt;
&lt;p&gt;Histograms generally account for a huge percentage of your metric utilisation. On a default &lt;code&gt;kube-prometheus-stack&lt;&#x2F;code&gt; install with one node, the distribution is &amp;gt;70% histograms:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;&#x2F;imgs&#x2F;prometheus&#x2F;histogram-defaults.png&quot;&gt;&lt;img src=&quot;&#x2F;imgs&#x2F;prometheus&#x2F;histogram-defaults.png&quot; alt=&quot;histograms vs non histograms on default kube-prometheus-stack &amp;gt; 70%&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Of course, this is largely due to &lt;code&gt;kubelet&lt;&#x2F;code&gt; metric inefficiencies, but it&#x27;s a trend you will see repeated elsewhere (thankfully usually with less eye-watering percentages).&lt;&#x2F;p&gt;
&lt;p&gt;Unless you have a need to see&#x2F;debug detailed breakdown of latency distributions, do not ingest or produce these metrics (see addendum for more info). It&#x27;s the easiest win you&#x27;ll get in prometheus land; wildcard drop them from your &lt;code&gt;ServiceMonitor&lt;&#x2F;code&gt; (et al) objects:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;yaml&quot; class=&quot;language-yaml z-code&quot;&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;      &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;metricRelabelings&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;      &lt;span class=&quot;z-punctuation z-definition z-block z-sequence z-item z-yaml&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;sourceLabels&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-flow-sequence z-yaml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-sequence z-begin z-yaml&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-unquoted z-plain z-in z-yaml&quot;&gt;__name__&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-sequence z-end z-yaml&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;        &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;action&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;drop&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;        &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;regex&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-single z-yaml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-yaml&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;^.*bucket.*&lt;span class=&quot;z-punctuation z-definition z-string z-end z-yaml&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;details&gt;&lt;summary style=&quot;cursor:pointer;color:#0af&quot;&gt;&lt;b&gt;Addendum: Why does histograms suck?&lt;&#x2F;b&gt;&lt;&#x2F;summary&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Multiplicative Cardinality&lt;&#x2F;strong&gt;: histogram buckets multiply metric cardinality by 5-30x (the number of buckets).&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;This number is multiplicative with regular cardinality:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;pod&lt;&#x2F;code&gt; &#x2F; &lt;code&gt;node&lt;&#x2F;code&gt; labels added by prometheus operator :: if 2000 metric per pod, and scaling to 20 pods, now you have 40000 metrics&lt;&#x2F;li&gt;
&lt;li&gt;request information added by users (endpoint, route, status, error) :: 5 eps * 10 routes * 8 statuses * 4 errors = 1600 metrics, but with 30 buckets = 48000&lt;&#x2F;li&gt;
&lt;li&gt;See the &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;promcon.io&#x2F;2019-munich&#x2F;slides&#x2F;containing-your-cardinality.pdf&quot;&gt;Containing Your Cardinality&lt;&#x2F;a&gt; talk for more maths details&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;&lt;strong&gt;Inefficiency&lt;&#x2F;strong&gt; 30x multiplied information is a bad way to store a few additional signals&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;If you want P50s or P99s you can compute these in the app with things like &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Moving_average&quot;&gt;rolling averages&lt;&#x2F;a&gt; or rolling quantiles. Some of these are more annoying than others, but there&#x27;s a lot you can do by just tracking a mean.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Strive for one signal per question where possible.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;That said, if you do actually need them, try to decouple them from your other labels (drop pod labels, drop peripheral information) so that you can get the answer you need cheaply. A histogram should answer one question, if your histogram has extra parameters, you can break them down to smaller histograms (addition beats multiplication for cardinality)&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;👺: Histograms will get better with the &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;prometheus.io&#x2F;docs&#x2F;prometheus&#x2F;latest&#x2F;feature_flags&#x2F;#native-histograms&quot;&gt;native-histograms feature&lt;&#x2F;a&gt; (see e.g. &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=TgINvIK9SYc&quot;&gt;this talk&lt;&#x2F;a&gt;). However, this requires the ecosystem to move on to protobufs and it being propagated into client libraries (and is at the moment still experimental at the &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;prometheus&#x2F;prometheus&#x2F;releases&#x2F;tag&#x2F;v2.54.1&quot;&gt;time of writing&lt;&#x2F;a&gt;), it&#x27;s only been &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;prometheus&#x2F;prometheus&#x2F;commit&#x2F;41035469d32fe8fd436c55846a5b237a86e69dee&quot;&gt;2 years&lt;&#x2F;a&gt; though.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;&#x2F;details&gt;
&lt;h2 id=&quot;a-solution&quot;&gt;A Solution&lt;&#x2F;h2&gt;
&lt;p&gt;Because I keep needing an efficient, low-cost homelab setup for prometheus (that still has the signals I care about), so now here is a chart.&lt;&#x2F;p&gt;
&lt;p&gt;It&#x27;s mostly a wrapper chart over &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;prometheus-community&#x2F;helm-charts&#x2F;tree&#x2F;main&#x2F;charts&#x2F;kube-prometheus-stack&quot;&gt;kube-prometheus-stack&lt;&#x2F;a&gt; with aggressive tunings &#x2F; dropping (of what can&#x27;t be tuned), and it provides the following default &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;homelab&#x2F;blob&#x2F;main&#x2F;charts&#x2F;promstack&#x2F;values.yaml&quot;&gt;values.yaml&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;You &lt;strong&gt;could&lt;&#x2F;strong&gt; use it directly with:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; class=&quot;language-sh z-code&quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;helm&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; repo add clux https:&#x2F;&#x2F;clux.github.io&#x2F;homelab&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;helm&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; install &lt;span class=&quot;z-keyword z-control z-regexp z-set z-begin z-shell&quot;&gt;[&lt;&#x2F;span&gt;RELEASE_NAME&lt;span class=&quot;z-keyword z-control z-regexp z-set z-end z-shell&quot;&gt;]&lt;&#x2F;span&gt; clux&#x2F;promstack&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;but more sensibly, you can take&#x2F;dissect the &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;homelab&#x2F;blob&#x2F;main&#x2F;charts&#x2F;promstack&#x2F;values.yaml&quot;&gt;values.yaml&lt;&#x2F;a&gt; file and run with it in your own similar subchart.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;👺: You shouldn&#x27;t trust me for maintenance of this, and you don&#x27;t want to be any more steps abstracted away from &lt;code&gt;kube-prometheus-stack&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h2 id=&quot;architecture-diagram&quot;&gt;Architecture Diagram&lt;&#x2F;h2&gt;
&lt;p&gt;The chart is effectively a slimmed down &lt;a href=&quot;&#x2F;post&#x2F;2022-01-11-prometheus-ecosystem&#x2F;&quot;&gt;2022 thanos setup&lt;&#x2F;a&gt;; no HA, no &lt;code&gt;thanos&lt;&#x2F;code&gt;, no &lt;code&gt;prometheus-adapter&lt;&#x2F;code&gt;, but a including a lightweight &lt;code&gt;tempo&lt;&#x2F;code&gt; for exemplars:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;&#x2F;imgs&#x2F;prometheus&#x2F;prometheus-simple.png&quot;&gt;&lt;img src=&quot;&#x2F;imgs&#x2F;prometheus&#x2F;prometheus-simple.png&quot; alt=&quot;prometheus architecture diagram&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;features&quot;&gt;Features&lt;&#x2F;h2&gt;
&lt;p&gt;A low-compromises prometheus, all the signals you need at near minimum cost.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;cardinality-control&quot;&gt;Cardinality Control&lt;&#x2F;h3&gt;
&lt;p&gt;Drops &lt;strong&gt;97% of kubelet metrics&lt;&#x2F;strong&gt;, configures minimal &lt;code&gt;kube-state-metrics&lt;&#x2F;code&gt;, &lt;code&gt;node-exporter&lt;&#x2F;code&gt; (with some cli arg configurations and some relabelling based drops) and a few other apps. In the end we have a cluster running with &lt;strong&gt;7000 metrics&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;&#x2F;imgs&#x2F;prometheus&#x2F;cardinality-control.png&quot;&gt;&lt;img src=&quot;&#x2F;imgs&#x2F;prometheus&#x2F;cardinality-control.png&quot; alt=&quot;cardinality control panel&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;It&#x27;s higher than my idealistic estimate - particularly considering this is a one node cluster atm. It can definitely be tuned lower with extra effort, but this is a good checkpoint. This is low enough that &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;grafana.com&#x2F;pricing&#x2F;&quot;&gt;grafana cloud considers it free&lt;&#x2F;a&gt;. So is it?&lt;&#x2F;p&gt;
&lt;h3 id=&quot;low-utilization&quot;&gt;Low Utilization&lt;&#x2F;h3&gt;
&lt;p&gt;The end result is a prometheus averaging &lt;code&gt;&amp;lt;0.01&lt;&#x2F;code&gt; cores and with &lt;code&gt;&amp;lt;512Mi&lt;&#x2F;code&gt; memory use over a week with &lt;code&gt;30d&lt;&#x2F;code&gt; retention:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;imgs&#x2F;prometheus&#x2F;minimal-prom.png&quot; alt=&quot;cpu &#x2F; memory utilisation 7d means&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;auxilary-features&quot;&gt;Auxilary Features&lt;&#x2F;h3&gt;
&lt;ol&gt;
&lt;li&gt;Tempo for &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kube-rs&#x2F;controller-rs&#x2F;pull&#x2F;72#issuecomment-2335150121&quot;&gt;exemplars&lt;&#x2F;a&gt;, so we can cross-link from metric panels to grafana&#x27;s trace viewer.&lt;&#x2F;li&gt;
&lt;li&gt;Metrics Server for basic HPA scaling and &lt;code&gt;kubectl top&lt;&#x2F;code&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;blockquote&gt;
&lt;p&gt;👺: You technically don&#x27;t need &lt;code&gt;metrics-server&lt;&#x2F;code&gt; if you are in an unscalable homelab, but having access to &lt;code&gt;kubectl top&lt;&#x2F;code&gt; is nice. Another avenue for homelab scaling is &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;keda.sh&#x2F;&quot;&gt;keda&lt;&#x2F;a&gt; with its &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;keda.sh&#x2F;docs&#x2F;2.15&#x2F;reference&#x2F;scaledobject-spec&#x2F;#minreplicacount&quot;&gt;scale to zero&lt;&#x2F;a&gt; ability.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;cx-dashboards&quot;&gt;CX Dashboards&lt;&#x2F;h3&gt;
&lt;p&gt;The screenshots here are from my own homebrew &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;homelab&#x2F;tree&#x2F;main&#x2F;dashboards&quot;&gt;dashboards&lt;&#x2F;a&gt; released separately. See the future post for these.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;links-comments&quot;&gt;Links &#x2F; Comments&lt;&#x2F;h2&gt;
&lt;p&gt;Posted on &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;hachyderm.io&#x2F;@clux&#x2F;113097824893646159&quot;&gt;mastodon&lt;&#x2F;a&gt;. Feel free to comment &#x2F; &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;homelab&#x2F;issues&quot;&gt;raise issues&lt;&#x2F;a&gt; &#x2F; &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;probes&#x2F;edit&#x2F;main&#x2F;content&#x2F;post&#x2F;2024-09-07-prometheus-minified.md&quot;&gt;suggest an edit&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>You Will (Not) Scale Prometheus</title>
        <published>2024-08-15T00:00:00+00:00</published>
        <updated>2024-08-15T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://clux.dev/post/2024-08-15-thanos-misadventures-with-scaling/"/>
        <id>https://clux.dev/post/2024-08-15-thanos-misadventures-with-scaling/</id>
        
        <content type="html" xml:base="https://clux.dev/post/2024-08-15-thanos-misadventures-with-scaling/">&lt;p&gt;To aid a memory obese &lt;code&gt;prometheus&lt;&#x2F;code&gt;, I recently helped in attempting to slowly shift a cluster over to &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;prometheus.io&#x2F;blog&#x2F;2021&#x2F;11&#x2F;16&#x2F;agent&#x2F;&quot;&gt;prometheus agent mode&lt;&#x2F;a&gt; sending data to &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;thanos.io&#x2F;tip&#x2F;components&#x2F;receive.md&#x2F;&quot;&gt;thanos receive&lt;&#x2F;a&gt; over the last couple of months. I have now personally given up on this goal due to a variety of reasons, and this post explores why.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;background-setup&quot;&gt;Background Setup&lt;&#x2F;h2&gt;
&lt;p&gt;The original setup we started out with is basically this (via &lt;a href=&quot;&#x2F;post&#x2F;2022-01-11-prometheus-ecosystem&#x2F;&quot;&gt;2022 ecosystem post&lt;&#x2F;a&gt;):
&lt;a href=&quot;&#x2F;imgs&#x2F;prometheus&#x2F;ecosystem-miro.webp&quot;&gt;&lt;img src=&quot;&#x2F;imgs&#x2F;prometheus&#x2F;ecosystem-miro.webp&quot; alt=&quot;prometheus architecture diagram&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;and we were planning to move to this:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;&#x2F;imgs&#x2F;prometheus&#x2F;agentmode.webp&quot;&gt;&lt;img src=&quot;&#x2F;imgs&#x2F;prometheus&#x2F;agentmode.webp&quot; alt=&quot;prometheus architecture diagram agent mode&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The key changes here:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;enable &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;prometheus.io&#x2F;docs&#x2F;prometheus&#x2F;latest&#x2F;feature_flags&#x2F;#prometheus-agent&quot;&gt;prometheus agent feature&lt;&#x2F;a&gt; limiting it to scraping and remote writes to receive&lt;&#x2F;li&gt;
&lt;li&gt;deploy &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;thanos.io&#x2F;tip&#x2F;components&#x2F;receive.md&#x2F;&quot;&gt;thanos receive&lt;&#x2F;a&gt; for short term metric storage + S3 uploader (no more sidecar)&lt;&#x2F;li&gt;
&lt;li&gt;deploy &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;thanos.io&#x2F;tip&#x2F;components&#x2F;rule.md&#x2F;&quot;&gt;thanos rule&lt;&#x2F;a&gt; as new evaluator, posting to alertmanager&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;With the 3 components replacing prometheus (agent, receive, ruler) in-theory having better scaling characteristics by themselves, with a cleaner, and more delineated area of responsibility.&lt;&#x2F;p&gt;
&lt;p&gt;Why chase better scaling characteristics? A single prometheus grows in size&#x2F;requests with amount of time series it scrapes, and it can only grow as long as you have enough RAM available. Eventually you run out of super-sized cloud nodes to run them. Have personally had to provision a 300GB memory node during a cardinality explosion, and would like to not deal with this ticking time bomb in the future.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;complexity-pickup&quot;&gt;Complexity &amp;amp; Pickup&lt;&#x2F;h2&gt;
&lt;p&gt;While the original setup can hardly be considered trivial, splitting one component into 3 sounds like a simple addition in theory.&lt;&#x2F;p&gt;
&lt;p&gt;However, while splitting a monolith might sound like a nice idea, actually operating such a distributed monolith is a different proposition. The existing complexity is splattered across 3 components in statefulsets and helm template gunk, and the operational complexity is compounded by these components not being as battle tested as the more traditional prometheus&#x2F;thanos setup.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;3-single-points-of-failure&quot;&gt;3 Single Points of Failure&lt;&#x2F;h3&gt;
&lt;p&gt;You will need improved alert coverage with the previous single point of failure getting split into 3 parts:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;thanos.io&#x2F;tip&#x2F;components&#x2F;rule.md&#x2F;#risk&quot;&gt;ruler query failures&lt;&#x2F;a&gt; means no alerts get evaluated even though metrics exists in the system.&lt;&#x2F;li&gt;
&lt;li&gt;agent mode downtime means evaluation works, but metrics likely absent&lt;&#x2F;li&gt;
&lt;li&gt;receive write failures &#x2F; downtime means rule evaluation will fail&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;The setup suffers from the &quot;who alerts about alerting failures&quot; problem. A single &lt;strong&gt;deadman&#x27;s switch&lt;&#x2F;strong&gt; is necessary, but not sufficient; as &lt;code&gt;ruler&lt;&#x2F;code&gt; can successfully send the &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;prometheus-community&#x2F;helm-charts&#x2F;blob&#x2F;d2566648d72d0ed136a38254985ccd25d6f894b8&#x2F;charts&#x2F;kube-prometheus-stack&#x2F;templates&#x2F;prometheus&#x2F;rules-1.14&#x2F;general.rules.yaml#L55-L88&quot;&gt;WatchDog alert&lt;&#x2F;a&gt; to your external ping service, despite the agent being down.&lt;&#x2F;p&gt;
&lt;p&gt;The &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;monitoring.mixins.dev&#x2F;thanos&#x2F;#thanos-receive&quot;&gt;mixins&lt;&#x2F;a&gt; provide a good starting point for the new thanos components that can be adapted, but it takes a little time to grok it all.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;configuration-splits&quot;&gt;Configuration Splits&lt;&#x2F;h3&gt;
&lt;p&gt;Since &lt;code&gt;thanos-ruler&lt;&#x2F;code&gt; is the new query evaluator, and we use &lt;code&gt;PrometheusRule&lt;&#x2F;code&gt; crds, these crds must be provisioned into &lt;code&gt;thanos-ruler&lt;&#x2F;code&gt; via &lt;code&gt;prometheus-operator&lt;&#x2F;code&gt;. On the helm side, this only works with &lt;code&gt;kube-prometheus-stack&lt;&#x2F;code&gt; creating the &lt;code&gt;ThanosRuler&lt;&#x2F;code&gt; crd (which &lt;code&gt;prometheus-operator&lt;&#x2F;code&gt; will use to generate &lt;code&gt;thanos-ruler&lt;&#x2F;code&gt;), in the same way this chart normally creates the &lt;code&gt;Prometheus&lt;&#x2F;code&gt; &#x2F; &lt;code&gt;PrometheusAgent&lt;&#x2F;code&gt; crd (to generate the &lt;code&gt;prometheus&lt;&#x2F;code&gt; or &lt;code&gt;prometheus-agent&lt;&#x2F;code&gt; pair).&lt;&#x2F;p&gt;
&lt;p&gt;Specifically, we have to NOT enable &lt;code&gt;ruler&lt;&#x2F;code&gt; from the &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bitnami&#x2F;charts&#x2F;blob&#x2F;main&#x2F;bitnami&#x2F;thanos&#x2F;README.md&quot;&gt;bitnami&#x2F;thanos&lt;&#x2F;a&gt; chart, and have a thanos component live inside &lt;code&gt;kube-prometheus-stack&lt;&#x2F;code&gt; instead. Not a major stumbling block, but goes to show some of the many sources of confusion&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;There&#x27;s a bigger stumbling block for &lt;code&gt;thanos-receive&lt;&#x2F;code&gt;, but more on that in the speculation section.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;new-features-slow-iteration&quot;&gt;New Features, Slow Iteration&lt;&#x2F;h3&gt;
&lt;p&gt;Agent mode, with a writing ruler also feels fairly new (in prometheus time), and support for all the features generally takes a long time to fully propagate from prometheus, to thanos, to the operator.&lt;&#x2F;p&gt;
&lt;p&gt;As an example see; &lt;code&gt;keep_firing_for&lt;&#x2F;code&gt;:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Nov 2022 :: &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;prometheus&#x2F;prometheus&#x2F;issues&#x2F;11570&quot;&gt;Raised in prometheus&lt;&#x2F;a&gt; (me, lazy)&lt;&#x2F;li&gt;
&lt;li&gt;Feb 2023 :: &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;prometheus&#x2F;prometheus&#x2F;releases&#x2F;tag&#x2F;v2.42.0&quot;&gt;Implemented in prometheus&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;June 2023 :: &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;prometheus-operator&#x2F;prometheus-operator&#x2F;releases&#x2F;tag&#x2F;v0.66.0&quot;&gt;Support in prometheus-operator for PrometheusRule&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Jan 2024 :: &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;thanos-io&#x2F;thanos&#x2F;releases&#x2F;tag&#x2F;v0.34.0&quot;&gt;Support in thanos&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;March 2024 :: &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;prometheus-operator&#x2F;prometheus-operator&#x2F;releases&#x2F;tag&#x2F;v0.72.0&quot;&gt;Support in prometheus-operator for ThanosRuler&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;So as you can see, it&#x27;s a long chain where &lt;code&gt;ruler&lt;&#x2F;code&gt; sits at the very end, and &lt;strong&gt;to me&lt;&#x2F;strong&gt; this it is indicative of the amount of use &lt;code&gt;ruler&lt;&#x2F;code&gt; realistically gets. To drive that home, I&#x27;ve also had to upstream &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;prometheus-community&#x2F;helm-charts&#x2F;pull&#x2F;4092&quot;&gt;remote write ruler functionality in the chart&lt;&#x2F;a&gt;, and my minor &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;thanos-io&#x2F;thanos&#x2F;issues&#x2F;created_by&#x2F;clux&quot;&gt;issues in thanos&lt;&#x2F;a&gt; sit untouched.&lt;&#x2F;p&gt;
&lt;p&gt;Anyway, not really trying to shame these projects, things take time, and volunteer work is volunteer work. But the clear outcome here is that many features are not necessarily very battle tested.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;performance-problems&quot;&gt;Performance Problems&lt;&#x2F;h2&gt;
&lt;p&gt;Unfortunately, the performance from this setup (after weeks of tuning) was still &lt;strong&gt;2x-3x worse&lt;&#x2F;strong&gt; than the original HA prometheus pair setup (again from the &lt;a href=&quot;&#x2F;post&#x2F;2022-01-11-prometheus-ecosystem&#x2F;&quot;&gt;2022 post&lt;&#x2F;a&gt; &#x2F; 1st diagram above). These new subcomponents individually perform worse than the original prometheus, and have worse scaling characteristics. Rule evaluation performance also seriously deteriorated.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;benchmark&quot;&gt;Benchmark&lt;&#x2F;h3&gt;
&lt;p&gt;Comparison is made using prometheus &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;prometheus&#x2F;prometheus&#x2F;releases&#x2F;tag&#x2F;v2.53.1&quot;&gt;v2.53.1&lt;&#x2F;a&gt; and thanos &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;thanos-io&#x2F;thanos&#x2F;releases&#x2F;tag&#x2F;v0.36.0&quot;&gt;0.36.0&lt;&#x2F;a&gt; and consider &lt;code&gt;mean&lt;&#x2F;code&gt; utilisation measurements from cadvisor metrics on a cluster with a &lt;code&gt;~2.5M&lt;&#x2F;code&gt; time series per prometheus replica. We only consider the biggest statefulsets (receive, prometheus&#x2F;agent, ruler, storegw). In either setup &lt;code&gt;receive&lt;&#x2F;code&gt; or &lt;code&gt;prometheus&lt;&#x2F;code&gt; were running on a &lt;code&gt;3d&lt;&#x2F;code&gt; local retention.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;results&quot;&gt;Results&lt;&#x2F;h3&gt;
&lt;p&gt;Over full workdays we saw &lt;code&gt;~13 cores&lt;&#x2F;code&gt; constantly churning, and &lt;code&gt;~80 GB&lt;&#x2F;code&gt; of memory used by the 3 statefulsets (10 cores and 50GB alone from &lt;code&gt;receive&lt;&#x2F;code&gt;):&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;&#x2F;imgs&#x2F;prometheus&#x2F;sts-load-agentmode.png&quot;&gt;&lt;img src=&quot;&#x2F;imgs&#x2F;prometheus&#x2F;sts-load-agentmode.png&quot; alt=&quot;measurements for agent mode&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Compare to the same setup using a normal HA prometheus (no ruler, no receive, local eval) and we have &lt;code&gt;~4 cores&lt;&#x2F;code&gt; and &lt;code&gt;&amp;lt;30GB&lt;&#x2F;code&gt; memory:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;&#x2F;imgs&#x2F;prometheus&#x2F;sts-load-regular.png&quot;&gt;&lt;img src=&quot;&#x2F;imgs&#x2F;prometheus&#x2F;sts-load-regular.png&quot; alt=&quot;measurements for normal prometheus mode&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;So cluster wise, we end up with a between 2x-3x drop by switching back to non-agented, monolithic prometheus.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;receive-performance&quot;&gt;Receive Performance&lt;&#x2F;h3&gt;
&lt;p&gt;From the same graphs we see that the portion of prometheus that got factored out into thanos receive, is &lt;strong&gt;using roughly 2x the CPU and memory of a standalone prometheus&lt;&#x2F;strong&gt;, despite not doing any evaluation &#x2F; scraping.&lt;&#x2F;p&gt;
&lt;details&gt;&lt;summary style=&quot;cursor:pointer;color:#0af&quot;&gt;&lt;b&gt;Addendum: Configuration Attempts&lt;&#x2F;b&gt;&lt;&#x2F;summary&gt;
&lt;p&gt;Tried various flags here over many iterations to see if anything had any practical effects.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;thanos.io&#x2F;tip&#x2F;components&#x2F;receive.md&#x2F;#ketama-recommended&quot;&gt;new ketama hashing algorithm&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;--enable-auto-gomemlimit&lt;&#x2F;code&gt; - barely helps&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;--tsdb.wal-compression&lt;&#x2F;code&gt; - disk benefit only afaikt&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;--receive.forward.async-workers=1000&lt;&#x2F;code&gt;  - irrelevant, receive does not forward requests in our setup&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;The receiver was run as minimally with &lt;code&gt;3d&lt;&#x2F;code&gt; retention, and 1 replication factor, 2 replicas. More about this later.&lt;&#x2F;p&gt;
&lt;&#x2F;details&gt;
&lt;h3 id=&quot;agent-performance&quot;&gt;Agent Performance&lt;&#x2F;h3&gt;
&lt;p&gt;The agents (which now should only do scraping and remote write into receivers) are surprisingly not free either. From graph above, the memory utilisation is close to a full prometheus!&lt;&#x2F;p&gt;
&lt;p&gt;There is at least &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;prometheus&#x2F;prometheus&#x2F;issues&#x2F;10431&quot;&gt;one open related bug for this&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;ruler-performance&quot;&gt;Ruler Performance&lt;&#x2F;h3&gt;
&lt;p&gt;Ruler evaluation performance when having to go through queriers is also impacted, and it surprisingly scales non-linearly with number of ruler replicas.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;imgs&#x2F;prometheus&#x2F;ruler-time-by-pod.webp&quot; alt=&quot;ruler evaluation time per pod over 1h&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;This panel evaluates &lt;code&gt;sum(avg_over_time(prometheus_rule_group_last_duration_seconds[1h])) by (pod)&lt;&#x2F;code&gt; per pod over three modes:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;up until 08&#x2F;06 12ish :: 2 replicas of thanos ruler&lt;&#x2F;li&gt;
&lt;li&gt;middle on 08&#x2F;07 :: 1 replica of thanos ruler&lt;&#x2F;li&gt;
&lt;li&gt;end on 08&#x2F;08 :: 2 replicas of prometheus (non-agent mode)&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;As you can see the query time increases within each pod when increasing replicas. Possibly this is load accumulating in the new distributed monolith, but a near 50% spike per ruler? In either case, the actual comparison of &lt;code&gt;3s avg&lt;&#x2F;code&gt; vs &lt;code&gt;50s avg&lt;&#x2F;code&gt; is kind of outrageous. Maybe this is misreading it, but the system definitely felt more sluggish in general.&lt;&#x2F;p&gt;
&lt;p&gt;No rules generally missed evaluations, but it got close to it, and that was not a good sign given it was in our low-load testing cluster.&lt;&#x2F;p&gt;
&lt;p&gt;Beyond this, this component is nice; seemingly not bad in terms of utilisation, and easy to debug for the basics. &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;thanos.io&#x2F;tip&#x2F;components&#x2F;rule.md&#x2F;#must-have-essential-ruler-alerts&quot;&gt;Ruler metrics docs&lt;&#x2F;a&gt; and &lt;code&gt;sum(increase(prometheus_rule_evaluation_failures_total{}[1h])) by (pod)&lt;&#x2F;code&gt; in particular were very helpful.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;speculation&quot;&gt;Speculation&lt;&#x2F;h2&gt;
&lt;p&gt;..on why it performs like this, and on whether we are expecting too much from this setup.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;removing-colocation&quot;&gt;Removing Colocation&lt;&#x2F;h3&gt;
&lt;p&gt;This is tiny brain post-rationalisation, but maybe having a big block of memory directly available for 3 purposes (scrape &#x2F; storage &#x2F; eval) without having to go through 3 hops and buffer points (ruler → query → receive) is a big deal.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;split-receivers&quot;&gt;Split Receivers&lt;&#x2F;h3&gt;
&lt;p&gt;There is a lot more complexity under the surface of for actually running &lt;code&gt;receive&lt;&#x2F;code&gt; well. I ran the basic setup, and probably paid for it.&lt;&#x2F;p&gt;
&lt;p&gt;For people that need to go deeper; there&#x27;s a &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;thanos-io&#x2F;thanos&#x2F;blob&#x2F;release-0.22&#x2F;docs&#x2F;proposals-accepted&#x2F;202012-receive-split.md&quot;&gt;split receiver setup&lt;&#x2F;a&gt;, and a &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;observatorium&#x2F;thanos-receive-controller&quot;&gt;third-party controller to manage its hashring&lt;&#x2F;a&gt; that people &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;thanos-io&#x2F;thanos&#x2F;issues&#x2F;6784&quot;&gt;recommend to avoid write downtime&lt;&#x2F;a&gt; (not a problem I even noticed). By using it right, supposedly we get to &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;thanos-io&#x2F;thanos&#x2F;issues&#x2F;7054#issuecomment-1933270766&quot;&gt;double the utilisation again&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;My lazy take here is that if the system performs badly with replication factor 1, the prospect of more complexity and a futher utilisation increase is not particularly inviting. Even if such a system scales, paying your way out of it with this much pointless compute resources feels wrong.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;bigger-evaluation-window&quot;&gt;Bigger Evaluation Window&lt;&#x2F;h3&gt;
&lt;p&gt;There is a chance that a good portion of the &lt;code&gt;ruler&lt;&#x2F;code&gt; time has come from going through &lt;code&gt;thanos-query&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Routing like this was a deliberate choice so that people could write alerts referencing more than &lt;code&gt;3d&lt;&#x2F;code&gt; (local retention) worth of data to do more advanced rules for anomaly detection. This &lt;strong&gt;should not&lt;&#x2F;strong&gt; have impacted most of our rules since most do not do this type of long range computations..&lt;&#x2F;p&gt;
&lt;p&gt;I tried moving the &lt;code&gt;ruler&lt;&#x2F;code&gt; query endpoint directly to &lt;code&gt;receive&lt;&#x2F;code&gt; to try to falsify this assumption, but this did not work from &lt;code&gt;ruler&lt;&#x2F;code&gt; using the same syntax as query&#x2F;storegw.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;wrong-tool-for-the-job&quot;&gt;Wrong Tool For the Job&lt;&#x2F;h3&gt;
&lt;p&gt;Agent mode on the prometheus side seems perhaps more geared to network gapped &#x2F; edge &#x2F; multi-cluster setups than what we were looking for judging by the &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;prometheus.io&#x2F;blog&#x2F;2021&#x2F;11&#x2F;16&#x2F;agent&#x2F;&quot;&gt;grafana original announce&lt;&#x2F;a&gt; + &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;thanos.io&#x2F;tip&#x2F;components&#x2F;receive.md&#x2F;#receiver&quot;&gt;thanos receive docs&lt;&#x2F;a&gt;).&lt;&#x2F;p&gt;
&lt;p&gt;It’s also possible that other solutions perform better &#x2F; are better suited, e.g. grafana mimir. This is all speculation.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;confusing-agent-promise&quot;&gt;Confusing Agent Promise&lt;&#x2F;h2&gt;
&lt;p&gt;Perhaps the most confusing thing to me is that &lt;strong&gt;agent mode does not act like an agent&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;You cannot run it as a &lt;code&gt;DaemonSet&lt;&#x2F;code&gt;, you merely split the monolith out into a distributed monolith. This is a present-day limitation. Despite people willing to help out, the &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;prometheus-operator&#x2F;prometheus-operator&#x2F;issues&#x2F;5495&quot;&gt;issue&lt;&#x2F;a&gt; remains unmoving. I had hoped google would upstream its actual statefulset agent design (mentioned in the issue), but so far that has not materialised. Who knows if &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;prometheus&#x2F;prometheus&#x2F;discussions&#x2F;10979&quot;&gt;agent mode will even become stable&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;On the grafana cloud side, the &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;grafana.com&#x2F;docs&#x2F;agent&#x2F;latest&#x2F;static&#x2F;operation-guide&#x2F;&quot;&gt;grafana agent&lt;&#x2F;a&gt; did &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;grafana&#x2F;agent&#x2F;blob&#x2F;c281c76df02b7b1ce4d3c0192915628343f4c897&#x2F;operations&#x2F;helm&#x2F;charts&#x2F;grafana-agent&#x2F;templates&#x2F;controllers&#x2F;daemonset.yaml&quot;&gt;support running as a daemonset&lt;&#x2F;a&gt;, but &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;grafana.com&#x2F;blog&#x2F;2024&#x2F;04&#x2F;09&#x2F;grafana-agent-to-grafana-alloy-opentelemetry-collector-faq&#x2F;&quot;&gt;it is now EOL&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;It’s been &lt;em&gt;only&lt;&#x2F;em&gt; 3 years since &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;prometheus.io&#x2F;blog&#x2F;2021&#x2F;11&#x2F;16&#x2F;agent&#x2F;&quot;&gt;agent mode was announced&lt;&#x2F;a&gt;. Now, 2 years later the whole &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;prometheus&#x2F;prometheus&#x2F;issues&#x2F;13105&quot;&gt;remote write protocol is being updated&lt;&#x2F;a&gt; and &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;prometheus&#x2F;prometheus&#x2F;releases&#x2F;tag&#x2F;v2.54.0&quot;&gt;just landed in prometheus&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;So, what I am trying to say; who knows what the future really brings here.
It might be another couple of years before new remote write gets propagated through the thanos ecosysystem.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;scaling-alternatives&quot;&gt;Scaling Alternatives&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;sharding&quot;&gt;Sharding&lt;&#x2F;h3&gt;
&lt;p&gt;Maybe the better way forward for scaling is not to twist prometheus into something it&#x27;s not - and create a staggeringly complex system - but by making more prometheuses.&lt;&#x2F;p&gt;
&lt;p&gt;For instance; &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;prometheus-operator&#x2F;prometheus-operator&#x2F;blob&#x2F;main&#x2F;Documentation&#x2F;user-guides&#x2F;shards-and-replicas.md&quot;&gt;prometheus operator&#x27;s sharding guide&lt;&#x2F;a&gt; can help partition a classic prometheus, but you do need partition and label management, uneven shard request (cpu&#x2F;mem) management (due to some shards scraping more metrics and thus having more load), so it&#x27;s definitely on the more manual side.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;brain: ..you would also need to split kubelet metrics across namespaces (or whatever you use as your shard) via some templated servicemonitor, and you&#x27;d need a bunch of templated datasources in your master grafana that your dashboards would need to be parametrised for. Maybe you also need one main-cluster prometheus that can scrape all the kubelet metrics for cluster-wide views.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Not impossible, but clearly also an amount of faff. This is standard configuration faff though; not distributed systems faff.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;lowering-local-retention&quot;&gt;Lowering Local Retention&lt;&#x2F;h3&gt;
&lt;p&gt;If the problem is delaying scaling up to something complex, we could also lean on the classic thanos split and keep reducing local prometheus &lt;code&gt;retention&lt;&#x2F;code&gt; time down to a single day or lower (as long as you are quick on detecting sidecar failures so you don&#x27;t lose data).&lt;&#x2F;p&gt;
&lt;p&gt;This is a temporary solution though. On my homelab I can run &lt;code&gt;30d&lt;&#x2F;code&gt; retention, but with 5M time series - in a company setting - I need &lt;code&gt;3d&lt;&#x2F;code&gt; to maintain a sensible utilisation.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;cardinality-enforcement&quot;&gt;Cardinality Enforcement&lt;&#x2F;h3&gt;
&lt;p&gt;This is the &quot;unscaling&quot; approach I run in my homelab. Granted it is easier to justify there, but there are real concrete steps you can do to really reduce the prometheus utilisation:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;drop big histograms (easy) &#x2F; move to native histograms (..some day)&lt;&#x2F;li&gt;
&lt;li&gt;dropping pod enrichment (big replica counts X histograms = lots of cardinality)&lt;&#x2F;li&gt;
&lt;li&gt;Monitor your ingestion: &lt;code&gt;by (job)&lt;&#x2F;code&gt;, before and after relabellings, put alerts on fixed ingestion numbers&lt;&#x2F;li&gt;
&lt;li&gt;Make sure everyone uses &lt;code&gt;{Service,Pod}Monitor&lt;&#x2F;code&gt;s so above step is feasible&lt;&#x2F;li&gt;
&lt;li&gt;Drop most of kubelet metrics (most metrics are unused by dashboards or mixin alerts)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;I&#x27;ll probably explore this approach in more detail later on, because I think it&#x27;s the most sensible one; dilligence on the home court avoids all the complexity.&lt;&#x2F;p&gt;
&lt;p&gt;In the mean time, post is on &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;hachyderm.io&#x2F;@clux&#x2F;112967786148145839&quot;&gt;mastodon&lt;&#x2F;a&gt;, source is in the &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;probes&#x2F;blob&#x2F;main&#x2F;content&#x2F;post&#x2F;2024-09-15-thanos-receive-scale-fail.md&quot;&gt;probes repo&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;future&quot;&gt;Future&lt;&#x2F;h2&gt;
&lt;p&gt;No matter how you slice it, agent mode with thanos is certainly a complex beast whose configuration entangles a huge number of services; agent, operator, receive, query, store, compactor, ruler, adapters, alertmanager, grafana. You have a choice in how difficult you make this.&lt;&#x2F;p&gt;
&lt;p&gt;The performance characteristics measured above, while not initially impressive to me, is one point, but the complexity of the setup is what pushes it over the edge for me. If the stack becomes so complex that the entire thing cannot be understood if one key person leaves, then I would consider that a failure. This was hard enough to explain before &lt;code&gt;receive&lt;&#x2F;code&gt; and agent mode.&lt;&#x2F;p&gt;
&lt;p&gt;If I have to wrangle with cardinality limits, relabellings, label enrichment, or create charts to multiply prometheuses, then this all seems more maintainable than &lt;code&gt;receive&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>kubectl hackery</title>
        <published>2024-08-11T00:00:00+00:00</published>
        <updated>2024-08-11T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://clux.dev/post/2024-08-11-kubectl-hackery/"/>
        <id>https://clux.dev/post/2024-08-11-kubectl-hackery/</id>
        
        <summary type="html">&lt;p&gt;Unusual helpers for cluster level resource debugging.&lt;&#x2F;p&gt;
</summary>
        
    </entry>
    <entry xml:lang="en">
        <title>Gratitude for 2023</title>
        <published>2023-12-31T00:00:00+00:00</published>
        <updated>2023-12-31T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://clux.dev/post/2023-12-31-annual-gratitude/"/>
        <id>https://clux.dev/post/2023-12-31-annual-gratitude/</id>
        
        <content type="html" xml:base="https://clux.dev/post/2023-12-31-annual-gratitude/">&lt;p&gt;The year is coming to a close, and as a small amount of self-reflection of my relatively fortunate and stable situation, here&#x27;s a list of things in life that made me happy.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;video&quot;&gt;Video&lt;&#x2F;h2&gt;
&lt;p&gt;In general, I like well presented video exposés, impressive video game footage, and watch competitions from everything from piano competitions to SC2 esports tournaments. Some frequented returns:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;@BobbyBroccoli&quot;&gt;yt&#x2F;BobbyBroccoli&lt;&#x2F;a&gt; :: for great long form science controvery deep dives&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;@Tantacrul&quot;&gt;yt&#x2F;Tantacrul&lt;&#x2F;a&gt; :: for a yearly hinge expose on music&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;@hbomberguy&quot;&gt;yt&#x2F;hbomberguy&lt;&#x2F;a&gt; :: for his yearly expose on who knows what&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;@thejuicemedia&quot;&gt;yt&#x2F;thejuicemedia&lt;&#x2F;a&gt; :: for their snappy government parody ads&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;@MonarchsFactory&quot;&gt;yt&#x2F;MonarchsFactory&lt;&#x2F;a&gt; :: TTRPG concepts and mythology&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;@mcolville&quot;&gt;yt&#x2F;mcolville&lt;&#x2F;a&gt; :: TTRPG game mechanics and game design&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;@chopininstitute&quot;&gt;yt&#x2F;chopininstitute&lt;&#x2F;a&gt; :: classical piano recitals and the &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;International_Chopin_Piano_Competition&quot;&gt;chopin competition&lt;&#x2F;a&gt; (&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;playlist?list=PLTmn2qD3aSQveuDKarRUibMEjFqJd1t1U&quot;&gt;last winner&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;@HarstemCasts&quot;&gt;yt&#x2F;HarstemCasts&lt;&#x2F;a&gt; :: intelligent starcraft 2 casts from top level player when you need a break&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;@ESLArchives&quot;&gt;yt&#x2F;ESLArchives&lt;&#x2F;a&gt; :: SC2&#x2F;Dota2 tournament vods from &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;liquipedia.net&#x2F;starcraft2&#x2F;Electronic_Sports_League&quot;&gt;ESL&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;@afreecatvesports432&#x2F;videos&quot;&gt;yt&#x2F;AfreecaTV&lt;&#x2F;a&gt; :: more starcraft: &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;liquipedia.net&#x2F;starcraft2&#x2F;Global_StarCraft_II_League&quot;&gt;GSL&lt;&#x2F;a&gt; + &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;liquipedia.net&#x2F;starcraft&#x2F;AfreecaTV_StarCraft_League_Remastered&quot;&gt;ASL&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;@DoshDoshington&quot;&gt;yt&#x2F;DoshDoshington&lt;&#x2F;a&gt; :: for well-narrated Factorio Mod runthroughs&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;@KimuraTails&quot;&gt;yt&#x2F;KimuraTails&lt;&#x2F;a&gt; :: insane Trackmania (united) TASes&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;@cncf&quot;&gt;yt&#x2F;cncf&lt;&#x2F;a&gt; :: boring conference talks on cloud tech, but they &lt;a href=&quot;&#x2F;post&#x2F;2023-12-22-kubecon-chicago-log&quot;&gt;allowed me to avoid some flying&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;@HealthyGamerGG&quot;&gt;yt&#x2F;HealthyGamerGG&lt;&#x2F;a&gt; :: Dr K. with a pragmatic stoicism + meditation focused philosophy takes&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Would I still watch as much youtube without &lt;code&gt;2X&lt;&#x2F;code&gt; on all speech or with ads? Probably not. Long form media is a lesser toll on my continually stretched focus though.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;As for actual full-runtime content, most my streaming services were cancelled last year, and the only one left is crunchyroll, which I guess makes me a full time weeb now. I would fight that, but &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Kaguya-sama:_Love_Is_War_(TV_series)&quot;&gt;Love is War&lt;&#x2F;a&gt; and &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;myanimelist.net&#x2F;anime&#x2F;50265&#x2F;Spy_x_Family&quot;&gt;Spy x Family&lt;&#x2F;a&gt; were also the funniest shit this year to me.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;hardware&quot;&gt;Hardware&lt;&#x2F;h2&gt;
&lt;p&gt;2023 was an upgrade year, a first since 2017, so have once again delved into the increasingly confusing realm of hardware for my &lt;a href=&quot;&#x2F;tags&#x2F;linux&quot;&gt;#linux&lt;&#x2F;a&gt; desktop workstation. &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;@Level1Techs&quot;&gt;Wendell from Level1Tech&lt;&#x2F;a&gt; + &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;@GamersNexus&quot;&gt;GamersNexus&lt;&#x2F;a&gt; were the most helpful for guiding me in good linux-compatible setups. Ended up going full &lt;code&gt;AMD&lt;&#x2F;code&gt; to make my time with &lt;code&gt;Wayland&lt;&#x2F;code&gt; less &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;wiki.hyprland.org&#x2F;Nvidia&#x2F;&quot;&gt;painful&lt;&#x2F;a&gt;, and with less &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;swaywm&#x2F;sway&#x2F;pull&#x2F;6615&quot;&gt;funny flags&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The new rig is great. It has ~4x faster compile-iteration cycles, and it uses less power than my old one!&lt;&#x2F;p&gt;
&lt;h2 id=&quot;games&quot;&gt;Games&lt;&#x2F;h2&gt;
&lt;p&gt;On the steam front, my timesinks were heavier games for a change. One even from this year:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Baldur&#x27;s Gate 3&lt;&#x2F;code&gt; obviously. I have spent &lt;a href=&quot;&#x2F;post&#x2F;2022-04-12-baldurs-roll&#x2F;&quot;&gt;days just theorycrafting&lt;&#x2F;a&gt; its predecessors, and it&#x27;s GOTY for a reason. Great storytelling, lots of great game mechanic ideas for making &lt;code&gt;5e&lt;&#x2F;code&gt; better. RIP September.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;Borderlands 3&lt;&#x2F;code&gt;. BL2 still holds a special place in my heart for its chill coop, item hunting &#x2F; diablo vibes, so &lt;strong&gt;this year&lt;&#x2F;strong&gt;, when &lt;code&gt;r&#x2F;bl3&lt;&#x2F;code&gt; started being positive again - after years of annoying users by breaking the game, nerfing builds, changing the endgame - and my PC got upgraded, it was time. The weapon farming system is fun, the builds are cool, and the Cthulhu themed expansion really stands out as exceptionally beautiful. RIP July.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;473950&#x2F;Manifold_Garden&#x2F;&quot;&gt;Manifold Garden&lt;&#x2F;a&gt; was the surprise hit. Its infinitely repeating take on first-person puzzle solving, ventures into a deeply psychadelic fractal space, and one that is captivatingly beautiful.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;The amount of theorycrafting videos consumed during the RPG periods also shows that the desire to min-max is still very much alive.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;coffee&quot;&gt;Coffee&lt;&#x2F;h2&gt;
&lt;p&gt;To stay &lt;em&gt;woke&lt;&#x2F;em&gt;, I rabbit-holed into home-espresso making (like many of my tech friends), and am now able make a great cup with pretty cheap components (basic delonghi dedica + non-pressurized portafilter + a grinder), given good beans as a result. While the famous &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;@jameshoffmann&quot;&gt;hoffmann&lt;&#x2F;a&gt; (or &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;@hamesjoffmann&quot;&gt;joffman&lt;&#x2F;a&gt;) was helpful for his insights into coffee science, I did not need to min-max this. That said, fun side-project.&lt;&#x2F;p&gt;
&lt;p&gt;I occasionally try to replicate the perfect asian dirty coffee, or a thai style es-yen, but most of the time I just pull a shot, ice it, and pour over some oatly for a great lazy iced latte.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;open-source&quot;&gt;Open Source&lt;&#x2F;h2&gt;
&lt;p&gt;The &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kube-rs&quot;&gt;kube-rs&lt;&#x2F;a&gt; ecosystem continues with &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kube-rs&#x2F;kube&#x2F;releases&quot;&gt;13 new kube releases&lt;&#x2F;a&gt; this year. Lots of features landed; &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kube-rs&#x2F;kube&#x2F;pull&#x2F;1311&quot;&gt;socks5 proxying&lt;&#x2F;a&gt;, &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kube-rs&#x2F;kube&#x2F;pull&#x2F;1261&quot;&gt;rustls default&lt;&#x2F;a&gt;, new configs for &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;kube&#x2F;latest&#x2F;kube&#x2F;runtime&#x2F;watcher&#x2F;struct.Config.html&quot;&gt;watcher&lt;&#x2F;a&gt; + &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;kube&#x2F;latest&#x2F;kube&#x2F;runtime&#x2F;controller&#x2F;struct.Config.html&quot;&gt;Controller&lt;&#x2F;a&gt;, &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kube-rs&#x2F;kube&#x2F;pull&#x2F;1255&quot;&gt;streaming lists&lt;&#x2F;a&gt;, &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;kube.rs&#x2F;controllers&#x2F;streams&#x2F;&quot;&gt;controller streams interface&lt;&#x2F;a&gt;, &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kube-rs&#x2F;kube&#x2F;pull&#x2F;1229&quot;&gt;oidc refresh&lt;&#x2F;a&gt;, &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kube-rs&#x2F;kube&#x2F;pull&#x2F;1137&quot;&gt;metadata api&lt;&#x2F;a&gt; + &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kube-rs&#x2F;kube&#x2F;pull&#x2F;1145&quot;&gt;metadata_watcher&lt;&#x2F;a&gt;, &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kube-rs&#x2F;kube&#x2F;pull&#x2F;1243&quot;&gt;store readiness&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Thankfully, I can largely PM the ship, and leave most larger features to others. &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kube-rs&#x2F;kube&#x2F;issues&#x2F;1080&quot;&gt;Stream sharing&lt;&#x2F;a&gt; is close, &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kube-rs&#x2F;k8s-pb&quot;&gt;k8s-pb&lt;&#x2F;a&gt; integration can be started, &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kube-rs&#x2F;kube&#x2F;issues&#x2F;1032&quot;&gt;client-v2&lt;&#x2F;a&gt; is restarted, and am enjoying expanding &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;kube.rs&#x2F;&quot;&gt;docs on kube.rs&lt;&#x2F;a&gt; (particularly the &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kube-rs&#x2F;website&#x2F;issues&#x2F;5&quot;&gt;controller guide&lt;&#x2F;a&gt;) to simplify future Q&#x2F;A + upskill adopters.&lt;&#x2F;p&gt;
&lt;p&gt;Stepping outside kube, &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;kislyuk.github.io&#x2F;yq&#x2F;&quot;&gt;python-yq&lt;&#x2F;a&gt; has been &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;whyq&quot;&gt;rewritten in rust&lt;&#x2F;a&gt;. This is both a fun and &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;hachyderm.io&#x2F;@clux&#x2F;111031702227829219&quot;&gt;necessary&lt;&#x2F;a&gt; project for me (not solved by the &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mikefarah&#x2F;yq&#x2F;issues&#x2F;193&quot;&gt;go rewrite&lt;&#x2F;a&gt;). This is a small project, because we are just &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;whyq&#x2F;blob&#x2F;c6631590ebd170c5e09885a43cff476d6787e574&#x2F;yq.rs#L218-L219&quot;&gt;deferring&lt;&#x2F;a&gt; to &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jqlang&#x2F;jq&quot;&gt;jq&lt;&#x2F;a&gt;, but it is very satisfying &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;whyq&#x2F;blob&#x2F;c6631590ebd170c5e09885a43cff476d6787e574&#x2F;yq.rs#L1-L302&quot;&gt;how simple&lt;&#x2F;a&gt; things can be when you are not trying to re-invent the &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mikefarah&#x2F;yq&#x2F;tree&#x2F;master&#x2F;pkg&#x2F;yqlib&quot;&gt;wheels&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;helix&quot;&gt;Helix&lt;&#x2F;h2&gt;
&lt;p&gt;The &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;helix-editor.com&#x2F;&quot;&gt;helix editor&lt;&#x2F;a&gt; (replacing VS Code) is the first modal editor I&#x27;ve managed to stick to, and a big reason for this is &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;hachyderm.io&#x2F;@clux&#x2F;111302311059887332&quot;&gt;how compassionate the UX is&lt;&#x2F;a&gt;; menus give me forgotten shortcuts, commands are searchable, and the speculative LSP integrations are amazing.&lt;&#x2F;p&gt;
&lt;p&gt;Am actually using helix as my new &lt;a href=&quot;&#x2F;tags&#x2F;pkm&quot;&gt;#pkm&lt;&#x2F;a&gt; rather than &lt;code&gt;foam&lt;&#x2F;code&gt; because the &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;artempyanykh&#x2F;marksman&quot;&gt;markman lsp&lt;&#x2F;a&gt; actually lets me do most of what I expect from a second-brain anyway! Symbol search for H1s or H2s, and &lt;code&gt;Goto definition&lt;&#x2F;code&gt; for wikilinks are both unexpected LSP features.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;positivity&quot;&gt;Positivity&lt;&#x2F;h2&gt;
&lt;p&gt;In a world full of systemic problems, mute + block has never felt more valuable. I have aggressively hit &lt;code&gt;Dont recommend channel&lt;&#x2F;code&gt; on captive news channels, and &lt;code&gt;Indefinite mute&lt;&#x2F;code&gt; on excessively drama-peddling &#x2F; self-rightous profiles mastodon even when I largely agree with their general points.&lt;&#x2F;p&gt;
&lt;p&gt;With global problems, the cost of exposure is a draining negative energy; powerlessness, constant exposure to virtue signalling &#x2F; schadenfreude, and increasingly polarised and unhealthily dichotomous thinking, &lt;strong&gt;E.g. climate change discourse&lt;&#x2F;strong&gt;, frequently followed by either:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;denial - thanks to the existence of unrealistic and equally problematic solutions&lt;&#x2F;li&gt;
&lt;li&gt;anger - e.g. via activists that advocate for engaging in large scale industrial sabotage&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;blockquote&gt;
&lt;p&gt;Yes, i believe we are pretty fucked, but the fucking will continue whether I worry about it or not.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Twitter was terrible in always exposing you to the angriest threads about this. Thankfully, in its demise, Mastodon is an improvement for what I was using twitter for; cross-link to&#x2F;from blog-posts, follow posts from experts, and moderately engage while bored on a train. Here the &lt;code&gt;Mute&lt;&#x2F;code&gt; option actually works, negative echo chambers quickly get defederated, and you can&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mastodon&#x2F;mastodon&#x2F;issues&#x2F;12423&quot;&gt;*&lt;&#x2F;a&gt; move instances.&lt;&#x2F;p&gt;
&lt;p&gt;You could make &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;throwawayopinions.io&#x2F;the-paradox-of-intolerance.html&quot;&gt;several good arguments for leaving twitter&lt;&#x2F;a&gt;, but that was not the job of this post. I have found &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;hachyderm.io&#x2F;@clux&quot;&gt;a new place&lt;&#x2F;a&gt;, and it&#x27;s a happier one.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;If you want more positivity, you must opt-out of some negativity. Pick your battles.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h2 id=&quot;mountains&quot;&gt;Mountains&lt;&#x2F;h2&gt;
&lt;p&gt;This year changed my approach to exercise, changing my goals from setting PBs in running events &lt;a href=&quot;&#x2F;post&#x2F;2022-12-07-running-year&#x2F;&quot;&gt;like 2022&lt;&#x2F;a&gt;, to focus on fun, and exploring nearby mountains when they are available.&lt;&#x2F;p&gt;
&lt;p&gt;The biggest treks were the &lt;code&gt;5h&lt;&#x2F;code&gt; trail runs up &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.strava.com&#x2F;activities&#x2F;10459620853&quot;&gt;Doi Pui&lt;&#x2F;a&gt; + &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.strava.com&#x2F;activities&#x2F;9186995095&quot;&gt;Croix du Nivolet&lt;&#x2F;a&gt;, and the &lt;code&gt;3d&lt;&#x2F;code&gt; long &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.strava.com&#x2F;activities&#x2F;10282413401&quot;&gt;Kumano Kodo&lt;&#x2F;a&gt; pilgrimage trail with my partner. I also found incredible beauty and focus on hills requiring much less effort such as &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.strava.com&#x2F;activities&#x2F;10422346036&quot;&gt;Doi Suthep&lt;&#x2F;a&gt;, &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.strava.com&#x2F;activities&#x2F;9664374916&quot;&gt;Fløya&lt;&#x2F;a&gt;, &amp;amp; &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.strava.com&#x2F;activities&#x2F;9653652377&quot;&gt;Tindstinden&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;There is a concrete beauty to trail running and hiking that I did not get while optimizing for performance. You are always present in the mountains. No podcasts, no &quot;get-it-done&quot; mentality; the journey is its own reward. The experience lasts, unlike a &lt;code&gt;VO2max&lt;&#x2F;code&gt; bump.&lt;&#x2F;p&gt;
&lt;p&gt;Bigger hikes are less realistic outside of travel for me, so it&#x27;s still mostly flats. Air-travel is becoming a harder-to-defend privilege, but I have to recognise that it&#x27;s not really fair for a society to &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;news.climate.columbia.edu&#x2F;2023&#x2F;02&#x2F;15&#x2F;you-are-not-the-problem-climate-guilt-is-a-marketing-strategy&#x2F;&quot;&gt;offload climate guilt&lt;&#x2F;a&gt; on consumers despite a complete lack of systemic regulation.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Like, I am car free and child free, but it&#x27;s fucked that I feel the need to use that as an excuse.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h2 id=&quot;routine&quot;&gt;Routine&lt;&#x2F;h2&gt;
&lt;p&gt;Beyond the above, my life is still largely routine:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Walk to the park. Grind the coffee beans. Blitz some fruit. Triage issues. Play music. Appreciate beauty. Try to embrace being content, and try to be compassionate. Enjoy time with my partner.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Hoping that can continue in 2024. Here&#x27;s to another year!&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Talk log from KubeCon Chicago</title>
        <published>2023-12-22T00:00:00+00:00</published>
        <updated>2023-12-22T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://clux.dev/post/2023-12-22-kubecon-chicago-log/"/>
        <id>https://clux.dev/post/2023-12-22-kubecon-chicago-log/</id>
        
        <content type="html" xml:base="https://clux.dev/post/2023-12-22-kubecon-chicago-log/">&lt;p&gt;As time goes by, I find myself increasingly disinterested in actually travelling out to a convention, when my preferred method of consuming conference talks is overwhelmingly VOD form with 2x&#x2F;FF potential.&lt;&#x2F;p&gt;
&lt;p&gt;This is doubly so when the convention is increasingly corporate (like KubeCon), and the &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;c&#x2F;cloudnativefdn&#x2F;videos&quot;&gt;CNCF youtube channel&lt;&#x2F;a&gt; is in general high quality. Get it before your ad-blockers break.&lt;&#x2F;p&gt;
&lt;p&gt;This post contains a quick export from my personal notes on some significant talks at &lt;strong&gt;KubeConNA&#x27;23&lt;&#x2F;strong&gt; (make of them what you will).&lt;&#x2F;p&gt;
&lt;p&gt;My interest areas this kubecon fall broadly into these categories (and will group talks by these):&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;observability related&lt;&#x2F;strong&gt; :: maintain a lot of metrics related tooling&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;continuous deployment&lt;&#x2F;strong&gt; :: maintain a lot of ad-hoc cd tooling&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;security&lt;&#x2F;strong&gt; :: maintain a bunch of controllers and ad-hoc validations&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;networking&lt;&#x2F;strong&gt; :: traffic apis, mesh and other network sledgehammers (using occasionally)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;kubernetes&lt;&#x2F;strong&gt; :: everything else.. cool to see where the platform i build on top of end up going&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;maintainership&lt;&#x2F;strong&gt; :: am trying to scale &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kube-rs&quot;&gt;kube-rs&lt;&#x2F;a&gt; beyond myself&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;observability&quot;&gt;Observability&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;how-prometheus-halved-it-s-memory-storage&quot;&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=29yKJ1312AM&quot;&gt;How Prometheus Halved It&#x27;s Memory Storage&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;nice journey into prometheus space optimization and how the layout of their labels matter a lot. great work that everyone who upgraded prometheus this year benefitted from.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;evaluating-observability-agent-performance&quot;&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=BIaftvtFPHg&quot;&gt;Evaluating Observability Agent Performance&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;good overview of where the utilization overhead comes from and how to think in terms of backpressure.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;opentelemetry-what-s-next&quot;&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=OEGgmTNfYsU&quot;&gt;OpenTelemetry: What&#x27;s Next&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;they&#x27;re graduated now and deal with metrics (but still experimental w.r.t. rust).
imo it feels really strange to be shoehorning everything here into one agent, but we&#x27;ll see what benefits it can bring later (they keep talking about consistent metadata between them).&lt;&#x2F;p&gt;
&lt;h3 id=&quot;exploring-the-power-of-metrics-collection-with-opentelemetry&quot;&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=hsI7mCJ0JSE&quot;&gt;Exploring the Power of Metrics Collection with OpenTelemetry&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;after the 45m+ workshop, they get into the horrific setup they&#x27;ve made inlining scrapeConfigs inside collector crds to support metrics.
kind of look at this, and all i can think is &quot;why tho?&quot;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;keda-graduation-announcements&quot;&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=wYQ2cvSj6os&quot;&gt;KEDA Graduation Announcements&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;looks increasingly nice. (i need to kill the prometheus-adapter garbage template format i currently deal with.)&lt;&#x2F;p&gt;
&lt;p&gt;keda_ metrics, scaling modifiers, pausing, job scaling, prom caching, all seem like very nice features.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;all-you-need-to-know-about-prometheus-in-2023&quot;&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=xoaQ9RIDqfs&quot;&gt;All You Need to Know About Prometheus in 2023&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;very interesting talk if you are invested in this ecosystem.&lt;&#x2F;p&gt;
&lt;p&gt;they mention &lt;code&gt;keep_firing_for&lt;&#x2F;code&gt; landing which feels great (because it was &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;prometheus&#x2F;prometheus&#x2F;issues&#x2F;11570&quot;&gt;my suggestion&lt;&#x2F;a&gt;).&lt;&#x2F;p&gt;
&lt;p&gt;q&#x2F;a session reveal they think the otel collector is an anti-pattern for metrics (ruins active monitoring) and collector&#x27;s unconventional label use fucks with perf&#x2F;predictability. worth keeping in mind if you consider using otel agent for metrics.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;how-and-why-you-should-adopt-and-expose-oss-interfaces-like-otel-and-prometheus&quot;&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=D71fK2MFreI&quot;&gt;How and Why You Should Adopt and Expose OSS Interfaces Like Otel and Prometheus&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;This one was funny (to me, not actually funny). Google Monarch (their internal monitoring tool) exposing a promql interface so they can translate it to monarch.&lt;&#x2F;p&gt;
&lt;p&gt;lots of work for something people complain about so often (promql). goes to show that the thing people complain about is the thing people actually use.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;continuous-delivery&quot;&gt;Continuous Delivery&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;flux-2-0-and-beyond-oci-cosign&quot;&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=pO2-Kgbkziw&quot;&gt;Flux 2.0 and Beyond; OCI + Cosign&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;OCI feels like a better distribution method for Kubernetes yaml than with helm, and flux&#x27;s &lt;code&gt;source-controller&lt;&#x2F;code&gt; pulling oci packaged tarballs has a nice flow to it. OCI + Kustomization sounds workeable.
their selling points:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;colocation of artifacts + images + signatures&lt;&#x2F;li&gt;
&lt;li&gt;passwordless auth + keyless integrity verification&lt;&#x2F;li&gt;
&lt;li&gt;increased cd&#x2F;flux controller efficiency&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;personally, i just want to distance myself from helm &lt;strong&gt;upgrade&#x2F;releases&lt;&#x2F;strong&gt; as much possible and this is a nice + efficient way of doing that.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;wolfi-intro-to-the-linux-undistro&quot;&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=bXkXu_IKVdI&quot;&gt;Wolfi: Intro to the Linux Undistro&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;wolfi idea remains the same, and they got a lot of momentum behind it and chainguard.
decent build system, but lots of yaml.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;keeping-helm-reliable-stable-and-usable&quot;&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=QhzfJrLo0Vw&quot;&gt;Keeping Helm Reliable, Stable, and Usable&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;kind of a boring talk, but kept it in here to highlight one point; helm is slowing down because it&#x27;s the defacto standard.&lt;&#x2F;p&gt;
&lt;p&gt;so do not expect any new major features, WYSIWYG (including gotpl, toYaml | nindent, manual schemas)...&lt;&#x2F;p&gt;
&lt;h2 id=&quot;security&quot;&gt;Security&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;security-showdown-the-overconfident-operator-vs-the-nefarious&quot;&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=Y1rJY_UlLmM&quot;&gt;Security Showdown: The Overconfident Operator Vs the Nefarious...&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;entertaining and great talk about problems with wide access on laptops.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;arbitrary-code-file-execution-in-r-o-fs-am-i-write&quot;&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=jwdz-aYV5xE&quot;&gt;Arbitrary Code &amp;amp; File Execution in R&#x2F;O FS – Am I Write?&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;nice exploit demo of &lt;code&gt;readOnlyRootFileSystem&lt;&#x2F;code&gt; and ways to bypass the ways it can be enabled.
some truly horrendous and ugly reverse shell setups and &lt;code&gt;&#x2F;dev&#x2F;termination-log&lt;&#x2F;code&gt; abuse..&lt;&#x2F;p&gt;
&lt;h3 id=&quot;the-cluster-killer-bug-learning-api-priority-and-fairness-the-hard-way&quot;&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=4mYUyAeyr-U&quot;&gt;The Cluster Killer Bug: Learning API Priority and Fairness the Hard Way&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;nice intro to flowschemas, apipriority and fairness through a motivating bug example.&lt;&#x2F;p&gt;
&lt;p&gt;An accompanying talk would be &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=9TRzfJrU35M&quot;&gt;Kubernetes DoS Protection at Google Scale&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;rbacdoors-how-cryptominers-are-exploiting-rbac-misconfigs&quot;&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=PbZbojx4kVM&quot;&gt;RBACdoors: How Cryptominers Are Exploiting RBAC Misconfigs&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;hiding techniques for cryptominers if you ever had cluster admin access, and removed it later. decent talk.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;networking&quot;&gt;Networking&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;gateway-api-the-most-collaborative-api-in-kubernetes-history-is-ga&quot;&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=V3Vu_FWb4l4&quot;&gt;Gateway API: The Most Collaborative API in Kubernetes History Is GA&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;this is a big deal. it&#x27;s needed to get canaries everywhere with &lt;code&gt;HTTPRoute&lt;&#x2F;code&gt;, and it&#x27;s cool to hear them talk about a mature rollout strategy for experimental crd fields.&lt;&#x2F;p&gt;
&lt;p&gt;tbh, it was more fun to hear this framed as a way to improve &lt;code&gt;Service&lt;&#x2F;code&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=Oslwx3hj2Eg&quot;&gt;&quot;the worst api in kubernetes&quot;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h4 id=&quot;ux-matters-switching-to-gamma-without-ruining-your-reputation&quot;&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=vMSmLVaVRT0&quot;&gt;UX Matters: Switching to GAMMA Without Ruining Your Reputation&lt;&#x2F;a&gt;&lt;&#x2F;h4&gt;
&lt;ul&gt;
&lt;li&gt;linkerd on working with the &lt;strong&gt;gateway api&lt;&#x2F;strong&gt; and issues and lessons with policy controller&lt;&#x2F;li&gt;
&lt;li&gt;presents rust in a way that&#x27;s &quot;because it&#x27;s cool&quot; but a bit manual atm. (..i&#x27;ll take it)&lt;&#x2F;li&gt;
&lt;li&gt;mentioned their leader election impl and kubert. candid and moderately intersting.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;istio-past-present-and-future&quot;&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=vu18vpTxX0g&quot;&gt;Istio Past Present and Future&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;fun dig at the rust evangelists:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&quot;rewrite it in rust? [..] no we want to be a lot better&quot;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;then talk about their single ambient mesh thing that still ends up with 39% cpu overhead 22% memory overhead.&lt;&#x2F;p&gt;
&lt;p&gt;maybe &lt;em&gt;they should&lt;&#x2F;em&gt; rewrite it in rust.&lt;&#x2F;p&gt;
&lt;p&gt;jkjk. this does seem like a nice improvement for them. ran istio a while back and found the overhead insane.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;when-is-a-secure-connection-not-encrypted-and-other-stories&quot;&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=5U9h4E0H5RA&quot;&gt;When Is a Secure Connection Not Encrypted? and Other Stories&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;talk about the main working principles behind &lt;code&gt;cilium&lt;&#x2F;code&gt; and its mutual encryption.
very interesting wireguard + spiffee setup.
they had a lot of momentum behind them. let&#x27;s see if that continues after Cisco buys them (i know how that works).&lt;&#x2F;p&gt;
&lt;h3 id=&quot;demystifying-cilium-learn-how-to-build-an-ebpf-cni-plugin-from-scratch&quot;&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=3cqCmtg-TOo&quot;&gt;Demystifying Cilium: Learn How to Build an eBPF CNI Plugin from Scratch&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;while we are on the cilium train. great workshop about how a CNI can be built.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;kubernetes&quot;&gt;Kubernetes&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;building-better-controllers&quot;&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=GKPBQDJ2Hjk&quot;&gt;Building Better Controllers&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;with my kube-rs hat on, there are some cool ideas coming out of istio here (would be nice if they published it).&lt;&#x2F;p&gt;
&lt;p&gt;the ideas here &lt;strong&gt;could&lt;&#x2F;strong&gt; be partially implement yourself in your code, but it&#x27;s interesting to see them commit to an interface like this at the controller level.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;node-size-matters-running-k8s-as-cheaply-as-possible&quot;&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=6vNI_O6sdvY&quot;&gt;Node Size Matters - Running K8s as Cheaply as Possible&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;opencost and their metrics. does a nice investigation into their metrics and proving that &lt;strong&gt;small cloud provider instances are the most expensive instances&lt;&#x2F;strong&gt; you can use if you can fill your nodes.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;cutting-climate-costs-with-kubernetes-and-capi&quot;&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=VQbP4XX2O_M&quot;&gt;Cutting Climate Costs with Kubernetes and CAPI&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;climate aware scheduler idea using watttime data, priorityclasses and &lt;code&gt;KubeSchedulerConfiguration&lt;&#x2F;code&gt; to allow only running workloads during &quot;low emission times&quot;.&lt;&#x2F;p&gt;
&lt;p&gt;a later (much fluffier talk) shows &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=oAvYfIoIgcc&quot;&gt;how to integrate this with KEDA&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;what-s-up-with-kubernetes-long-term-support&quot;&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=0fngdOlwZtQ&quot;&gt;What&#x27;s up with Kubernetes Long Term Support?&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;mentions the numerous recent KEPs to improve stability:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;KEP-1333 - 1.19+ ensures all APIs required to run clusters are GA&lt;&#x2F;li&gt;
&lt;li&gt;KEP-1693 - New APIs are not allowed to be reqired until they graduate to GA&lt;&#x2F;li&gt;
&lt;li&gt;1.19+ has metrics for deprecated resource use&lt;&#x2F;li&gt;
&lt;li&gt;KEP-1194 - KEPs require better reviews w.r.t. production readiness&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;kubernetes.io&#x2F;docs&#x2F;reference&#x2F;using-api&#x2F;deprecation-policy&#x2F;&quot;&gt;Deprecation policy&lt;&#x2F;a&gt; updated to make stable api versions permanent&lt;&#x2F;li&gt;
&lt;li&gt;KEP-3136 - New unstable APIs are OFF by default&lt;&#x2F;li&gt;
&lt;li&gt;KEP-3744 - Kubernetes 1.23+ use supported go versions (easier to bump security fixes going forward)&lt;&#x2F;li&gt;
&lt;li&gt;KEP-3935 - Kubernetes 1.28+ control plane nodes support n-3 version skew (annual upgrade now ok)
otherwise talks about difficulties of widening support window too much (upgrade complexity, ecosystem dependencies, bugfix porting)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;they want a longer cycle (&lt;code&gt;WG-LTS&lt;&#x2F;code&gt;) - because &lt;strong&gt;currently &amp;gt;2&#x2F;3rds of people have clusters out-of-support&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;this feels like a companion talk to &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=OtigVP3lRh4&quot;&gt;Swimming with the current make it easy to stay up to date&lt;&#x2F;a&gt; which also highlights how much regressions are a problem in Kubernetes (and mostly on patch releases..).&lt;&#x2F;p&gt;
&lt;h4 id=&quot;what-s-new-with-kubectl-and-kustomize&quot;&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=RggqaCSdOGA&quot;&gt;What&#x27;s New with Kubectl and Kustomize&lt;&#x2F;a&gt;&lt;&#x2F;h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;kubectl diff --prune&lt;&#x2F;code&gt; had a selector bug still...&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;kubectl auth whoami&lt;&#x2F;code&gt; new&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;can&#x27;t help lol when they say you shouldn&#x27;t use most of the imperative subcommands; {create, run, expose, autoscale, replace, rollout undo, edit, set, patch, scale, ..}&lt;&#x2F;p&gt;
&lt;h3 id=&quot;nix-kubernetes-and-the-pursuit-of-reproducibility&quot;&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=U-mSWU4see0&quot;&gt;Nix Kubernetes and the Pursuit of Reproducibility&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;building a &lt;strong&gt;nix hypervisor&lt;&#x2F;strong&gt; around &lt;code&gt;libvirt&lt;&#x2F;code&gt; with qcow2. pretty cool idea.
nice sweetspot for nix in hypervisor space, because talos&#x2F;flatcar&#x2F;bottlerocket is probably better for VMs, and wolfi is better for docker images.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;pods-and-circumstance-cri-o-graduation-celebration&quot;&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=7MK_Mt7cbrY&quot;&gt;Pods and Circumstance: CRI-O Graduation Celebration&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;CRI-O metric setups with kubelet&#x2F;cAdvisor and how they plan to optimize it.&lt;&#x2F;p&gt;
&lt;p&gt;they use &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;containers&#x2F;conmon-rs&quot;&gt;conmon-rs&lt;&#x2F;a&gt; - a rust lib for container runtime monitoring!&lt;&#x2F;p&gt;
&lt;h3 id=&quot;grifts-ahoy-bracing-for-the-ai-tide&quot;&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=-Z7TTABw3M0&quot;&gt;Grifts Ahoy! Bracing for the AI Tide&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;advocates for soft-AI as a tool to help generate useful context for small niche areas.&lt;&#x2F;p&gt;
&lt;p&gt;mentions we are likely on the top of the S curve (before the trough of disillusionment) and there&#x27;s tons of hype and not much focus on risks, tons of exaggerations, whether it&#x27;s better than non-AI, or whether it even uses AI at all - and it needs some laws.&lt;&#x2F;p&gt;
&lt;p&gt;Mentions a bunch of boring AI risks to consider (not the more crazy AI singularity transhumanist hype):&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;hard to control risks when you don&#x27;t know what the model is actually doing&lt;&#x2F;li&gt;
&lt;li&gt;research has shown it&#x27;s very cheap to poison a model (60$ for data control of 0.1% - buying expired domains)&lt;&#x2F;li&gt;
&lt;li&gt;can be used against us; malware creations (easy to bypass protections by lieing to it)&lt;&#x2F;li&gt;
&lt;li&gt;deepfakes (passed a liveness test and scammed shanghai tax system)&lt;&#x2F;li&gt;
&lt;li&gt;ai often hallucinates package names (can typosquat those)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;great talk.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;declarative-everything&quot;&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=rFaWmd7Y7i0&quot;&gt;Declarative Everything&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;My favourite talk about my favourite new feature in Kubernetes. Admission Validation and admission policies.&lt;&#x2F;p&gt;
&lt;p&gt;talked more about it on &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;hachyderm.io&#x2F;@clux&#x2F;111537982514643915&quot;&gt;mastodon&lt;&#x2F;a&gt; and ended up writing &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;kube.rs&#x2F;controllers&#x2F;admission&#x2F;&quot;&gt;kube.rs&#x2F;admission&lt;&#x2F;a&gt; as a result&lt;&#x2F;p&gt;
&lt;h3 id=&quot;safeguarding-clusters-exploring-the-benefits-and-navigating-the-dangers-of-admission-controllers&quot;&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=6kK9otYAYac&quot;&gt;Safeguarding Clusters: Exploring the Benefits and Navigating the dangers of admission controllers&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;goes into details about footguns (&lt;code&gt;failurePolicy&lt;&#x2F;code&gt;, latency buildup, default timeout, scope), and some more exotic crazy failures if you accidentally block leases or flowschemas.&lt;&#x2F;p&gt;
&lt;p&gt;notes how it was hard to target negative selections until CEL; matchConditions can be CEL inside webhook configuration resource now!&lt;&#x2F;p&gt;
&lt;h3 id=&quot;15-000-minecraft-players-vs-one-k8s-cluster-who-wins&quot;&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=4YNp2vb9NTA&quot;&gt;15,000 Minecraft Players Vs One K8s Cluster. Who Wins?&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;very good talk about how a cloud minecraft provider moved from GCP to bare metal with &quot;65% cost reduction&quot;.&lt;&#x2F;p&gt;
&lt;p&gt;nice to see the stuff they take advantage off (still off-load some stuff to cloud providers), and heavy use of the cluster api.
MinIO and TopoLVM for storage is also very cool.&lt;&#x2F;p&gt;
&lt;p&gt;if nothing else, this talk is worth it for how they deal with lifecycle management of long lived games (how do you terminate the pods?).
short answer; some automatic upgrades with cluster api, some planned maintenances with warnings and then very long &lt;code&gt;terminationGracePeriodSeconds&lt;&#x2F;code&gt; on &lt;code&gt;SIGTERM&lt;&#x2F;code&gt; with some advanced termination handlers.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;maintainer-track&quot;&gt;Maintainer Track&lt;&#x2F;h3&gt;
&lt;h3 id=&quot;tools-for-resolving-difficult-conflicts-in-open-source-communities-and-projects&quot;&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=SNrVqfLotDI&quot;&gt;Tools for Resolving Difficult Conflicts in Open Source Communities and Projects&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;imo the most useful thing herein is the highlighting of &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Nonviolent_Communication&quot;&gt;non-violent communication&lt;&#x2F;a&gt; as a methodology for &lt;strong&gt;compassionate communication&lt;&#x2F;strong&gt;, proven to have good results (but best if practiced consistently).&lt;&#x2F;p&gt;
&lt;h3 id=&quot;the-eight-fallacies-of-distributed-cloud-native-communities&quot;&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=n2ZHy90PrUQ&quot;&gt;The Eight Fallacies of Distributed Cloud Native Communities&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;similar maitainer points:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;maintainer bw is (not) infinite :: lack of control + lack of empathy towards you = recipe for burnout&lt;&#x2F;li&gt;
&lt;li&gt;compromise is (not) a rarity and (not) the norm :: everyone has their own agenda&lt;&#x2F;li&gt;
&lt;li&gt;cost of contributor onboarding is (not) zero :: maintainer bw is not infinite, ownership also hindered by undocumented context =&amp;gt; episodic maintainers leave. need to put concious effort into uplifting and growing existing contributors to avoid gridlock.&lt;&#x2F;li&gt;
&lt;li&gt;staffing across areas is (not) homogeneous :: some hard areas have very few people who knows what is going on&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;kubeburned-out-how-to-get-things-done-efficiently&quot;&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=h-WiiU-iKLQ&quot;&gt;Kubeburned Out? How to get things done efficiently&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;good tips for contributing by making routines for contributions if employed (e.g. 1h before work, maybe every tuesday + thursday, 1-2h during weekend).&lt;&#x2F;p&gt;
&lt;p&gt;make your work public:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;always communicate pr status&lt;&#x2F;li&gt;
&lt;li&gt;ask for help if stuck&lt;&#x2F;li&gt;
&lt;li&gt;unasign if you cannot work on it, maybe add snippets that may help others&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;recognise people for their work;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;blog posts are good&lt;&#x2F;li&gt;
&lt;li&gt;celebrate small achievements&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;say no - keep yourself healthy;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;take breaks, short or long&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;good advice, but then it&#x27;s more about how to take on more responsibility within kubernetes, writing KEPs, and TAG work.&lt;&#x2F;p&gt;
&lt;p&gt;timing improves success;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;propose things at the right point in time&lt;&#x2F;li&gt;
&lt;li&gt;raise questions at the right point in time (so you&#x27;re likely to get the right answer)&lt;&#x2F;li&gt;
&lt;li&gt;establish an async schedule more likely to get people working together with you&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;find habits that feel right for you.
if it&#x27;s not high priority for you or who pays you, don&#x27;t work on it.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Drop Down Terminal</title>
        <published>2023-10-01T00:00:00+00:00</published>
        <updated>2023-10-01T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://clux.dev/post/2023-10-01-drop-down-terminal/"/>
        <id>https://clux.dev/post/2023-10-01-drop-down-terminal/</id>
        
        <content type="html" xml:base="https://clux.dev/post/2023-10-01-drop-down-terminal/">&lt;p&gt;As a former Quake player, I have been a long-term user of &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Guake&#x2F;guake&quot;&gt;guake&lt;&#x2F;a&gt; for a quick access terminal on Linux.&lt;&#x2F;p&gt;
&lt;p&gt;However, as &lt;code&gt;guake&lt;&#x2F;code&gt; is &lt;strong&gt;gnome&lt;&#x2F;strong&gt; specific, continued use became problematic once a mac got thrust upon me for work. So herein is a workaround for making your own drop-down terminal for Linux and Mac by utilizing &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;alacritty&#x2F;alacritty&quot;&gt;alacritty&lt;&#x2F;a&gt; + &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;zellij.dev&#x2F;&quot;&gt;zellij&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;looks&quot;&gt;Looks&lt;&#x2F;h2&gt;
&lt;p&gt;Behold; a semi-transparent, tabbed terminal hovering above two browser windows (showing the editing process of this very post):&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;&#x2F;imgs&#x2F;term-drop.png&quot;&gt;&lt;img src=&quot;&#x2F;imgs&#x2F;term-drop.png&quot; alt=&quot;alacritty in foreground with zellij tabs and helix open with transparency&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;This is using a transparent theme in &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;helix-editor.com&#x2F;&quot;&gt;helix&lt;&#x2F;a&gt;, with 80% opacity in alacritty, and disabled blur in &lt;code&gt;hyprland&lt;&#x2F;code&gt; to selectively see through below (like for say live updates to the markdown rendering). On mac, the setup and looks are very similar to this.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;For times when transparency is too annoying you can &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;dotfiles&#x2F;blob&#x2F;dfcf3d8eb3ae48b8f1ff0df0dffb7d2b7ec65680&#x2F;config&#x2F;helix&#x2F;config.toml#L12-L13&quot;&gt;bind a key to change the &lt;code&gt;helix&lt;&#x2F;code&gt; theme&lt;&#x2F;a&gt; to something fully opaque (most themes are opaque). A quick &lt;code&gt;F1&lt;&#x2F;code&gt; press ultimately slides the terminal away from view anyway.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h2 id=&quot;core-concept&quot;&gt;Core Concept&lt;&#x2F;h2&gt;
&lt;p&gt;The idea is to have a &lt;strong&gt;persistent terminal&lt;&#x2F;strong&gt; that is &lt;strong&gt;hidden away&lt;&#x2F;strong&gt; in a &quot;special place&quot; and bind a key to toggle the visibility of this terminal. Then we rely on &lt;code&gt;zellij&lt;&#x2F;code&gt; to provide tabs.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;The choice of terminal emulator and multiplexer is not super important. You could probably use &lt;code&gt;kitty&lt;&#x2F;code&gt; + &lt;code&gt;tmux&lt;&#x2F;code&gt;, or straight &lt;code&gt;wezterm&lt;&#x2F;code&gt; (which has tabs mgmt built-in) if you prefer, and achieve similar results.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;On &lt;strong&gt;wayland&lt;&#x2F;strong&gt; that place is a &lt;strong&gt;special workspace&lt;&#x2F;strong&gt;, whereas on &lt;strong&gt;mac&lt;&#x2F;strong&gt; we use &lt;code&gt;sticky&lt;&#x2F;code&gt; windows.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;alacritty-setup&quot;&gt;Alacritty Setup&lt;&#x2F;h2&gt;
&lt;p&gt;My preferred setup is to always launch &lt;code&gt;zellij&lt;&#x2F;code&gt; at &lt;code&gt;alacritty&lt;&#x2F;code&gt; start by configuring the default shell in the &lt;code&gt;alacritty.yml&lt;&#x2F;code&gt; config:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;yaml&quot; class=&quot;language-yaml z-code&quot;&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;shell&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;  &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;program&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;zsh&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;  &lt;span class=&quot;z-comment z-line z-number-sign z-yaml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-line z-number-sign z-yaml&quot;&gt;#&lt;&#x2F;span&gt; start zellij with a small sleep to ensure it gets right dimensions
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;  &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;args&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;   &lt;span class=&quot;z-punctuation z-definition z-block z-sequence z-item z-yaml&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;-ic&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;   &lt;span class=&quot;z-punctuation z-definition z-block z-sequence z-item z-yaml&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;sleep 0.2 &amp;amp;&amp;amp; zellij -l compact&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;and, since this is a drop-down terminal we are selling, you probably also want transparency (because otherwise why do you need the window to go in front? just switch applications or workspaces):&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;yaml&quot; class=&quot;language-yaml z-code&quot;&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;window&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;  &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;opacity&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-float z-decimal z-yaml&quot;&gt;0&lt;span class=&quot;z-punctuation z-separator z-decimal z-yaml&quot;&gt;.&lt;&#x2F;span&gt;8&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;on linux we can also make it as clean as possible and remove most window decorations:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;yaml&quot; class=&quot;language-yaml z-code&quot;&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;window&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;  &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;decorations&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;none&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;  &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;startup_mode&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;Maximized&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;whereas on mac a similar decoration setup is &lt;code&gt;buttonless&lt;&#x2F;code&gt;:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;yaml&quot; class=&quot;language-yaml z-code&quot;&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;window&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;  &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;decorations&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;buttonless&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;  &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;startup_mode&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;Maximized&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;(and you can also experiment with binding a key to &lt;code&gt;ToggleSimpleFullscreen&lt;&#x2F;code&gt; there).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;zellij-setup&quot;&gt;Zellij Setup&lt;&#x2F;h2&gt;
&lt;p&gt;Honestly, this is pretty nice out of the box. Mostly styling is nice here to make it cleaner:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;kdl&quot; class=&quot;language-kdl z-code&quot;&gt;&lt;code class=&quot;language-kdl&quot; data-lang=&quot;kdl&quot;&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;pane_frames false
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;ui {
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    pane_frames {
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        hide_session_name true
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    }
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;grab a &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;zellij.dev&#x2F;documentation&#x2F;themes&quot;&gt;theme&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;The &lt;code&gt;-l compact&lt;&#x2F;code&gt; startup option set in the alacritty config assumes familiarity in &lt;code&gt;zellij&lt;&#x2F;code&gt;, you&#x27;re likely to find it easier to onboard if you don&#x27;t use compact mode until you are familiar.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;tab-names&quot;&gt;Tab Names&lt;&#x2F;h3&gt;
&lt;p&gt;If you don&#x27;t want to faff around with naming every single zellij tab, you can also make &lt;code&gt;zsh&lt;&#x2F;code&gt; do it automatically for you using &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;zsh.sourceforge.io&#x2F;Doc&#x2F;Release&#x2F;Functions.html#Hook-Functions&quot;&gt;&lt;code&gt;chpwd_functions&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; using something like this in your &lt;code&gt;.zshrc&lt;&#x2F;code&gt; etc:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; class=&quot;language-sh z-code&quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function z-shell&quot;&gt;&lt;span class=&quot;z-entity z-name z-function z-shell&quot;&gt;zz&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-begin z-shell&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-end z-shell&quot;&gt;)&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-section z-braces z-begin z-shell&quot;&gt;{&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function z-shell&quot;&gt;  &lt;span class=&quot;z-keyword z-control z-conditional z-if z-shell&quot;&gt;if&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-function z-test z-begin z-shell&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; &lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt;-&lt;&#x2F;span&gt;n&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-expansion z-parameter z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-expansion z-parameter z-begin z-shell&quot;&gt;{&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-expansion z-parameter z-shell&quot;&gt;&lt;span class=&quot;z-variable z-other z-readwrite z-shell&quot;&gt;ZELLIJ_SESSION_NAME&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-expansion z-parameter z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-expansion z-parameter z-end z-shell&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-function z-test z-end z-shell&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-logical z-continue z-shell&quot;&gt;;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-control z-conditional z-then z-shell&quot;&gt;then&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function z-shell&quot;&gt;    &lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;zellij&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; action rename-tab &lt;span class=&quot;z-string z-quoted z-double z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-expansion z-parameter z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-expansion z-parameter z-begin z-shell&quot;&gt;{&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-expansion z-parameter z-shell&quot;&gt;&lt;span class=&quot;z-variable z-other z-readwrite z-shell&quot;&gt;PWD&lt;span class=&quot;z-keyword z-operator z-expansion z-shell&quot;&gt;##&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-expansion z-parameter z-shell&quot;&gt;&lt;span class=&quot;z-keyword z-operator z-regexp z-quantifier z-shell&quot;&gt;*&lt;&#x2F;span&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-expansion z-parameter z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-expansion z-parameter z-end z-shell&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function z-shell&quot;&gt;  &lt;span class=&quot;z-keyword z-control z-conditional z-end z-shell&quot;&gt;fi&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-braces z-end z-shell&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-begin z-shell&quot;&gt;#&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt; ensure directory traversal updates tab names (if terminal mux exists)&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-variable z-other z-readwrite z-assignment z-shell&quot;&gt;chpwd_functions&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-shell&quot;&gt;+=&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-unquoted z-shell&quot;&gt;zz&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;zz &lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-begin z-shell&quot;&gt;#&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt; initialize name for new tabs&#x2F;panes&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;This is nice because it catches all sources of traversal, be it through &lt;code&gt;cd&lt;&#x2F;code&gt; or through jumpers like &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ajeetdsouza&#x2F;zoxide&quot;&gt;zoxide&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;drop-down-variants&quot;&gt;Drop Down Variants&lt;&#x2F;h2&gt;
&lt;p&gt;The most ergonomic one here is the hypland variant, but the mac setup is also decent.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;hyprland&quot;&gt;Hyprland&lt;&#x2F;h3&gt;
&lt;p&gt;On Linux with &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;hyprland.org&#x2F;&quot;&gt;hyprland&lt;&#x2F;a&gt; (my current wayland compositor), plugging this in is very easy to do because you have access to &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;wiki.hyprland.org&#x2F;Configuring&#x2F;Dispatchers&#x2F;#special-workspace&quot;&gt;special workspaces&lt;&#x2F;a&gt;, so the terminal is never technically &lt;strong&gt;hidden&lt;&#x2F;strong&gt;, it&#x27;s just active in a different workspace.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;This might not seem like a big deal, but if you&#x27;ve tried sharing a terminal that hides itself (such as guake&#x27;s or through the mac solution below) on a screen sharing video call, you will find various failure modes (from app crashes to stream closes) if you hide the window you are sharing.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;In your &lt;code&gt;hyprland.conf&lt;&#x2F;code&gt;, add:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;hyprland&quot; class=&quot;language-hyprland z-code&quot;&gt;&lt;code class=&quot;language-hyprland&quot; data-lang=&quot;hyprland&quot;&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;exec-once = [workspace special] alacritty
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;bind = , F1, togglespecialworkspace
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;so it auto-starts in special, and you can toggle the workspace as you wish.&lt;&#x2F;p&gt;
&lt;p&gt;Give it an animation so it pops in vertically, and avoid undercutting your opacity:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;hyprland&quot; class=&quot;language-hyprland z-code&quot;&gt;&lt;code class=&quot;language-hyprland&quot; data-lang=&quot;hyprland&quot;&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;animations {
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    animation = specialWorkspace, 1, 1, default, slidevert
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;decoration {
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    # don&amp;#39;t dim modal terminal
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    dim_special = 0
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    blur {
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;      enabled = false # make it easy to see-through from special workspace
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    }
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;And the final hyprland quirk; special workspaces have a window scaling factor (default &lt;code&gt;0.8&lt;&#x2F;code&gt;) that controls how much large the window is allowed to be. If you are putting a terminal editor in there or something you probably want to max that out:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;hyprland&quot; class=&quot;language-hyprland z-code&quot;&gt;&lt;code class=&quot;language-hyprland&quot; data-lang=&quot;hyprland&quot;&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;dwindle {
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    special_scale_factor = 1 # maximize special workspace
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The end result is a terminal that pops in from the bottom in an inverted quake terminal feel - and honestly this makes more sense than top-to-bottom since you have to give some space to the (usually top) &lt;code&gt;waybar&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;hammerspoon&quot;&gt;Hammerspoon&lt;&#x2F;h3&gt;
&lt;p&gt;On Mac, the easiest setup is using &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Hammerspoon&#x2F;hammerspoon&quot;&gt;hammerspoon&lt;&#x2F;a&gt;. Bind a toggle or start &lt;code&gt;alacritty&lt;&#x2F;code&gt; in your hammerspoon&#x27;s &lt;code&gt;init.lua&lt;&#x2F;code&gt;:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;lua&quot; class=&quot;language-lua z-code&quot;&gt;&lt;code class=&quot;language-lua&quot; data-lang=&quot;lua&quot;&gt;&lt;span class=&quot;z-source z-lua&quot;&gt;&lt;span class=&quot;z-storage z-modifier z-lua&quot;&gt;local&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function z-lua&quot;&gt;&lt;span class=&quot;z-meta z-block z-lua&quot;&gt;&lt;span class=&quot;z-storage z-type z-function z-lua&quot;&gt;function&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-name z-function&quot;&gt;&lt;span class=&quot;z-entity z-name z-function z-lua&quot;&gt;toggleApp&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-lua&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-lua&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-parameter z-function z-lua&quot;&gt;name&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-lua&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-lua&quot;&gt;&lt;span class=&quot;z-meta z-function z-lua&quot;&gt;&lt;span class=&quot;z-meta z-block z-lua&quot;&gt;  &lt;span class=&quot;z-storage z-modifier z-lua&quot;&gt;local&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-lua&quot;&gt;app&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-lua&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-lua&quot;&gt;hs&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-lua&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-property z-lua&quot;&gt;application&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-lua&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-property z-lua&quot;&gt;&lt;span class=&quot;z-variable z-function z-lua&quot;&gt;find&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-lua&quot;&gt;&lt;span class=&quot;z-meta z-group z-lua&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-lua&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-lua&quot;&gt;name&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-lua&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-lua&quot;&gt;&lt;span class=&quot;z-meta z-function z-lua&quot;&gt;&lt;span class=&quot;z-meta z-block z-lua&quot;&gt;  &lt;span class=&quot;z-keyword z-control z-conditional z-lua&quot;&gt;if&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-logical z-lua&quot;&gt;not&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-lua&quot;&gt;app&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-logical z-lua&quot;&gt;or&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-lua&quot;&gt;app&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-lua&quot;&gt;:&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-property z-lua&quot;&gt;&lt;span class=&quot;z-variable z-function z-lua&quot;&gt;isHidden&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-lua&quot;&gt;&lt;span class=&quot;z-meta z-group z-lua&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-lua&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-lua&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-block z-lua&quot;&gt;&lt;span class=&quot;z-keyword z-control z-conditional z-lua&quot;&gt;then&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-lua&quot;&gt;&lt;span class=&quot;z-meta z-function z-lua&quot;&gt;&lt;span class=&quot;z-meta z-block z-lua&quot;&gt;&lt;span class=&quot;z-meta z-block z-lua&quot;&gt;    &lt;span class=&quot;z-variable z-other z-lua&quot;&gt;hs&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-lua&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-property z-lua&quot;&gt;application&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-lua&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-property z-lua&quot;&gt;&lt;span class=&quot;z-variable z-function z-lua&quot;&gt;launchOrFocus&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-lua&quot;&gt;&lt;span class=&quot;z-meta z-group z-lua&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-lua&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-lua&quot;&gt;name&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-lua&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-lua&quot;&gt;&lt;span class=&quot;z-meta z-function z-lua&quot;&gt;&lt;span class=&quot;z-meta z-block z-lua&quot;&gt;&lt;span class=&quot;z-meta z-block z-lua&quot;&gt;  &lt;span class=&quot;z-keyword z-control z-conditional z-lua&quot;&gt;elseif&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-lua&quot;&gt;hs&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-lua&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-property z-lua&quot;&gt;application&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-lua&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-property z-lua&quot;&gt;&lt;span class=&quot;z-variable z-function z-lua&quot;&gt;frontmostApplication&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-lua&quot;&gt;&lt;span class=&quot;z-meta z-group z-lua&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-lua&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-lua&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-comparison z-lua&quot;&gt;~=&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-lua&quot;&gt;app&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-block z-lua&quot;&gt;&lt;span class=&quot;z-keyword z-control z-conditional z-lua&quot;&gt;then&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-lua&quot;&gt;&lt;span class=&quot;z-meta z-function z-lua&quot;&gt;&lt;span class=&quot;z-meta z-block z-lua&quot;&gt;&lt;span class=&quot;z-meta z-block z-lua&quot;&gt;    &lt;span class=&quot;z-variable z-other z-lua&quot;&gt;app&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-lua&quot;&gt;:&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-property z-lua&quot;&gt;&lt;span class=&quot;z-variable z-function z-lua&quot;&gt;activate&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-lua&quot;&gt;&lt;span class=&quot;z-meta z-group z-lua&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-lua&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-lua&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-lua&quot;&gt;&lt;span class=&quot;z-meta z-function z-lua&quot;&gt;&lt;span class=&quot;z-meta z-block z-lua&quot;&gt;&lt;span class=&quot;z-meta z-block z-lua&quot;&gt;  &lt;span class=&quot;z-meta z-block z-lua&quot;&gt;&lt;span class=&quot;z-keyword z-control z-conditional z-lua&quot;&gt;else&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-block z-lua&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-lua&quot;&gt;&lt;span class=&quot;z-meta z-function z-lua&quot;&gt;&lt;span class=&quot;z-meta z-block z-lua&quot;&gt;&lt;span class=&quot;z-meta z-block z-lua&quot;&gt;    &lt;span class=&quot;z-variable z-other z-lua&quot;&gt;app&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-lua&quot;&gt;:&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-property z-lua&quot;&gt;&lt;span class=&quot;z-variable z-function z-lua&quot;&gt;hide&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-lua&quot;&gt;&lt;span class=&quot;z-meta z-group z-lua&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-lua&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-lua&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-lua&quot;&gt;&lt;span class=&quot;z-meta z-function z-lua&quot;&gt;&lt;span class=&quot;z-meta z-block z-lua&quot;&gt;&lt;span class=&quot;z-meta z-block z-lua&quot;&gt;  &lt;span class=&quot;z-keyword z-control z-end z-lua&quot;&gt;end&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-lua&quot;&gt;&lt;span class=&quot;z-meta z-function z-lua&quot;&gt;&lt;span class=&quot;z-meta z-block z-lua&quot;&gt;&lt;span class=&quot;z-keyword z-control z-end z-lua&quot;&gt;end&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-lua&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-lua&quot;&gt;&lt;span class=&quot;z-comment z-line z-lua&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-lua&quot;&gt;--&lt;&#x2F;span&gt; Global terminal toggle
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-lua&quot;&gt;&lt;span class=&quot;z-variable z-other z-lua&quot;&gt;hs&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-lua&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-property z-lua&quot;&gt;hotkey&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-lua&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-property z-lua&quot;&gt;&lt;span class=&quot;z-variable z-function z-lua&quot;&gt;bind&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-lua&quot;&gt;&lt;span class=&quot;z-meta z-group z-lua&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-lua&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-lua&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-lua&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-lua&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-comma z-lua&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-lua&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-lua&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;F1&lt;span class=&quot;z-punctuation z-definition z-string z-end z-lua&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-comma z-lua&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function z-lua&quot;&gt;&lt;span class=&quot;z-meta z-block z-lua&quot;&gt;&lt;span class=&quot;z-storage z-type z-function z-lua&quot;&gt;function&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-lua&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-lua&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-lua&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-function z-lua&quot;&gt;toggleApp&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-lua&quot;&gt;&lt;span class=&quot;z-meta z-group z-lua&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-lua&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-lua&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-lua&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;alacritty&lt;span class=&quot;z-punctuation z-definition z-string z-end z-lua&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-lua&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-control z-end z-lua&quot;&gt;end&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-lua&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;It is a little flimsy on a multi-monitor setup, with sometimes having to manually move it across to a workspace on a different monitor on boot (window&#x2F;workspace&#x2F;monitor hierarchy seems less clean on mac in general), but it helps to not auto-start the app and let the bind start it on the monitor you  have your cursor by only pressing the bind there.&lt;&#x2F;p&gt;
&lt;p&gt;The alacritty opacity setting is respected out of the box.&lt;&#x2F;p&gt;
&lt;p&gt;If you are using it with &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;koekeishiya&#x2F;yabai&quot;&gt;yabai&lt;&#x2F;a&gt; (for auto-tiling of windows, window moving shortcuts), then you also want to add a rule for &lt;code&gt;yabai&lt;&#x2F;code&gt; to mark it as sticky to avoid it getting bunched up as a normal window tile:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; class=&quot;language-sh z-code&quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;yabai&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;m&lt;&#x2F;span&gt; rule&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; --&lt;&#x2F;span&gt;add&lt;&#x2F;span&gt; app=&lt;span class=&quot;z-string z-quoted z-double z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;^(Alacritty)$&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; sticky=on&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Because it is using sticky windows, screen sharing of this window will not be viable by itself (as the source disappears when it&#x27;s hidden), so you&#x27;ll have to share the entire workspace instead. This is usually not a big deal if you are already using workspaces.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;xorg&quot;&gt;Xorg&lt;&#x2F;h3&gt;
&lt;p&gt;All setups I found for this were &lt;strong&gt;comically bad&lt;&#x2F;strong&gt;, but including one for completeness. &lt;strong&gt;Don&#x27;t use this&lt;&#x2F;strong&gt;. Stay on &lt;code&gt;guake&lt;&#x2F;code&gt; if you are on &lt;code&gt;X&lt;&#x2F;code&gt;. The hack below majorly struggles with multi-monitor.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Aside: you &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;orowith2os.gitlab.io&#x2F;posts&#x2F;wayland-breaks-your-bad-software&#x2F;&quot;&gt;should consider moving onto wayland&lt;&#x2F;a&gt; if you haven&#x27;t.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;You need a script that auto-runs in your shell, and a runnable function:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; class=&quot;language-sh z-code&quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-begin z-shell&quot;&gt;#&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt; autorun via .zshrc&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-keyword z-control z-conditional z-if z-shell&quot;&gt;if&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-function z-test z-begin z-shell&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; &lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt;-&lt;&#x2F;span&gt;n&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-expansion z-parameter z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-expansion z-parameter z-begin z-shell&quot;&gt;{&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-expansion z-parameter z-shell&quot;&gt;&lt;span class=&quot;z-variable z-other z-readwrite z-shell&quot;&gt;ZELLIJ_SESSION_NAME&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-expansion z-parameter z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-expansion z-parameter z-end z-shell&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-function z-test z-end z-shell&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-logical z-and z-shell&quot;&gt;&amp;amp;&amp;amp;&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-function z-test z-begin z-shell&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; &lt;span class=&quot;z-keyword z-operator z-logical z-shell&quot;&gt;!&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt;-&lt;&#x2F;span&gt;f&lt;&#x2F;span&gt; &#x2F;tmp&#x2F;wraise &lt;span class=&quot;z-support z-function z-test z-end z-shell&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-logical z-continue z-shell&quot;&gt;;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-control z-conditional z-then z-shell&quot;&gt;then&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-begin z-shell&quot;&gt;#&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt; If running in zellij on linux, save the window for refocus keybinds&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;  &lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;xdotool&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; getactivewindow &lt;span class=&quot;z-keyword z-operator z-assignment z-redirection z-shell&quot;&gt;&amp;gt;&lt;&#x2F;span&gt; &#x2F;tmp&#x2F;wraise&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-keyword z-control z-conditional z-end z-shell&quot;&gt;fi&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-begin z-shell&quot;&gt;#&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt; function somewhere else (e.g. ~&#x2F;.functions)&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-begin z-shell&quot;&gt;#&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt; setup a bind run: &#x2F;bin&#x2F;zsh -c &amp;#39;source .functions &amp;amp;&amp;amp; terminal_toggle&amp;#39;&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function z-shell&quot;&gt;&lt;span class=&quot;z-entity z-name z-function z-shell&quot;&gt;terminal_toggle&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-begin z-shell&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-end z-shell&quot;&gt;)&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-section z-braces z-begin z-shell&quot;&gt;{&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function z-shell&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;  &lt;span class=&quot;z-storage z-modifier z-shell&quot;&gt;local&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt;-&lt;&#x2F;span&gt;r&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-readwrite z-assignment z-shell&quot;&gt;terminal_id&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-shell&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-unquoted z-shell&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-expansion z-command z-parens z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-begin z-shell&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;cat&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; &#x2F;tmp&#x2F;wraise&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-end z-shell&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function z-shell&quot;&gt;  &lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-begin z-shell&quot;&gt;#&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt; Check if it is active (stored in hex on a root prop)&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function z-shell&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;  &lt;span class=&quot;z-storage z-modifier z-shell&quot;&gt;local&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt;-&lt;&#x2F;span&gt;r&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-readwrite z-assignment z-shell&quot;&gt;active_id&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-shell&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-unquoted z-shell&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-expansion z-arithmetic z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-begin z-shell&quot;&gt;((&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-shell&quot;&gt;16&lt;&#x2F;span&gt;#&lt;span class=&quot;z-meta z-group z-expansion z-command z-parens z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-begin z-shell&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;xprop&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;root&lt;&#x2F;span&gt; _NET_ACTIVE_WINDOW&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-logical z-pipe z-shell&quot;&gt;|&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;choose&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; 4&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-logical z-pipe z-shell&quot;&gt;|&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;cut&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;d&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-single z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;x&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;f2&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-end z-shell&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-end z-shell&quot;&gt;))&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function z-shell&quot;&gt;  &lt;span class=&quot;z-keyword z-control z-conditional z-if z-shell&quot;&gt;if&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-function z-test z-begin z-shell&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; &lt;span class=&quot;z-meta z-group z-expansion z-parameter z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-readwrite z-shell&quot;&gt;active_id&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt;-&lt;&#x2F;span&gt;eq&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-group z-expansion z-parameter z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-readwrite z-shell&quot;&gt;terminal_id&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-function z-test z-end z-shell&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-logical z-continue z-shell&quot;&gt;;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-control z-conditional z-then z-shell&quot;&gt;then&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function z-shell&quot;&gt;    &lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;xdotool&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; windowminimize &lt;span class=&quot;z-string z-quoted z-double z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-expansion z-parameter z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-expansion z-parameter z-begin z-shell&quot;&gt;{&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-expansion z-parameter z-shell&quot;&gt;&lt;span class=&quot;z-variable z-other z-readwrite z-shell&quot;&gt;terminal_id&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-expansion z-parameter z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-expansion z-parameter z-end z-shell&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function z-shell&quot;&gt;  &lt;span class=&quot;z-keyword z-control z-conditional z-else z-shell&quot;&gt;else&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function z-shell&quot;&gt;    &lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;wmctrl&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;ia&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-expansion z-parameter z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-expansion z-parameter z-begin z-shell&quot;&gt;{&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-expansion z-parameter z-shell&quot;&gt;&lt;span class=&quot;z-variable z-other z-readwrite z-shell&quot;&gt;terminal_id&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-expansion z-parameter z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-expansion z-parameter z-end z-shell&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function z-shell&quot;&gt;  &lt;span class=&quot;z-keyword z-control z-conditional z-end z-shell&quot;&gt;fi&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-braces z-end z-shell&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;This expects &lt;code&gt;alacritty&lt;&#x2F;code&gt; is on autorun and you can configure binds somewhere. I put an &lt;code&gt;F2&lt;&#x2F;code&gt; bind in &lt;code&gt;cinnamon&lt;&#x2F;code&gt; (yeah, long time between changing WMs for me) to run this.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Again; &lt;strong&gt;I don&#x27;t use this&lt;&#x2F;strong&gt;. I wrote it as a short stop-gap and I hated it.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Having to support Mac + X in my &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;dotfiles&quot;&gt;dotfiles&lt;&#x2F;a&gt; became a perfect storm of frustration, and wouldn&#x27;t you know it, wayland made everything better.&lt;&#x2F;p&gt;
&lt;p&gt;..as with many things, the answer is to &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;hachyderm.io&#x2F;@compositor@wayland.social&#x2F;110768798344764115&quot;&gt;migrate away from X&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Running 2022</title>
        <published>2022-12-07T00:00:00+00:00</published>
        <updated>2022-12-07T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://clux.dev/post/2022-12-07-running-year/"/>
        <id>https://clux.dev/post/2022-12-07-running-year/</id>
        
        <content type="html" xml:base="https://clux.dev/post/2022-12-07-running-year/">&lt;p&gt;In an attempt to torture my chair shaped husk of a body, I somehow ran almost 2500km this year. Mostly to see what would happen, but also to take part in the &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.royalparkshalf.com&#x2F;&quot;&gt;Royal Parks Half Marathon in London&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;milestones&quot;&gt;Milestones&lt;&#x2F;h2&gt;
&lt;p&gt;In the process of going up to 70km weeks - something which became routine remarkably quickly - I ended up beating pretty much all of my endurance records:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;del&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.strava.com&#x2F;activities&#x2F;7274508726&quot;&gt;41:51 10k&lt;&#x2F;a&gt;&lt;&#x2F;del&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.strava.com&#x2F;activities&#x2F;7750969909&#x2F;overview&quot;&gt;39:29 10k&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.strava.com&#x2F;activities&#x2F;7878906931&#x2F;overview&quot;&gt;11:15 3k&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.strava.com&#x2F;activities&#x2F;7934772777#21922284308&quot;&gt;1:29:34 HM&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;The Half Marathon was my first longer event and feel I ran it cleanly:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;imgs&#x2F;running22&#x2F;hr-cadence-hm.webp&quot; alt=&quot;almost straight line for heart rate and cadence&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The 3k PB is also a &lt;code&gt;3200m&lt;&#x2F;code&gt; &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Cooper_test&quot;&gt;Cooper test&lt;&#x2F;a&gt; which, &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;exrx.net&#x2F;Calculators&#x2F;MinuteRun&quot;&gt;heuristically&lt;&#x2F;a&gt;, puts my VO2max at 60. All in all, very pleased with the progress. Particularly getting 10k sub 40 and HM sub 90.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;mileage&quot;&gt;Mileage&lt;&#x2F;h2&gt;
&lt;p&gt;Garmin &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;connect.garmin.com&#x2F;modern&#x2F;report&#x2F;17&#x2F;all&#x2F;last_year&quot;&gt;report&lt;&#x2F;a&gt; for the year:&lt;&#x2F;p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Month&lt;&#x2F;th&gt;&lt;th&gt;Mileage&lt;&#x2F;th&gt;&lt;th&gt;VO2max&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;Jan&lt;&#x2F;td&gt;&lt;td&gt;117k&lt;&#x2F;td&gt;&lt;td&gt;51&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Feb&lt;&#x2F;td&gt;&lt;td&gt;65k&lt;&#x2F;td&gt;&lt;td&gt;52&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Mar&lt;&#x2F;td&gt;&lt;td&gt;142k&lt;&#x2F;td&gt;&lt;td&gt;53&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Apr&lt;&#x2F;td&gt;&lt;td&gt;144k&lt;&#x2F;td&gt;&lt;td&gt;54&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;May&lt;&#x2F;td&gt;&lt;td&gt;190k&lt;&#x2F;td&gt;&lt;td&gt;55&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Jun&lt;&#x2F;td&gt;&lt;td&gt;157k&lt;&#x2F;td&gt;&lt;td&gt;54&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Jul&lt;&#x2F;td&gt;&lt;td&gt;266k&lt;&#x2F;td&gt;&lt;td&gt;56&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Aug&lt;&#x2F;td&gt;&lt;td&gt;322k&lt;&#x2F;td&gt;&lt;td&gt;57&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Sep&lt;&#x2F;td&gt;&lt;td&gt;333k&lt;&#x2F;td&gt;&lt;td&gt;58&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Oct&lt;&#x2F;td&gt;&lt;td&gt;249k&lt;&#x2F;td&gt;&lt;td&gt;58&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Nov&lt;&#x2F;td&gt;&lt;td&gt;349k&lt;&#x2F;td&gt;&lt;td&gt;58&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Dec&lt;&#x2F;td&gt;&lt;td&gt;10k&lt;&#x2F;td&gt;&lt;td&gt;covid&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;h3 id=&quot;q1-q2-volume-building&quot;&gt;Q1&#x2F;Q2: Volume Building&lt;&#x2F;h3&gt;
&lt;p&gt;The year started slow, but increased a little too fast initially without muscle training and ended up spending a lot more time on an elliptical in February.
Back in London, when my foot muscles started catching up, I was able to raise the mileage quite a bit come summer (with an average of 60k weekly in July). This gave me confidence to start a pretty ambitious training plan from the end of July.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;q3-royal-parks&quot;&gt;Q3: Royal Parks&lt;&#x2F;h3&gt;
&lt;p&gt;Combined ideas from two generally available training plans:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.ageuk.org.uk&#x2F;contentassets&#x2F;73784215f4ee46beb3d357eed3fdcc31&#x2F;sub-1_30_half_marathon_training_schedules.pdf&quot;&gt;AgeUk&#x27;s Sub 1:30 12w&lt;&#x2F;a&gt; - for general setup, but taking out some of the races&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.nspcc.org.uk&#x2F;globalassets&#x2F;documents&#x2F;support-us&#x2F;training-gym&#x2F;running-plans&#x2F;half-marathon&#x2F;20171301-pe-training-sheet-2018_half-marathon-sub-1.30-aw2.pdf&quot;&gt;NSPCC Sub 1:30 14w&lt;&#x2F;a&gt; - for negative split long runs and more thresholds&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;also incorporated ~two sessions of muscle strength training a week (single leg dead lifts, weighted squats, hungarian squats, heel&#x2F;soleus raises, plus misc core&#x2F;oblique strength exercises).&lt;&#x2F;p&gt;
&lt;p&gt;Ended up averaging &lt;code&gt;71k&lt;&#x2F;code&gt; weekly mileage during this block.&lt;&#x2F;p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Week&lt;&#x2F;th&gt;&lt;th&gt;Mileage&lt;&#x2F;th&gt;&lt;th&gt;VO2max&lt;&#x2F;th&gt;&lt;th&gt;Fast %&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;&lt;em&gt;1&lt;&#x2F;em&gt;&lt;&#x2F;td&gt;&lt;td&gt;60k&lt;&#x2F;td&gt;&lt;td&gt;56&lt;&#x2F;td&gt;&lt;td&gt;6k (10%)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;em&gt;2&lt;&#x2F;em&gt;&lt;&#x2F;td&gt;&lt;td&gt;61k&lt;&#x2F;td&gt;&lt;td&gt;56&lt;&#x2F;td&gt;&lt;td&gt;7k (11%)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;em&gt;3&lt;&#x2F;em&gt;&lt;&#x2F;td&gt;&lt;td&gt;66k&lt;&#x2F;td&gt;&lt;td&gt;56&lt;&#x2F;td&gt;&lt;td&gt;11k (17%)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;em&gt;4&lt;&#x2F;em&gt;&lt;&#x2F;td&gt;&lt;td&gt;67k&lt;&#x2F;td&gt;&lt;td&gt;57&lt;&#x2F;td&gt;&lt;td&gt;14k (20%)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;em&gt;5&lt;&#x2F;em&gt;&lt;&#x2F;td&gt;&lt;td&gt;74k&lt;&#x2F;td&gt;&lt;td&gt;57&lt;&#x2F;td&gt;&lt;td&gt;13k (17%)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;em&gt;6&lt;&#x2F;em&gt;&lt;&#x2F;td&gt;&lt;td&gt;79k&lt;&#x2F;td&gt;&lt;td&gt;56&lt;&#x2F;td&gt;&lt;td&gt;14k (18%)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;em&gt;7&lt;&#x2F;em&gt;&lt;&#x2F;td&gt;&lt;td&gt;69k&lt;&#x2F;td&gt;&lt;td&gt;57&lt;&#x2F;td&gt;&lt;td&gt;20k (29%)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;em&gt;8&lt;&#x2F;em&gt;&lt;&#x2F;td&gt;&lt;td&gt;79k&lt;&#x2F;td&gt;&lt;td&gt;57&lt;&#x2F;td&gt;&lt;td&gt;10k (13%)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;em&gt;9&lt;&#x2F;em&gt;&lt;&#x2F;td&gt;&lt;td&gt;77k&lt;&#x2F;td&gt;&lt;td&gt;57&lt;&#x2F;td&gt;&lt;td&gt;17k (22%)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;em&gt;10&lt;&#x2F;em&gt;&lt;&#x2F;td&gt;&lt;td&gt;89k&lt;&#x2F;td&gt;&lt;td&gt;58&lt;&#x2F;td&gt;&lt;td&gt;24k (27%)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;em&gt;11&lt;&#x2F;em&gt;&lt;&#x2F;td&gt;&lt;td&gt;79k&lt;&#x2F;td&gt;&lt;td&gt;58&lt;&#x2F;td&gt;&lt;td&gt;17k (21%)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;em&gt;12&lt;&#x2F;em&gt;&lt;&#x2F;td&gt;&lt;td&gt;57k&lt;&#x2F;td&gt;&lt;td&gt;58&lt;&#x2F;td&gt;&lt;td&gt;24k (42%)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;p&gt;and calculated the following zonal paces:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;3:32&#x2F;km -&amp;gt; 17km&#x2F;h ~= Z6 for mile?&lt;&#x2F;li&gt;
&lt;li&gt;3:45&#x2F;km -&amp;gt; 16km&#x2F;h ~= Z5 for 5k (18:45)&lt;&#x2F;li&gt;
&lt;li&gt;4:00&#x2F;km -&amp;gt; 15km&#x2F;h ~= Z4 for 10k (40:00)&lt;&#x2F;li&gt;
&lt;li&gt;4:16&#x2F;km -&amp;gt; 14.1km&#x2F;h ~= Z3 for HM (1:29:47)&lt;&#x2F;li&gt;
&lt;li&gt;5:00&#x2F;km -&amp;gt; 12km&#x2F;h ~= Z2&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;My journal with key-workouts for these weeks:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;1&lt;&#x2F;em&gt;; &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.strava.com&#x2F;activities&#x2F;7493451283&quot;&gt;&lt;code&gt;6x1k&lt;&#x2F;code&gt; at ~4:10&#x2F;km moltemyr&lt;&#x2F;a&gt;, &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.strava.com&#x2F;activities&#x2F;7519890766&quot;&gt;24k long tromøy&lt;&#x2F;a&gt;, 60km&lt;&#x2F;li&gt;
&lt;li&gt;&lt;em&gt;2&lt;&#x2F;em&gt;; &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.strava.com&#x2F;activities&#x2F;7530520601&quot;&gt;&lt;code&gt;6x400m&lt;&#x2F;code&gt; at 3:32&#x2F;km (aimed for 1:24)&lt;&#x2F;a&gt;, &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.strava.com&#x2F;activities&#x2F;7541421546&quot;&gt;20min fast &lt;code&gt;lysløypa&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;, &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.strava.com&#x2F;activities&#x2F;7558263435&quot;&gt;21k long&lt;&#x2F;a&gt;, 61km&lt;&#x2F;li&gt;
&lt;li&gt;&lt;em&gt;3&lt;&#x2F;em&gt;; &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.strava.com&#x2F;activities&#x2F;7569275392&quot;&gt;&lt;code&gt;4x1M&lt;&#x2F;code&gt; at 4:05&#x2F;km greenwhich&lt;&#x2F;a&gt;, &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.strava.com&#x2F;activities&#x2F;7583152332&quot;&gt;&lt;code&gt;1x5k&lt;&#x2F;code&gt; at 4:15 track&lt;&#x2F;a&gt;, &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.strava.com&#x2F;activities&#x2F;7597044380&quot;&gt;15k long&lt;&#x2F;a&gt;, 66km&lt;&#x2F;li&gt;
&lt;li&gt;&lt;em&gt;4&lt;&#x2F;em&gt;; &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.strava.com&#x2F;activities&#x2F;7607373914&quot;&gt;&lt;code&gt;4x1M&lt;&#x2F;code&gt; at 4:04&#x2F;km&lt;&#x2F;a&gt;, &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.strava.com&#x2F;activities&#x2F;7618813323&quot;&gt;&lt;code&gt;fartlek ~5k&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;, (swapped out 10k race), &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.strava.com&#x2F;activities&#x2F;7635075131&quot;&gt;20k long with &lt;code&gt;3k&lt;&#x2F;code&gt;@4:15&lt;&#x2F;a&gt;, 67k&lt;&#x2F;li&gt;
&lt;li&gt;&lt;em&gt;5&lt;&#x2F;em&gt;: &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.strava.com&#x2F;activities&#x2F;7646230166&quot;&gt;&lt;code&gt;5x1k&lt;&#x2F;code&gt; at 3:45&#x2F;km&lt;&#x2F;a&gt;, &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.strava.com&#x2F;activities&#x2F;7658563450&quot;&gt;&lt;code&gt;5k&lt;&#x2F;code&gt; at 4:08&lt;&#x2F;a&gt;, &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.strava.com&#x2F;activities&#x2F;7667675129&quot;&gt;minor &lt;code&gt;hills&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;, &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.strava.com&#x2F;activities&#x2F;7673723360&quot;&gt;20k long&lt;&#x2F;a&gt;, 74k&lt;&#x2F;li&gt;
&lt;li&gt;&lt;em&gt;6&lt;&#x2F;em&gt;: &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.strava.com&#x2F;activities&#x2F;7684661347&quot;&gt;&lt;code&gt;8x500m&lt;&#x2F;code&gt; at 3:42&#x2F;km&lt;&#x2F;a&gt;, &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.strava.com&#x2F;activities&#x2F;7699165724&quot;&gt;&lt;code&gt;5k&lt;&#x2F;code&gt; at 4:35&lt;&#x2F;a&gt;, &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.strava.com&#x2F;activities&#x2F;7713200531&quot;&gt;21k long with &lt;code&gt;5k&lt;&#x2F;code&gt; at 4:08&lt;&#x2F;a&gt;, 77k&lt;&#x2F;li&gt;
&lt;li&gt;&lt;em&gt;7&lt;&#x2F;em&gt;: &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.strava.com&#x2F;activities&#x2F;7724007694&quot;&gt;&lt;code&gt;8x1k&lt;&#x2F;code&gt; at 4:09&#x2F;km&lt;&#x2F;a&gt; (stitch), &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.strava.com&#x2F;activities&#x2F;7735503391&quot;&gt;&lt;code&gt;6x1min&lt;&#x2F;code&gt; at 3:29&lt;&#x2F;a&gt;, &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.strava.com&#x2F;activities&#x2F;7750969909&quot;&gt;10k race at 3:57&lt;&#x2F;a&gt;, 69k&lt;&#x2F;li&gt;
&lt;li&gt;&lt;em&gt;8&lt;&#x2F;em&gt;: &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.strava.com&#x2F;activities&#x2F;7768156089&quot;&gt;&lt;code&gt;6x1k&lt;&#x2F;code&gt; at 4:09&#x2F;km&lt;&#x2F;a&gt;, &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.strava.com&#x2F;activities&#x2F;7783411830&quot;&gt;10x1min at 3:40&#x2F;km&lt;&#x2F;a&gt;, &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.strava.com&#x2F;activities&#x2F;7790261377&quot;&gt;18k long with 1k@4:18&lt;&#x2F;a&gt;, 79k&lt;&#x2F;li&gt;
&lt;li&gt;&lt;em&gt;9&lt;&#x2F;em&gt;: &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.strava.com&#x2F;activities&#x2F;7800292329&quot;&gt;&lt;code&gt;2x3k&lt;&#x2F;code&gt;+ &lt;code&gt;2x1500&lt;&#x2F;code&gt; at 4:04&lt;&#x2F;a&gt;, &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.strava.com&#x2F;activities&#x2F;7826632615&quot;&gt;21k long with 8k at 4:15&lt;&#x2F;a&gt;, 77k&lt;&#x2F;li&gt;
&lt;li&gt;&lt;em&gt;10&lt;&#x2F;em&gt;: &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.strava.com&#x2F;activities&#x2F;7842666966&quot;&gt;&lt;code&gt;2x3k&lt;&#x2F;code&gt;+&lt;code&gt;2x2k&lt;&#x2F;code&gt; at 4:07&lt;&#x2F;a&gt;, &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.strava.com&#x2F;activities&#x2F;7854021660&quot;&gt;2x2x400m at 3:30&lt;&#x2F;a&gt;, &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.strava.com&#x2F;activities&#x2F;7863642045&quot;&gt;21k long with 10k at 4:15&lt;&#x2F;a&gt;, 89k&lt;&#x2F;li&gt;
&lt;li&gt;&lt;em&gt;11&lt;&#x2F;em&gt;: &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.strava.com&#x2F;activities&#x2F;7878906931&quot;&gt;5k race attempt&lt;&#x2F;a&gt;, &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.strava.com&#x2F;activities&#x2F;7888706732&quot;&gt;4x1M at 4:01&lt;&#x2F;a&gt;, &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.strava.com&#x2F;activities&#x2F;7900273246&quot;&gt;18k long with 6k at 4:15&lt;&#x2F;a&gt; (big headwind), 79k&lt;&#x2F;li&gt;
&lt;li&gt;&lt;em&gt;12&lt;&#x2F;em&gt; taper week (intensive, but short mileage 60%, muscle monday only, &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.strava.com&#x2F;activities&#x2F;7908624435&quot;&gt;2k speed&lt;&#x2F;a&gt;, &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.strava.com&#x2F;activities&#x2F;7919221158&quot;&gt;1k hills&lt;&#x2F;a&gt;), then &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.strava.com&#x2F;activities&#x2F;7934772777&quot;&gt;HM&lt;&#x2F;a&gt;, 57k&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;By many metrics (Garmin VO2max estimate, Strava fitness), I peaked nicely for the race:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;imgs&#x2F;running22&#x2F;fitness-hm.png&quot; alt=&quot;Strava fitness graph climbing from 15 to 34 in a year, peaking at 34 at the half marathon day&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;and ended up feeling OK after the race. Got one blood-shot big toenail to show off for a year, but will leave you with the mental image.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;recovery&quot;&gt;Recovery&lt;&#x2F;h4&gt;
&lt;p&gt;2 weeks of pretty low effort (40k, 50k), no speed, run every other day.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;q4-chiang-mai&quot;&gt;Q4: Chiang Mai&lt;&#x2F;h3&gt;
&lt;p&gt;Second block. 8w. A bit of an impromptu registration for the Chiang Mai Marathon (Half), and a bit of fun that to test how my training translate across continents to a new humid environment. Unfortunately, this block got cancelled near the end.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;1&lt;&#x2F;em&gt;: &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.strava.com&#x2F;activities&#x2F;8016708080&quot;&gt;&lt;code&gt;6x1k&lt;&#x2F;code&gt; at 4:00&#x2F;km&lt;&#x2F;a&gt;, &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.strava.com&#x2F;activities&#x2F;8042805169&quot;&gt;19k long&lt;&#x2F;a&gt;, 67k&lt;&#x2F;li&gt;
&lt;li&gt;&lt;em&gt;2&lt;&#x2F;em&gt;: &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.strava.com&#x2F;activities&#x2F;8052372984&quot;&gt;&lt;code&gt;7x1k&lt;&#x2F;code&gt; at 3:57&#x2F;km&lt;&#x2F;a&gt;, &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.strava.com&#x2F;activities&#x2F;8071743943&quot;&gt;21k long&lt;&#x2F;a&gt;, 80k (last in London)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;em&gt;3&lt;&#x2F;em&gt;: &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.strava.com&#x2F;activities&#x2F;8084716741&quot;&gt;&lt;code&gt;3.5x1M&lt;&#x2F;code&gt; at 4:05&#x2F;km&lt;&#x2F;a&gt;, &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.strava.com&#x2F;activities&#x2F;8109412998&quot;&gt;700m climb long&lt;&#x2F;a&gt;, 72k (Chiang Mai)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;em&gt;4&lt;&#x2F;em&gt;: &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.strava.com&#x2F;activities&#x2F;8124189835&quot;&gt;&lt;code&gt;4x1M&lt;&#x2F;code&gt; at 4:05&#x2F;km&lt;&#x2F;a&gt;, &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.strava.com&#x2F;activities&#x2F;8142151676&quot;&gt;20k long&lt;&#x2F;a&gt;, 85k&lt;&#x2F;li&gt;
&lt;li&gt;&lt;em&gt;5&lt;&#x2F;em&gt;: &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.strava.com&#x2F;activities&#x2F;8155702793&quot;&gt;&lt;code&gt;4x1M&lt;&#x2F;code&gt; at 4:03&#x2F;km&lt;&#x2F;a&gt;, &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.strava.com&#x2F;activities&#x2F;8173542205&quot;&gt;22k long&lt;&#x2F;a&gt;, 92k&lt;&#x2F;li&gt;
&lt;li&gt;&lt;em&gt;6&lt;&#x2F;em&gt;: 8K recovery week, &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.strava.com&#x2F;activities&#x2F;8187100758&quot;&gt;&lt;code&gt;8k&lt;&#x2F;code&gt; MAF test&lt;&#x2F;a&gt;, and covid 🪦, 38k&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Got covid two weeks ahead of the race. First time, but there are &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;old.reddit.com&#x2F;r&#x2F;AdvancedRunning&#x2F;comments&#x2F;xr60mg&#x2F;an_athletes_guide_to_managing_covid_risks_by_matt&#x2F;&quot;&gt;ample&lt;&#x2F;a&gt;, &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;old.reddit.com&#x2F;r&#x2F;AdvancedRunning&#x2F;comments&#x2F;yn5ypp&#x2F;tested_covid_positive_10_days_before_a_marathon&#x2F;&quot;&gt;warnings&lt;&#x2F;a&gt; about running hard post-covid.&lt;&#x2F;p&gt;
&lt;p&gt;On the positive side, with an ungodly &lt;code&gt;4AM start&lt;&#x2F;code&gt; for this race and a &lt;code&gt;90%&lt;&#x2F;code&gt; average humidity (which tanked my running efficiency); having to cancel a difficult masochistic exercise you set purely for yourself is not universally a negative.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;q4-covid&quot;&gt;Q4: Covid&lt;&#x2F;h3&gt;
&lt;p&gt;Unfortunately, it had been one full year since my last (3rd) vaccination shot - and along with probably being hit with one of the &lt;code&gt;Q&lt;&#x2F;code&gt; variants in southeast asia - this disease was not fun. Just as one symptom disappeared another came in to replace it.&lt;&#x2F;p&gt;
&lt;p&gt;While &lt;strong&gt;my&lt;&#x2F;strong&gt; stress graph on the worst day looked pretty benign (mostly medium stress), my partner&#x27;s stress graph on Garmin was the worst I have ever seen (with &amp;gt;10 hours of high stress in one day). Still, the fever was pretty bad for me, and am now getting light headed doing easy things 6 days on, so it&#x27;s definitely not &quot;just a cold&quot;.&lt;&#x2F;p&gt;
&lt;p&gt;BMJ has a &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;blogs.bmj.com&#x2F;bjsm&#x2F;2022&#x2F;04&#x2F;23&#x2F;graduated-return-to-play-after-sars-cov-2-infection-what-have-we-learned-and-why-weve-updated-the-guidance&#x2F;&quot;&gt;Graduated Return To Play Guidance Protocol&lt;&#x2F;a&gt; and based on only having some &quot;below-the-neck&quot; systemic symptoms (fever), I am only planning on doing light jogging during the second half of December if&#x2F;once 🤞 it&#x27;s possible to:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;complete all activities of daily living without excessive fatigue and&#x2F;or breathlessness and be able to walk on the flat without getting breathless&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;So, yeah. Use your masks while indoors people. &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.reuters.com&#x2F;business&#x2F;healthcare-pharmaceuticals&#x2F;repeat-covid-is-riskier-than-first-infection-study-finds-2022-11-10&#x2F;&quot;&gt;Each time you get reinfected, the risks increase&lt;&#x2F;a&gt;. Hopefully, I can find a way back.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;random-thoughts&quot;&gt;Random Thoughts&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;next-year&quot;&gt;Next year&lt;&#x2F;h3&gt;
&lt;p&gt;Provided recovery allows; I hope to keep the volume. It &lt;strong&gt;is a bit much&lt;&#x2F;strong&gt; - and just doing a fraction of it will for sure be enough to just stay healthy - but I kind of want to see how far I can stretch it for a bit longer. It&#x27;s also made me feel sharper.&lt;&#x2F;p&gt;
&lt;p&gt;Want to train specifically for shorter distances like 1M &#x2F; 3000 &#x2F; 5k, even though beating PBs at this points does come with 8+ hours of mandatory training a week and injury risks so how much this is carried on next year is heavily conditional on nothing bad happening - a statement generally not served with good odds in the 2020s.&lt;&#x2F;p&gt;
&lt;p&gt;Not planning on higher distance events like marathons just because of how detrimental it seems to be to your overall &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;pubmed.ncbi.nlm.nih.gov&#x2F;17465622&#x2F;&quot;&gt;immune system&lt;&#x2F;a&gt; and how much recovery you need. My current line of thinking is; why train for 4 months for an event that takes you out of the game for 2-4 weeks? Better find a smooth average that you can sustain.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;brain: he says this while planning on beating PBs; requiring the opposite of smooth averages.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Anyway, running has been a fun side-project that&#x27;s not been software related. It&#x27;s been interested reading about &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;sportsmedicine-open.springeropen.com&#x2F;articles&#x2F;10.1186&#x2F;s40798-022-00438-7&quot;&gt;how professionals train&lt;&#x2F;a&gt;, and seeing effects first hand.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;shoes&quot;&gt;Shoes&lt;&#x2F;h3&gt;
&lt;p&gt;The silliest thing about this &lt;em&gt;accessible sport&lt;&#x2F;em&gt; though; is the amount of shoes you burn through. If you run &lt;code&gt;100k&lt;&#x2F;code&gt; a week, and follow the &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.runnersworld.com&#x2F;gear&#x2F;a33233314&#x2F;how-many-miles-do-running-shoes-last&#x2F;&quot;&gt;500-800k&lt;&#x2F;a&gt; recommendation for max shoe mileage, you&#x27;ll blast through 5-10 pairs of running shoes a year, costing you somewhere from &lt;code&gt;£500-2000&lt;&#x2F;code&gt; per year for high end shoes. The &lt;code&gt;£60&lt;&#x2F;code&gt; I paid to run in Royal Parks was actually worth it just for the &lt;code&gt;15% off&lt;&#x2F;code&gt; coupon at a running shoe store.&lt;&#x2F;p&gt;
&lt;p&gt;On the plus side, this is temporary. Wish you all good health in 2023.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Factober 5400</title>
        <published>2022-10-30T00:00:00+00:00</published>
        <updated>2022-10-30T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://clux.dev/post/2022-10-31-factober/"/>
        <id>https://clux.dev/post/2022-10-31-factober/</id>
        
        <content type="html" xml:base="https://clux.dev/post/2022-10-31-factober/">&lt;p&gt;Round two of escapism this year. This is a post for myself with various information as a conclusion to my recent fixation into designing an &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;factoriobox.1au.us&#x2F;map&#x2F;info&#x2F;64a9a7e7a7c45dc3fc2c0ade02dee4c1d3eede36123460c3761a39d901587306&quot;&gt;efficient and compact factorio megabase&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;plan&quot;&gt;Plan&lt;&#x2F;h2&gt;
&lt;p&gt;I keep coming back to this game about once a year. There is something very soothing about the type of play this game encourages. Playing factorio basically feels like being part of some parallel software project; there&#x27;s builtin dashboards, circuit logic, sharable blueprints, benchmarks, optimizations, and all without the usual externalities of a large software org&#x2F;project. And at this point for me, it&#x27;s all about the optimization and theorycrafting.&lt;&#x2F;p&gt;
&lt;p&gt;I set out with the &lt;strong&gt;following goal&lt;&#x2F;strong&gt;:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;produce &lt;strong&gt;2 full blue lanes of every science&lt;&#x2F;strong&gt; or 5400 SPM (Science Per Minute)&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Certain cheats were used to avoid the less challenging parts of the game:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;spawning ore &#x2F; resources&lt;&#x2F;strong&gt; (to minimize ore replacement and transport work)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;speeding up the game&lt;&#x2F;strong&gt; (to simulate idling &#x2F; expansion and simplify moving around)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;disabling pollution&lt;&#x2F;strong&gt; (as the biters were contained and later defeated anyway)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;this lets us focus on the parts of the game that&#x27;s more interesting to me; optimizing the factory without having to deal with stuff running out or setting up new chaotic trains all the time. It also enables us to optimize the medium sized factory pieces in complete isolation without suddenly being limited by ore or UPS (that&#x27;s the equivalent part of managing a software project I am trying to avoid).&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;technicalfactorio&#x2F;comments&#x2F;nlnsoq&#x2F;20_x_1k_belt_cell_megabase_very_high_ups&#x2F;&quot;&gt;Copy-pasting&lt;&#x2F;a&gt; small &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;factorio&#x2F;comments&#x2F;v53qoe&#x2F;high_ups_40k_cell_base&#x2F;&quot;&gt;cell bases&lt;&#x2F;a&gt; is &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;technicalfactorio&#x2F;comments&#x2F;ni2055&#x2F;20k_rail_megafactory_that_runs_at_60_ups_on_my&#x2F;&quot;&gt;currently the leading way&lt;&#x2F;a&gt; to get the most productive bases without choking the game (i.e. maintaining 60 UPS).&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;We set out to make each &lt;strong&gt;science build&lt;&#x2F;strong&gt; be entirely &lt;strong&gt;self-contained&lt;&#x2F;strong&gt; with just a single train station as an output, and we built upon an old starter base that had already achieved almost 200 mining productivity.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;sideprojects&quot;&gt;Sideprojects&lt;&#x2F;h3&gt;
&lt;p&gt;But before we get into it, here are several other things we built along the way that (in true factorio style) did not in any way contribute to the main goal.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;wildlife-preserve&quot;&gt;Wildlife Preserve&lt;&#x2F;h4&gt;
&lt;p&gt;..to justify all those military upgrades:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;imgs&#x2F;factorio&#x2F;wildlife-preserve.webp&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;which we eventually eradicated in a comically inelegant way:&lt;&#x2F;p&gt;
&lt;div class=&quot;yv&quot;&gt;
    &lt;iframe src=&quot;https:&#x2F;&#x2F;www.youtube-nocookie.com&#x2F;embed&#x2F;gFvTfAO5pJs&quot; title=&quot;Youtube&quot; class=&quot;yvi&quot; webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;&#x2F;iframe&gt;
&lt;&#x2F;div&gt;
&lt;h4 id=&quot;fishing-outpost&quot;&gt;Fishing Outpost&lt;&#x2F;h4&gt;
&lt;p&gt;A sustainable ecosystem catching 600 fish over its lifetime on its own power&#x2F;robo network. Built right above the launchers:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;imgs&#x2F;factorio&#x2F;fishing-outpost.webp&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h4 id=&quot;wood-burner&quot;&gt;Wood Burner&lt;&#x2F;h4&gt;
&lt;p&gt;An automated train service to get rid of all that wood:&lt;&#x2F;p&gt;
&lt;div class=&quot;yv&quot;&gt;
    &lt;iframe src=&quot;https:&#x2F;&#x2F;www.youtube-nocookie.com&#x2F;embed&#x2F;UqvxxgvbCaQ&quot; title=&quot;Youtube&quot; class=&quot;yvi&quot; webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;&#x2F;iframe&gt;
&lt;&#x2F;div&gt;
&lt;p&gt;(normally triggers automatically, but there were no wood in the requester chests).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;factory-designs&quot;&gt;Factory Designs&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;rails&quot;&gt;Rails&lt;&#x2F;h3&gt;
&lt;p&gt;When starting out with production&#x2F;purple science I originally had 16 full blue belts of rails that fed into the purple science factories. Now we make rails inline in a single factory that feeds 4 purple science assemblers:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;imgs&#x2F;factorio&#x2F;purple-rail.webp&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;I&#x27;ve not seen anyone else do this, but it works pretty well. It sushies sticks around two columns, and does a bit of crate magic to fit 6 input inserters, 3 input lanes, and 4 output inserters inside a 12 beaconed bounding box, but it actually works in the end.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;green-circuit-plastic-row&quot;&gt;Green Circuit &#x2F; Plastic Row&lt;&#x2F;h3&gt;
&lt;p&gt;One of the more optimized factory pieces. A single lane that produces a mostly full, mixed plastic&#x2F;green blue belt.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;imgs&#x2F;factorio&#x2F;green-lane.webp&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;It requires very precise spawning of coal, iron, copper so that we can have 2 chemical plants for plastic, and 4 smelters of iron + copper for a single 12 beaconed green factory. Some of the time all the furnaces are running:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;imgs&#x2F;factorio&#x2F;green-on.webp&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The green factory is what requires special attention here:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;imgs&#x2F;factorio&#x2F;green-car.webp&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;One green factory alone can actually &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;kirkmcdonald.github.io&#x2F;calc.html#tab=graph&amp;amp;data=1-1-19&amp;amp;rate=s&amp;amp;min=3&amp;amp;belt=express-transport-belt&amp;amp;mprod=800&amp;amp;dm=p3&amp;amp;db=s3&amp;amp;dbc=24&amp;amp;t=off&amp;amp;items=electronic-circuit:f:1&quot;&gt;ALMOST supply a half belt (22.4 out of 22.5)&lt;&#x2F;a&gt; if you can fully beacon it. It&#x27;s just that doing this is very difficult because it takes more than a full blue belt of copper cables that it is very hard to supply it while making room for all the the iron and the outputs. This is why there&#x27;s a car in between the beacons that serves as a chest.&lt;&#x2F;p&gt;
&lt;p&gt;A car can be picked up from and inserted to at very strange angles at more than one length so it&#x27;s great for fitting irregular gaps that doesn&#x27;t work with chests (or would require more inserters). The game doesn&#x27;t want you to do this though. It cannot be copy-pasted so you have to plant it manually. &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=6mgQwzom0Xo&quot;&gt;Doshington showcases the pain this type of design leads to&lt;&#x2F;a&gt; .&lt;&#x2F;p&gt;
&lt;p&gt;You actually have to remove one middle beacon when the inserters starts running to trick the inserters to lock onto the car before planting the beacon down again (otherwise they want to grab the speed modules).&lt;&#x2F;p&gt;
&lt;p&gt;The end result is that you can transfer 24 cables to the assembler through a one space gap on every swing cycle.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;red-circuit-row&quot;&gt;Red Circuit Row&lt;&#x2F;h3&gt;
&lt;p&gt;Continuing onwards from the green &#x2F; plastic row, is another inline copper smelter section that joins into a nearly full copper cable assembler, that sufficiently feeds 8 factories of red chips.
The red chips are also inserter clocked so they all swing together which looks very satisfying, but I don&#x27;t think it actually helps with UPS.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;imgs&#x2F;factorio&#x2F;8f-red.webp&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;This joins onto the green setup so we can end up with these huge stacks for large red factories like this one for RCUs:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;imgs&#x2F;factorio&#x2F;red-rows-rcu.webp&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;low-density-row&quot;&gt;Low Density Row&lt;&#x2F;h3&gt;
&lt;p&gt;A &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;kirkmcdonald.github.io&#x2F;calc.html#tab=graph&amp;amp;data=1-1-19&amp;amp;rate=s&amp;amp;min=3&amp;amp;belt=express-transport-belt&amp;amp;mprod=800&amp;amp;dm=p3&amp;amp;db=s3&amp;amp;dbc=24&amp;amp;t=off&amp;amp;items=low-density-structure:f:10&quot;&gt;full row of low density structures can consist of 10 fully beaconed factories supplied by two lanes of copper&lt;&#x2F;a&gt;. It needs a lot of belts, and manual input setup, plus a bunch of inserters to load onto the belt and back in from the belt, so we searched for a more direct setup (without sacrificing too much at the number of machines).&lt;&#x2F;p&gt;
&lt;p&gt;The end setup has 20 smelters to 10 LDS assemblers, which is an extra 4 smelters than is needed, so we beacon them slightly less, but end up with 100% direct insertion on copper. The downside? Lots and lots of cars.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;imgs&#x2F;factorio&#x2F;lds-140cars.webp&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;This &lt;code&gt;70&#x2F;s&lt;&#x2F;code&gt; LDS factory for space science consists of 14 rows of 10 cars each, which is definitely a hassle to setup and filter.&lt;&#x2F;p&gt;
&lt;p&gt;Ideally the equally sized steel would be lined up to face LDS on the input side (like they are in yellow science below), because here we mix belts first then use splitters later just to avoid a 14 lane wide thing through the base.&lt;&#x2F;p&gt;
&lt;p&gt;Regardless, it looks different to everything else and is kind of beautiful at night:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;imgs&#x2F;factorio&#x2F;lds-at-night.webp&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Enjoying the &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;kirkmcdonald.github.io&#x2F;calc.html#tab=graph&amp;amp;data=1-1-19&amp;amp;rate=s&amp;amp;min=3&amp;amp;belt=express-transport-belt&amp;amp;mprod=800&amp;amp;dm=p3&amp;amp;db=s3&amp;amp;dbc=24&amp;amp;t=off&amp;amp;items=low-density-structure:f:10&amp;amp;modules=copper-plate:;s3:20&quot;&gt;efficiency of the ratios&lt;&#x2F;a&gt;. All the smelters are running (94% avg utilization).&lt;&#x2F;p&gt;
&lt;h3 id=&quot;labs&quot;&gt;Labs&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;imgs&#x2F;factorio&#x2F;labs.webp&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Extracted this more conventional lab design to test it out &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;technicalfactorio&#x2F;comments&#x2F;y6c87j&#x2F;ups_wars_6_labs&#x2F;&quot;&gt;UPS Wars 6: Labs&lt;&#x2F;a&gt; for this with &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;factoriobox.1au.us&#x2F;map&#x2F;info&#x2F;e1f29dac1355d49bc4036233ddad222698b2c158b198f790a20c9f87d5773d6f&quot;&gt;this entry&lt;&#x2F;a&gt;. Nothing remarkable, except perhaps for the long winding belts in different direction. It&#x27;s slightly overscaled to ensure it will fully drain half belts.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;trains&quot;&gt;Trains&lt;&#x2F;h2&gt;
&lt;p&gt;All of the science cities &#x2F; space component cities unload onto one of two major unload depots.&lt;&#x2F;p&gt;
&lt;p&gt;The main depots have robo networks to distribute nuclear fuel from a single supply train and they only stop at the hub (which is enough).&lt;&#x2F;p&gt;
&lt;h3 id=&quot;lab-depot&quot;&gt;Lab Depot&lt;&#x2F;h3&gt;
&lt;p&gt;Lab depot looks like a close-up of a complicated circuit:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;imgs&#x2F;factorio&#x2F;labs-cpu.webp&quot; alt=&quot;&quot; &#x2F;&gt;
&lt;img src=&quot;&#x2F;imgs&#x2F;factorio&#x2F;lab-rails.webp&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Very happy with this unload station. We pull exactly 4 half-belts and that can be perfectly filled via two inserters (with an 8 size override) at the cost of less buffer chests (that we don&#x27;t need those). No splitters anywhere!&lt;&#x2F;p&gt;
&lt;h3 id=&quot;rocket-depot&quot;&gt;Rocket Depot&lt;&#x2F;h3&gt;
&lt;p&gt;Probably not the most efficient train unloading, but gotta get 4 wagons of stuff into 6 launchers via 2 inserters per launcher so it&#x27;s tricky.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;imgs&#x2F;factorio&#x2F;space-science.webp&quot; alt=&quot;&quot; &#x2F;&gt;
&lt;img src=&quot;&#x2F;imgs&#x2F;factorio&#x2F;space-unload.webp&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Lot&#x27;s of 2x3 splitters and an eventually emptying unloader with a priority line down to satellites... It&#x27;s ultimately a little overscaled compared to the other sciences so a few seconds of semi-filled belts, while not particularly efficient, doesn&#x27;t hurt production.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;nuclear-fuel&quot;&gt;Nuclear Fuel&lt;&#x2F;h3&gt;
&lt;p&gt;A minimal fuel factory that supplies all trains (piggy-backing on any oil refinery because it uses basically nothing). It&#x27;s almost never active because it only has destination stops available when the hubs have less than 200 items on the receiving chests (circuit network on the receiving side).&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;imgs&#x2F;factorio&#x2F;nuclear-fuel.webp&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;science-cities&quot;&gt;Science Cities&lt;&#x2F;h2&gt;
&lt;p&gt;Quickly going through these with factorio calc links.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;red&quot;&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;kirkmcdonald.github.io&#x2F;calc.html#zip=dYrBCcMwDAC30c&#x2F;gxn00LhpGsRUwjSxjKdDxmwxQDu5xXCUnfISLFSY5o4G0jgk2Phz5OyabBZ&#x2F;Ubej0cGeQMbXiK0aogiNB3dBuF1ye4Kj7Ds1ZDOl0FfKmPVhp3AuHQeWTZ14jiNbz4P&#x2F;T21Je4g8=&quot;&gt;Red&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;Max beaconing reds would give an awkward ratio whereas doing pairs here gives us just enough with 12F each column.
It would be possible to do 11F we did some at higher beaconing though.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;imgs&#x2F;factorio&#x2F;red.webp&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;green&quot;&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;kirkmcdonald.github.io&#x2F;calc.html#zip=bU3LCsMwDPsbnxpI2zHWDn9MmrgjLC9sF&#x2F;b5ay6DsSGhgySk4NThaE4swE4JBXIsOMNGSZFejUnEKLsirbKabkNuXAPerIWQsc0QNpSuHqcLKNZ9h6iUBVN9RNHojfhIxZNpzj9XXhcLuYYjkWAsQqzEq8wf3k8dr8P360&#x2F;BDv&#x2F;nezjZNw==&quot;&gt;Green&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;Max beaconed smelters and an ad-hoc &amp;lt;4 half belt output of green circuits, and only max beaconing the last pack factory to fill the lane.
Again, max beaconing is just not enough with 12F per column pair, so doing pairs with one last max beaconed for 14Fx4. Zero splitters. More gear factories than necessary, but more direct insertion.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;imgs&#x2F;factorio&#x2F;green.webp&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;both red + green on the map:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;imgs&#x2F;factorio&#x2F;redgreen.webp&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;military&quot;&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;kirkmcdonald.github.io&#x2F;calc.html#zip=fYtJCgJBDEVvk5UFrS2iLTlMrEo3wZpIIg6nVzeCCPI&#x2F;b&#x2F;GHRE64Di8dQMkZDYpUHOHE2ZFvXdksuFK13tTDO4bStSXcDwOkgn2EdEJ7M+JmC45tnkGci2GRLE56DxaFa+TQKZ4nnQ4DlJYumQ27sEapS9B2qclCoYUeUnmy8ePji+vdahZl0vJvsihXSl&#x2F;NyrxVDlfK+ffwBA==&quot;&gt;Military&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;Annoyingly large for something that&#x27;s off most of the time. Lots of clocked smelters, and the actual main ingredient factories are tiny.. Did a cool inline wall thing for each row for the actual science pack, and a big grenade factory, but lots of room for improvement.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;imgs&#x2F;factorio&#x2F;black.webp&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;One fun thing here though; this factory &lt;strong&gt;shuts off its own power&lt;&#x2F;strong&gt; when the train station buffer chests is full &lt;code&gt;and&lt;&#x2F;code&gt; no trains are at the station (circuit network connected to the chests and the train station via a combinator). This saves on power, but not on UPS, sadly.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;chemical&quot;&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;kirkmcdonald.github.io&#x2F;calc.html#data=1-1-19&amp;amp;rate=s&amp;amp;min=3&amp;amp;p=basic&amp;amp;belt=express-transport-belt&amp;amp;mprod=800&amp;amp;dm=p3&amp;amp;db=s3&amp;amp;dbc=24&amp;amp;t=off&amp;amp;items=chemical-science-pack:r:90&amp;amp;modules=pipe:s3:s3:s3:s3;s3:20,basic-oil-processing:;s3:32&quot;&gt;Chemical&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;All ore&#x2F;oil&#x2F;reds + inputs for reds on the left through the green car lane setup, and then on the right inline sulfur (turns out one chemical plant can supply 45&#x2F;s chemical science). Uses basic oil here because it&#x27;s not the most demanding, but other peoples&#x27; comments suggest it&#x27;s probably a wash performance wise.
&lt;img src=&quot;&#x2F;imgs&#x2F;factorio&#x2F;blue.webp&quot; alt=&quot;&quot; &#x2F;&gt;
&lt;img src=&quot;&#x2F;imgs&#x2F;factorio&#x2F;blue2.webp&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;production&quot;&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;kirkmcdonald.github.io&#x2F;calc.html#zip=TY1dagMxDIRvo6cVbLKhNC46jGNri6j&#x2F;kJTQ3j5eSiBI6OGb0UyOHumEc66g0ZkMqjTa4MbFiX+Hshm6xmajq+OBoQ7tmT7XFXKlsUG+kR030fkCTn3fQZyr0eG7J5fe0JJwS4wjpp+g4bpCnVpho5gfcSoZuxScH2k2SvsOX7aF7bxw4eQqCfe7tpg4TPzaw3L6WF41D&#x2F;E&#x2F;&#x2F;I99dy0apbyDJw==&quot;&gt;Production&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;imgs&#x2F;factorio&#x2F;purple-inputs.webp&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;a huge chunk of the factory is literally just dealing with steel for rails and furnaces:
&lt;img src=&quot;&#x2F;imgs&#x2F;factorio&#x2F;purple.webp&quot; alt=&quot;&quot; &#x2F;&gt;
which is a slightly overscaled (as can be seen from the few inactive furnaces), but it&#x27;s a bit unevenly drawn from atm.
&lt;img src=&quot;&#x2F;imgs&#x2F;factorio&#x2F;purple-steel.webp&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;utility&quot;&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;kirkmcdonald.github.io&#x2F;calc.html#data=1-1-19&amp;amp;rate=s&amp;amp;min=3&amp;amp;belt=express-transport-belt&amp;amp;mprod=800&amp;amp;dm=p3&amp;amp;db=s3&amp;amp;dbc=24&amp;amp;t=off&amp;amp;items=utility-science-pack:f:60&amp;amp;modules=advanced-oil-processing:;s3:32,pipe:s3:s3:s3:s3&quot;&gt;Utility&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;Slightly overscaled (60F) and undersupplied (can supply 59F). 57F ended up in an awkward 3 column build that needed to be split a lot. Best to stick to 4 columns if you are going to load onto 4 wagons. Oil is split into two advanced oil parts; inner one for lube&#x2F;sulfuric and the outer just for petroleum for LDS.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;imgs&#x2F;factorio&#x2F;yellow.webp&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;space-science&quot;&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;kirkmcdonald.github.io&#x2F;calc.html#zip=XU7vasMxCHybfEqga&#x2F;qlGT6Mv8R1oebP1MAefymFsg2PEz3xzvCAm+D8dAUN4S3sujpBI1DXaofoJhyoNbuD2IC+p5BqMMGuc4iFx9qVBjO6coA+OMP54qpRU9CJmYLmSn33PdyTpOvJtVEWkwLmvNpitCFJ4ws+D+TA9WvRB2aro6f3LcSzFywoqS&#x2F;mf+R1h2betoniC14Ho2zjTvzHQEa+k21B7Pn64nUSlfBM9vv2Bw==&quot;&gt;Space Science&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;Can just be done with six rocket launchers running near constantly provided we have the ingredients.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;rcu&quot;&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;kirkmcdonald.github.io&#x2F;calc.html#zip=RY3NCsMwDIPfxqcG+nfoMvwwWeKOsCQOsTv2+EspY0jo8IGk4NThZLpu0JwSCuRYcIEHJUX61EYiRpsrUrmpOTHk2jjgNo4QMtYFwgPlTI&#x2F;zCoq87xCVsmBj&#x2F;yI1nos2TuYoUe1up22FzOFIJOjC2xVPwXBMps&#x2F;6fhfL095lscs8&#x2F;MlVPvE8DlKpV64N29HPXw==&quot;&gt;RCU&lt;&#x2F;a&gt;&lt;&#x2F;h4&gt;
&lt;p&gt;Slightly overscaled because the speed module row looked awkward when optimal. Probably one of the most streamlined parts, but also most heavily abuses ore spawning (mixed lane inputs for both speed modules and blue processors).
Blue build is from Stevetrov&#x27;s cell base with a slight beaconing modification.
Tried tons of blue builds for this and they&#x27;re either all massive (like this), or they need double the amount of inserters for slightly more production, or they are smaller, but need so many belt inputs of plates that it&#x27;s super awkward to plot down and less efficient. Didn&#x27;t benchmark this for UPS, just went with gut feel based on smelter uptime, inserter numbers and inserter activity.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;imgs&#x2F;factorio&#x2F;rcu.webp&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h4 id=&quot;lds&quot;&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;kirkmcdonald.github.io&#x2F;calc.html#data=1-1-19&amp;amp;rate=s&amp;amp;min=3&amp;amp;belt=express-transport-belt&amp;amp;mprod=800&amp;amp;dm=p3&amp;amp;db=s3&amp;amp;dbc=24&amp;amp;t=off&amp;amp;items=low-density-structure:f:140&amp;amp;modules=advanced-oil-processing:;s3:32&quot;&gt;LDS&lt;&#x2F;a&gt;&lt;&#x2F;h4&gt;
&lt;p&gt;Supplies both rockets and satellites.
&lt;img src=&quot;&#x2F;imgs&#x2F;factorio&#x2F;lds-140cars.webp&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h4 id=&quot;rf-cf-rf2&quot;&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;kirkmcdonald.github.io&#x2F;calc.html#data=1-1-19&amp;amp;rate=s&amp;amp;min=3&amp;amp;p=coal&amp;amp;belt=express-transport-belt&amp;amp;dm=p3&amp;amp;db=s3&amp;amp;dbc=24&amp;amp;items=rocket-fuel:f:112&amp;amp;modules=coal-liquefaction:;s3:32&quot;&gt;RF CF&lt;&#x2F;a&gt; + &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;kirkmcdonald.github.io&#x2F;calc.html#data=1-1-19&amp;amp;rate=s&amp;amp;min=3&amp;amp;belt=express-transport-belt&amp;amp;dm=p3&amp;amp;db=s3&amp;amp;dbc=24&amp;amp;items=rocket-fuel:f:108&amp;amp;modules=advanced-oil-processing:;s3:32&quot;&gt;RF2&lt;&#x2F;a&gt;&lt;&#x2F;h4&gt;
&lt;p&gt;Partially from coal liquefaction just because i wanted to learn how to do it well. It&#x27;s probably not the most optimal choice since it needs lots of mixed coal belts to get the coal in that deep (yes, yes).&lt;&#x2F;p&gt;
&lt;p&gt;CF build is undersupplied with 12 refineries, but doing it that way allows us not to copy paste the advanced oil one another time.
It ends up being almost perfectly scaled for the rockets + satellites. Belts &lt;strong&gt;just&lt;&#x2F;strong&gt; start to fill before the next train arrives.&lt;&#x2F;p&gt;
&lt;p&gt;All the solid fuel factories piggy-back on the ore clock for less swings.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;imgs&#x2F;factorio&#x2F;rocketfuel.webp&quot; alt=&quot;&quot; &#x2F;&gt;
&lt;img src=&quot;&#x2F;imgs&#x2F;factorio&#x2F;cf.webp&quot; alt=&quot;&quot; &#x2F;&gt;
Pretty happy about the beaconing line-up with the refineries and chemical plants:
&lt;img src=&quot;&#x2F;imgs&#x2F;factorio&#x2F;cf-beaconing.webp&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h4 id=&quot;satellites&quot;&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;kirkmcdonald.github.io&#x2F;calc.html#zip=XYtdigMxDINvk6cJpZMtS1N8GE&#x2F;ihYDzU9uBHr8zD9vSog8hhJTREM5+19XV0iC4ARtqSW4jNqDHEFL1Jth0dDF&#x2F;1C5XGMHlDfTwBOuPK0ZVQdGIec9R4vp7urja82RSSB3Zc7lP+sNkpbd40xDDurwfFF4s2hnFD2zEcd&#x2F;9s2BKs05G6&#x2F;LRC2aU2Cbzlz0B&quot;&gt;Satellites&lt;&#x2F;a&gt;&lt;&#x2F;h4&gt;
&lt;p&gt;The final component. It&#x27;s better to look at calculator links for &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;kirkmcdonald.github.io&#x2F;calc.html#zip=VYi9CsMwDAbfRpuHxl0S0MPIsQaDf4Q+BfL4bZZCueOGqxLCr&#x2F;RlJ5dQBo02OZNxEbSTivZgvc0VSOEyYcsjPZvqYMtUC+PpydubWugAY3XxZDK1H37sNFa9uv5&#x2F;5J8f&quot;&gt;Solar&lt;&#x2F;a&gt; + &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;kirkmcdonald.github.io&#x2F;calc.html#data=1-1-19&amp;amp;min=3&amp;amp;p=basic&amp;amp;belt=express-transport-belt&amp;amp;dm=p3&amp;amp;db=s3&amp;amp;dbc=24&amp;amp;items=accumulator:r:540&amp;amp;modules=accumulator:s3:s3:s3:s3&quot;&gt;Accumulators&lt;&#x2F;a&gt; + &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;kirkmcdonald.github.io&#x2F;calc.html#data=1-1-19&amp;amp;min=3&amp;amp;p=basic&amp;amp;belt=express-transport-belt&amp;amp;dm=p3&amp;amp;db=s3&amp;amp;dbc=24&amp;amp;items=processing-unit:r:540&quot;&gt;Processors&lt;&#x2F;a&gt; (the real output part of this chunk) because we leech LDS + RF from the trains.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;imgs&#x2F;factorio&#x2F;space-overview.webp&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;It&#x27;s a pretty ugly mess that was designed early, but it&#x27;s clocked and beaconed everywhere. Oh, and there&#x27;s only 5 inserters per sulfuric acid factory because cars.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;imgs&#x2F;factorio&#x2F;cars-for-sulfuric.webp&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;optimization&quot;&gt;Optimization&lt;&#x2F;h2&gt;
&lt;p&gt;We tried several major optimization strategies:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;technicalfactorio&#x2F;comments&#x2F;svbupq&#x2F;how_to_make_a_fully_compressed_belt_via_inserter&#x2F;&quot;&gt;inserter clocking&lt;&#x2F;a&gt; on all ore smelters&#x2F;batteries&#x2F;red circuits&#x2F;steel&lt;&#x2F;li&gt;
&lt;li&gt;enabling &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;technicalfactorio&#x2F;comments&#x2F;mvn88v&#x2F;over_20_actually_30_performance_gain_by_using&#x2F;&quot;&gt;large pages on linux&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;inlining green chip production (i.e. less belts in favour of direct insertion)&lt;&#x2F;li&gt;
&lt;li&gt;max beaconing almost everywhere&lt;&#x2F;li&gt;
&lt;li&gt;reducing robo networks to only the essentials&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;and in general downscaling and optimizing flow:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;minimizing all builds (as close to zero inactive machines as possible)&lt;&#x2F;li&gt;
&lt;li&gt;reducing number of active inserters, belts, hops per item&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Beyond the linked posts, the following &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;technicalfactorio&quot;&gt;technicalfactorio subreddit&lt;&#x2F;a&gt; posts, and &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;mulark.github.io&#x2F;test-index.html&quot;&gt;factorio benchmarks&lt;&#x2F;a&gt; were also helpful:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;technicalfactorio&#x2F;comments&#x2F;gels6c&#x2F;20k_spm_hybrid_megabase&#x2F;&quot;&gt;bot&#x2F;belt advice&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;factorio&#x2F;comments&#x2F;qcvfaq&#x2F;best_belt_ups_practices&#x2F;hhj3whl&#x2F;&quot;&gt;splitters + belt advice&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;mulark.github.io&#x2F;tests&#x2F;test-000101&#x2F;test-000101.html&quot;&gt;cars as chests benchmark&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=u-jswneg4YY&quot;&gt;inserter minimal train unloaders&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;mulark.github.io&#x2F;tests&#x2F;test-000030&#x2F;test-000030.html&quot;&gt;Trains waiting on &lt;code&gt;TIME PASSED &amp;amp;&amp;amp; Full&#x2F;Empty&lt;&#x2F;code&gt; condition is more efficient than just &lt;code&gt;Full&#x2F;Empty&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;mulark.github.io&#x2F;tests&#x2F;test-000201&#x2F;test-000201.html&quot;&gt;Minimizing number of bots so their usage is close to 100% is the best&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;We did not go to the full-out &lt;strong&gt;direct insertion&lt;&#x2F;strong&gt; lengths that the most efficient bases go to where everything is inlined (because imo it ends up looking chaotic and huge, with lots of factories ending up idle a lot of the time), but it was truly fascinating to see the amount of rabbit holes you can go down here to optimize.&lt;&#x2F;p&gt;
&lt;p&gt;From the limited amount of testing I personally did. &lt;strong&gt;These helped&lt;&#x2F;strong&gt;:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;solid improvement by eliminating pollution (pre-measurements)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;~10%&lt;&#x2F;code&gt; improvement by using large pages&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;~10%&lt;&#x2F;code&gt; improvement by clocking all smelters&#x2F;batteries&#x2F;solid fuel&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;~10%&lt;&#x2F;code&gt; improvement by using clocked direct insertion steel and killing robo networks&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;~1%&lt;&#x2F;code&gt; improvement by disabling the 300+ cars&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;~0.5%&lt;&#x2F;code&gt; improvement by removing the standalone fishing base&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;~1%&lt;&#x2F;code&gt; improvement by cutting 6x7x4 inserters at science unloading stations&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;while these had &lt;strong&gt;no noticable improvements&lt;&#x2F;strong&gt;:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;refactoring circuit clocks to run of the same central clock&lt;&#x2F;li&gt;
&lt;li&gt;eliminating biters (mine are generally passive except for artillery revenge attacks)&lt;&#x2F;li&gt;
&lt;li&gt;eliminating grass&#x2F;trees&#x2F;fish&#x2F;cliffs&lt;&#x2F;li&gt;
&lt;li&gt;reducing visual quality of the game&lt;&#x2F;li&gt;
&lt;li&gt;prepending time passed conditions to trains&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;initial-measurements&quot;&gt;Initial Measurements&lt;&#x2F;h2&gt;
&lt;p&gt;When doing this set of measurements the base looked like this:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;imgs&#x2F;factorio&#x2F;base.webp&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;After all the optimizations above; we &lt;a href=&quot;&#x2F;imgs&#x2F;factorio&#x2F;time-nuclear.webp&quot;&gt;measured&lt;&#x2F;a&gt; the following &lt;strong&gt;rough percentages of time&lt;&#x2F;strong&gt; of where the time was being spent in the game&#x27;s &lt;strong&gt;update loop&lt;&#x2F;strong&gt;:&lt;&#x2F;p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Source&lt;&#x2F;th&gt;&lt;th&gt;Percent&lt;&#x2F;th&gt;&lt;th&gt;ms&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;Entity update&lt;&#x2F;td&gt;&lt;td&gt;67%&lt;&#x2F;td&gt;&lt;td&gt;4.45ms&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Elecric network&lt;&#x2F;td&gt;&lt;td&gt;13%&lt;&#x2F;td&gt;&lt;td&gt;0.85ms&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Heat manager&lt;&#x2F;td&gt;&lt;td&gt;9%&lt;&#x2F;td&gt;&lt;td&gt;0.62ms&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Transport lines&lt;&#x2F;td&gt;&lt;td&gt;8%&lt;&#x2F;td&gt;&lt;td&gt;0.57ms&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Circuit network&lt;&#x2F;td&gt;&lt;td&gt;2%&lt;&#x2F;td&gt;&lt;td&gt;0.18ms&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Trains&lt;&#x2F;td&gt;&lt;td&gt;1%&lt;&#x2F;td&gt;&lt;td&gt;0.06ms&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;p&gt;where the entities were &lt;a href=&quot;&#x2F;imgs&#x2F;factorio&#x2F;time-nuclear-entities.webp&quot;&gt;broken down further&lt;&#x2F;a&gt; using &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;wiki.factorio.com&#x2F;Debug_mode&quot;&gt;&lt;code&gt;show-entity-time-usage&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;:&lt;&#x2F;p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Entity Class&lt;&#x2F;th&gt;&lt;th&gt;Percent&lt;&#x2F;th&gt;&lt;th&gt;ms&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;wiki.factorio.com&#x2F;Prototype&#x2F;Inserter&quot;&gt;Inserter&lt;&#x2F;a&gt;&lt;&#x2F;td&gt;&lt;td&gt;46%&lt;&#x2F;td&gt;&lt;td&gt;1.80ms&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;wiki.factorio.com&#x2F;Prototype&#x2F;Generator&quot;&gt;Generator&lt;&#x2F;a&gt;&lt;&#x2F;td&gt;&lt;td&gt;15%&lt;&#x2F;td&gt;&lt;td&gt;0.60ms&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;wiki.factorio.com&#x2F;Prototype&#x2F;Boiler&quot;&gt;Boiler&lt;&#x2F;a&gt;&lt;&#x2F;td&gt;&lt;td&gt;11%&lt;&#x2F;td&gt;&lt;td&gt;0.44ms&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;wiki.factorio.com&#x2F;Prototype&#x2F;Furnace&quot;&gt;Furnace&lt;&#x2F;a&gt;&lt;&#x2F;td&gt;&lt;td&gt;8%&lt;&#x2F;td&gt;&lt;td&gt;0.31ms&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;wiki.factorio.com&#x2F;Prototype&#x2F;AssemblingMachine&quot;&gt;Assembler&lt;&#x2F;a&gt;&lt;&#x2F;td&gt;&lt;td&gt;7%&lt;&#x2F;td&gt;&lt;td&gt;0.29ms&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;wiki.factorio.com&#x2F;Prototype&#x2F;MiningDrill&quot;&gt;Miners&lt;&#x2F;a&gt;&lt;&#x2F;td&gt;&lt;td&gt;5%&lt;&#x2F;td&gt;&lt;td&gt;0.19ms&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;wiki.factorio.com&#x2F;Prototype&#x2F;Lab&quot;&gt;Labs&lt;&#x2F;a&gt;&lt;&#x2F;td&gt;&lt;td&gt;1%&lt;&#x2F;td&gt;&lt;td&gt;0.04ms&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;p&gt;which illustrates why inserter-clocking can be so effective - as it&#x27;s always such a big part of a factory - but it also highlights the next offender; &lt;strong&gt;nuclear&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Heat manager (heat exchangers) uses 9% of the update time&lt;&#x2F;li&gt;
&lt;li&gt;Generator + Boiler uses 26% of entity time (0.67=17% of the update time)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This is actually a over a &lt;strong&gt;quarter of the time&lt;&#x2F;strong&gt;. Not what I had expected from a &lt;strong&gt;not-that-badly-designed&lt;&#x2F;strong&gt; nuclear setup (no steam storage, minimal exchanger network, optimal reactor efficiency bonuses). It&#x27;s a lot more than &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;factorio&#x2F;comments&#x2F;jtzdli&#x2F;some_notes_on_ups&#x2F;&quot;&gt;people publically estimate&lt;&#x2F;a&gt;, but to give them some credit, the percentage seen on my end would be amplified by already having optimized the hell out of all the inserters.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;We ran the base on two big nuclear reactors sites producing 33GW in total.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;imgs&#x2F;factorio&#x2F;nuclear.webp&quot; alt=&quot;&quot; &#x2F;&gt;
This reactor block gave us ~60% of the power output with &lt;strong&gt;120&lt;&#x2F;strong&gt; of the 204 total &lt;strong&gt;reactors&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Opening up the save in creative mode and ripping out nuclear in favour of an infinite energy interface bumped UPS from 150 to over 200.. how would that translate if we used nearly a million solar panels instead? how much space would that take? how much time would that take...&lt;&#x2F;p&gt;
&lt;h3 id=&quot;solar-project&quot;&gt;Solar Project&lt;&#x2F;h3&gt;
&lt;p&gt;Well, I had already sunk this much time into it, so thought I&#x27;d spend a weekend on it. How fun could it be?&lt;&#x2F;p&gt;
&lt;p&gt;Well, the answer is &lt;strong&gt;somewhat&lt;&#x2F;strong&gt;.. Provided you shut off the rest of the factory (so you can run 4-8x speed), and then run boost around with a bunch of rc&#x27;d spidertrons:&lt;&#x2F;p&gt;
&lt;div class=&quot;yv&quot;&gt;
    &lt;iframe src=&quot;https:&#x2F;&#x2F;www.youtube-nocookie.com&#x2F;embed&#x2F;zhiEGn-Yx-g&quot; title=&quot;Youtube&quot; class=&quot;yvi&quot; webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;&#x2F;iframe&gt;
&lt;&#x2F;div&gt;
&lt;p&gt;with some strategic landfill factories taking advantage of huge mining prod:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;imgs&#x2F;factorio&#x2F;landfills.webp&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Still, definitely a repetivite background task (that took two days..)&lt;&#x2F;p&gt;
&lt;p&gt;..but how did it measure up?&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;On gamespeed &lt;code&gt;5&lt;&#x2F;code&gt; we saw a &lt;strong&gt;near 40% improvement&lt;&#x2F;strong&gt; to UPS from &lt;code&gt;150&lt;&#x2F;code&gt; to &lt;code&gt;208&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Breaking the new measurements (&lt;a href=&quot;&#x2F;imgs&#x2F;factorio&#x2F;time-solar.webp&quot;&gt;1&lt;&#x2F;a&gt;, &lt;a href=&quot;&#x2F;imgs&#x2F;factorio&#x2F;time-solar-entities.webp&quot;&gt;2&lt;&#x2F;a&gt;) down, we see:&lt;&#x2F;p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Source&lt;&#x2F;th&gt;&lt;th&gt;Percent&lt;&#x2F;th&gt;&lt;th&gt;ms&lt;&#x2F;th&gt;&lt;th&gt;Change&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Entity update&lt;&#x2F;strong&gt;&lt;&#x2F;td&gt;&lt;td&gt;71%&lt;&#x2F;td&gt;&lt;td&gt;3.12ms&lt;&#x2F;td&gt;&lt;td&gt;&lt;strong&gt;-1.33ms&lt;&#x2F;strong&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Transport lines&lt;&#x2F;td&gt;&lt;td&gt;13%&lt;&#x2F;td&gt;&lt;td&gt;0.57ms&lt;&#x2F;td&gt;&lt;td&gt;0&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Elecric network&lt;&#x2F;strong&gt;&lt;&#x2F;td&gt;&lt;td&gt;11%&lt;&#x2F;td&gt;&lt;td&gt;0.48ms&lt;&#x2F;td&gt;&lt;td&gt;&lt;strong&gt;-0.38ms&lt;&#x2F;strong&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Circuit network&lt;&#x2F;td&gt;&lt;td&gt;4%&lt;&#x2F;td&gt;&lt;td&gt;0.17ms&lt;&#x2F;td&gt;&lt;td&gt;0&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Trains&lt;&#x2F;td&gt;&lt;td&gt;1%&lt;&#x2F;td&gt;&lt;td&gt;0.06ms&lt;&#x2F;td&gt;&lt;td&gt;0&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Heat manager&lt;&#x2F;strong&gt;&lt;&#x2F;td&gt;&lt;td&gt;0%&lt;&#x2F;td&gt;&lt;td&gt;0.00ms&lt;&#x2F;td&gt;&lt;td&gt;&lt;strong&gt;-0.62ms&lt;&#x2F;strong&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;p&gt;and looking into the entities:&lt;&#x2F;p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Entity Class&lt;&#x2F;th&gt;&lt;th&gt;Percent&lt;&#x2F;th&gt;&lt;th&gt;ms&lt;&#x2F;th&gt;&lt;th&gt;Change&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;&lt;strong&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;wiki.factorio.com&#x2F;Prototype&#x2F;Inserter&quot;&gt;Inserter&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt;&lt;&#x2F;td&gt;&lt;td&gt;72%&lt;&#x2F;td&gt;&lt;td&gt;2.29ms&lt;&#x2F;td&gt;&lt;td&gt;&lt;strong&gt;-0.49ms&lt;&#x2F;strong&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;wiki.factorio.com&#x2F;Prototype&#x2F;Furnace&quot;&gt;Furnace&lt;&#x2F;a&gt;&lt;&#x2F;td&gt;&lt;td&gt;11%&lt;&#x2F;td&gt;&lt;td&gt;0.35ms&lt;&#x2F;td&gt;&lt;td&gt;~0&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;wiki.factorio.com&#x2F;Prototype&#x2F;AssemblingMachine&quot;&gt;Assembler&lt;&#x2F;a&gt;&lt;&#x2F;td&gt;&lt;td&gt;9%&lt;&#x2F;td&gt;&lt;td&gt;0.29ms&lt;&#x2F;td&gt;&lt;td&gt;~0&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;wiki.factorio.com&#x2F;Prototype&#x2F;MiningDrill&quot;&gt;Miners&lt;&#x2F;a&gt;&lt;&#x2F;td&gt;&lt;td&gt;6%&lt;&#x2F;td&gt;&lt;td&gt;0.19ms&lt;&#x2F;td&gt;&lt;td&gt;0&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;wiki.factorio.com&#x2F;Prototype&#x2F;Lab&quot;&gt;Labs&lt;&#x2F;a&gt;&lt;&#x2F;td&gt;&lt;td&gt;1%&lt;&#x2F;td&gt;&lt;td&gt;0.04ms&lt;&#x2F;td&gt;&lt;td&gt;0&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;strong&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;wiki.factorio.com&#x2F;Prototype&#x2F;Boiler&quot;&gt;Boiler&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt;&lt;&#x2F;td&gt;&lt;td&gt;0%&lt;&#x2F;td&gt;&lt;td&gt;0.01ms&lt;&#x2F;td&gt;&lt;td&gt;&lt;strong&gt;-0.43ms&lt;&#x2F;strong&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;strong&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;wiki.factorio.com&#x2F;Prototype&#x2F;Generator&quot;&gt;Generator&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt;&lt;&#x2F;td&gt;&lt;td&gt;0%&lt;&#x2F;td&gt;&lt;td&gt;0.00ms&lt;&#x2F;td&gt;&lt;td&gt;&lt;strong&gt;-0.60ms&lt;&#x2F;strong&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;p&gt;(There&#x27;s likely only precision to one decimal place here as we saw saw 0.04ms changes in furnace and assemblers despite having no actual changes in game. The numbers do have some variance on their own in the big base and we are just operating on screenshots.)&lt;&#x2F;p&gt;
&lt;p&gt;The update loop itself saw a nearly equivalent improvement with 6.24ms to 4.53ms.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;end-performance&quot;&gt;End Performance&lt;&#x2F;h3&gt;
&lt;p&gt;The UPS went from around &lt;code&gt;110&lt;&#x2F;code&gt; to &lt;code&gt;208&lt;&#x2F;code&gt; on average from redesigns, clocking and the mentioned tweaks, where a good chunk of this came from the base design itself. The &lt;strong&gt;most braindead change&lt;&#x2F;strong&gt; with the biggest improvement was switching to solar (with nearly 40% improvement at the time - your mileage will vary). The changes with the &lt;strong&gt;most performance gains by time investment&lt;&#x2F;strong&gt; was turning on large pages (5min job), and turning off + clearing pollution (1min job).&lt;&#x2F;p&gt;
&lt;p&gt;In the end, the island now looks like this:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;imgs&#x2F;factorio&#x2F;end-base.webp&quot; alt=&quot;&quot; &#x2F;&gt;
i.e. largely the same, but without nuclear, and solar everywhere.&lt;&#x2F;p&gt;
&lt;p&gt;how much solar? oh i&#x27;m sorry, that screenshot was cropped..&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;imgs&#x2F;factorio&#x2F;end-solar.webp&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;yeah. that&#x27;s a lot more than expected. When designing solar, ensure you &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;forums.factorio.com&#x2F;viewtopic.php?t=5594&quot;&gt;overscale by 42%&lt;&#x2F;a&gt; to cover the night.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;blueprints&quot;&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;gist.github.com&#x2F;clux&#x2F;551835be6f2bf1f558cd661e03d2b64e&quot;&gt;Blueprints&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;Exported these pieces:
&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;gist.github.com&#x2F;clux&#x2F;551835be6f2bf1f558cd661e03d2b64e&quot;&gt;&lt;img src=&quot;&#x2F;imgs&#x2F;factorio&#x2F;blueprints.webp&quot; alt=&quot;factorio blueprints&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;commands&quot;&gt;Commands&lt;&#x2F;h3&gt;
&lt;details&gt;&lt;summary style=&quot;cursor:pointer&quot;&gt;&lt;b&gt;Expand Commands&lt;&#x2F;b&gt;&lt;&#x2F;summary&gt;
&lt;p&gt;
&lt;p&gt;One time commands:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;wiki.factorio.com&#x2F;Console#Remove_all_pollution&quot;&gt;remove pollution&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Set &lt;code&gt;&#x2F;c game.speed=5&lt;&#x2F;code&gt; to try to run as fast as possible&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Spawn resources:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;lua&quot; class=&quot;language-lua z-code&quot;&gt;&lt;code class=&quot;language-lua&quot; data-lang=&quot;lua&quot;&gt;&lt;span class=&quot;z-source z-lua&quot;&gt;&lt;span class=&quot;z-keyword z-operator z-arithmetic z-lua&quot;&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-lua&quot;&gt;c&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-lua&quot;&gt;game&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-lua&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-property z-lua&quot;&gt;player&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-lua&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-property z-lua&quot;&gt;surface&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-lua&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-property z-lua&quot;&gt;&lt;span class=&quot;z-variable z-function z-lua&quot;&gt;create_entity&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-lua&quot;&gt;&lt;span class=&quot;z-meta z-group z-lua&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-lua&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-lua&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-lua&quot;&gt;{&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-key z-lua&quot;&gt;&lt;span class=&quot;z-string z-unquoted z-key z-lua&quot;&gt;name&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-lua&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-lua&quot;&gt;=&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-lua&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-lua&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-lua&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;crude-oil&lt;span class=&quot;z-punctuation z-definition z-string z-end z-lua&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-lua&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-field z-lua&quot;&gt;,&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-key z-lua&quot;&gt;&lt;span class=&quot;z-string z-unquoted z-key z-lua&quot;&gt;amount&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-lua&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-lua&quot;&gt;=&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-lua&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-lua&quot;&gt;10000000&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-lua&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-field z-lua&quot;&gt;,&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-key z-lua&quot;&gt;&lt;span class=&quot;z-string z-unquoted z-key z-lua&quot;&gt;position&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-lua&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-lua&quot;&gt;=&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-lua&quot;&gt;&lt;span class=&quot;z-meta z-mapping z-lua&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-lua&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-lua&quot;&gt;game&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-lua&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-property z-lua&quot;&gt;player&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-lua&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-property z-lua&quot;&gt;position&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-lua&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-property z-lua&quot;&gt;x&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-field z-lua&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-lua&quot;&gt;game&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-lua&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-property z-lua&quot;&gt;player&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-lua&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-property z-lua&quot;&gt;position&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-lua&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-property z-lua&quot;&gt;y&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-lua&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-lua&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-lua&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-lua&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Delete resources (of any kind) in a 10x10 square around you:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;lua&quot; class=&quot;language-lua z-code&quot;&gt;&lt;code class=&quot;language-lua&quot; data-lang=&quot;lua&quot;&gt;&lt;span class=&quot;z-source z-lua&quot;&gt;&lt;span class=&quot;z-keyword z-operator z-arithmetic z-lua&quot;&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-lua&quot;&gt;c&lt;&#x2F;span&gt; &lt;span class=&quot;z-storage z-modifier z-lua&quot;&gt;local&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-lua&quot;&gt;surface&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-lua&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-lua&quot;&gt;game&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-lua&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-property z-lua&quot;&gt;player&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-lua&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-property z-lua&quot;&gt;surface&lt;&#x2F;span&gt; &lt;span class=&quot;z-storage z-modifier z-lua&quot;&gt;local&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-lua&quot;&gt;size&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-lua&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-lua&quot;&gt;10&lt;&#x2F;span&gt; &lt;span class=&quot;z-storage z-modifier z-lua&quot;&gt;local&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-lua&quot;&gt;pos&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-lua&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-lua&quot;&gt;game&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-lua&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-property z-lua&quot;&gt;player&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-lua&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-property z-lua&quot;&gt;position&lt;&#x2F;span&gt;  &lt;span class=&quot;z-keyword z-control z-loop z-lua&quot;&gt;for&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-lua&quot;&gt;_&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-comma z-lua&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-lua&quot;&gt;e&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-control z-loop z-lua&quot;&gt;in&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-function z-builtin z-lua&quot;&gt;pairs&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-lua&quot;&gt;&lt;span class=&quot;z-meta z-group z-lua&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-lua&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-lua&quot;&gt;surface&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-lua&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-property z-lua&quot;&gt;&lt;span class=&quot;z-variable z-function z-lua&quot;&gt;find_entities_filtered&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-lua&quot;&gt;&lt;span class=&quot;z-meta z-mapping z-lua&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-lua&quot;&gt;{&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-key z-lua&quot;&gt;&lt;span class=&quot;z-string z-unquoted z-key z-lua&quot;&gt;area&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-lua&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-lua&quot;&gt;=&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-lua&quot;&gt;&lt;span class=&quot;z-meta z-mapping z-lua&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-lua&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-lua&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-lua&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-lua&quot;&gt;pos&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-lua&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-property z-lua&quot;&gt;x&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-arithmetic z-lua&quot;&gt;-&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-lua&quot;&gt;size&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-field z-lua&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-lua&quot;&gt;pos&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-lua&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-property z-lua&quot;&gt;y&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-arithmetic z-lua&quot;&gt;-&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-lua&quot;&gt;size&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-lua&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-field z-lua&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-lua&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-lua&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-lua&quot;&gt;pos&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-lua&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-property z-lua&quot;&gt;x&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-arithmetic z-lua&quot;&gt;+&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-lua&quot;&gt;size&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-field z-lua&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-lua&quot;&gt;pos&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-lua&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-property z-lua&quot;&gt;y&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-arithmetic z-lua&quot;&gt;+&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-lua&quot;&gt;size&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-lua&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-lua&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-lua&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-field z-lua&quot;&gt;,&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-key z-lua&quot;&gt;&lt;span class=&quot;z-string z-unquoted z-key z-lua&quot;&gt;type&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-lua&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-lua&quot;&gt;=&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-lua&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-lua&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-lua&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;resource&lt;span class=&quot;z-punctuation z-definition z-string z-end z-lua&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-lua&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-lua&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-lua&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;      &lt;span class=&quot;z-meta z-block z-lua&quot;&gt;&lt;span class=&quot;z-keyword z-control z-lua&quot;&gt;do&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-lua&quot;&gt;e&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-lua&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-property z-lua&quot;&gt;&lt;span class=&quot;z-variable z-function z-lua&quot;&gt;destroy&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-lua&quot;&gt;&lt;span class=&quot;z-meta z-group z-lua&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-lua&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-lua&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  &lt;span class=&quot;z-keyword z-control z-end z-lua&quot;&gt;end&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Spawn a &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;factorio&#x2F;comments&#x2F;4akydl&#x2F;how_to_generate_water_solved&#x2F;d55udah&#x2F;&quot;&gt;2x4 water pond&lt;&#x2F;a&gt; below you:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;lua&quot; class=&quot;language-lua z-code&quot;&gt;&lt;code class=&quot;language-lua&quot; data-lang=&quot;lua&quot;&gt;&lt;span class=&quot;z-source z-lua&quot;&gt;&lt;span class=&quot;z-keyword z-operator z-arithmetic z-lua&quot;&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-lua&quot;&gt;c&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-lua&quot;&gt;&lt;span class=&quot;z-storage z-modifier z-lua&quot;&gt;local&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-lua&quot;&gt;waterTiles&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-lua&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-mapping z-lua&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-lua&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-lua&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-lua&quot;&gt;&lt;span class=&quot;z-keyword z-control z-loop z-lua&quot;&gt;for&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-lua&quot;&gt;y&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-lua&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-lua&quot;&gt;2&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-comma z-lua&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-lua&quot;&gt;4&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-block z-lua&quot;&gt;&lt;span class=&quot;z-keyword z-control z-lua&quot;&gt;do&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-lua&quot;&gt;&lt;span class=&quot;z-meta z-block z-lua&quot;&gt; &lt;span class=&quot;z-keyword z-control z-loop z-lua&quot;&gt;for&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-lua&quot;&gt;x&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-lua&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-arithmetic z-lua&quot;&gt;-&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-lua&quot;&gt;2&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-comma z-lua&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-lua&quot;&gt;2&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-block z-lua&quot;&gt;&lt;span class=&quot;z-keyword z-control z-lua&quot;&gt;do&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-lua&quot;&gt;&lt;span class=&quot;z-meta z-block z-lua&quot;&gt;&lt;span class=&quot;z-meta z-block z-lua&quot;&gt;  &lt;span class=&quot;z-support z-constant z-builtin z-lua&quot;&gt;table&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-lua&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-property z-lua&quot;&gt;&lt;span class=&quot;z-support z-function z-builtin z-lua&quot;&gt;insert&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-lua&quot;&gt;&lt;span class=&quot;z-meta z-group z-lua&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-lua&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-lua&quot;&gt;waterTiles&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-comma z-lua&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-mapping z-lua&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-lua&quot;&gt;{&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-key z-lua&quot;&gt;&lt;span class=&quot;z-string z-unquoted z-key z-lua&quot;&gt;name&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-lua&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-lua&quot;&gt;=&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-lua&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-lua&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-lua&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;water&lt;span class=&quot;z-punctuation z-definition z-string z-end z-lua&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-lua&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-field z-lua&quot;&gt;,&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-key z-lua&quot;&gt;&lt;span class=&quot;z-string z-unquoted z-key z-lua&quot;&gt;position&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-lua&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-lua&quot;&gt;=&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-lua&quot;&gt;&lt;span class=&quot;z-meta z-mapping z-lua&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-lua&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-lua&quot;&gt;game&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-lua&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-property z-lua&quot;&gt;players&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-brackets z-lua&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-brackets z-begin z-lua&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-lua&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-brackets z-end z-lua&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-lua&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-property z-lua&quot;&gt;position&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-lua&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-property z-lua&quot;&gt;x&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-arithmetic z-lua&quot;&gt;+&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-lua&quot;&gt;x&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-field z-lua&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-lua&quot;&gt;game&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-lua&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-property z-lua&quot;&gt;players&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-brackets z-lua&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-brackets z-begin z-lua&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-lua&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-brackets z-end z-lua&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-lua&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-property z-lua&quot;&gt;position&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-lua&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-property z-lua&quot;&gt;y&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-arithmetic z-lua&quot;&gt;+&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-lua&quot;&gt;y&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-lua&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-lua&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-lua&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-lua&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-lua&quot;&gt;&lt;span class=&quot;z-meta z-block z-lua&quot;&gt;&lt;span class=&quot;z-meta z-block z-lua&quot;&gt; &lt;span class=&quot;z-keyword z-control z-end z-lua&quot;&gt;end&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-lua&quot;&gt;&lt;span class=&quot;z-meta z-block z-lua&quot;&gt; &lt;span class=&quot;z-variable z-other z-lua&quot;&gt;game&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-lua&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-property z-lua&quot;&gt;players&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-brackets z-lua&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-brackets z-begin z-lua&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-lua&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-brackets z-end z-lua&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-lua&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-property z-lua&quot;&gt;surface&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-lua&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-property z-lua&quot;&gt;&lt;span class=&quot;z-variable z-function z-lua&quot;&gt;set_tiles&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-lua&quot;&gt;&lt;span class=&quot;z-meta z-group z-lua&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-lua&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-lua&quot;&gt;waterTiles&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-lua&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-lua&quot;&gt;&lt;span class=&quot;z-meta z-block z-lua&quot;&gt;&lt;span class=&quot;z-keyword z-control z-end z-lua&quot;&gt;end&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Disable cars (see the &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;mulark.github.io&#x2F;tests&#x2F;test-000101&#x2F;test-000101.html&quot;&gt;cars as chests benchmark&lt;&#x2F;a&gt;):&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;lua&quot; class=&quot;language-lua z-code&quot;&gt;&lt;code class=&quot;language-lua&quot; data-lang=&quot;lua&quot;&gt;&lt;span class=&quot;z-source z-lua&quot;&gt; &lt;span class=&quot;z-keyword z-operator z-arithmetic z-lua&quot;&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-lua&quot;&gt;c&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-control z-loop z-lua&quot;&gt;for&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-lua&quot;&gt;_&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-comma z-lua&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-lua&quot;&gt;ent&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-control z-loop z-lua&quot;&gt;in&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-function z-builtin z-lua&quot;&gt;pairs&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-lua&quot;&gt;&lt;span class=&quot;z-meta z-group z-lua&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-lua&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-lua&quot;&gt;game&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-lua&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-property z-lua&quot;&gt;player&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-lua&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-property z-lua&quot;&gt;surface&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-lua&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-property z-lua&quot;&gt;&lt;span class=&quot;z-variable z-function z-lua&quot;&gt;find_entities_filtered&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-lua&quot;&gt;&lt;span class=&quot;z-meta z-mapping z-lua&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-lua&quot;&gt;{&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-key z-lua&quot;&gt;&lt;span class=&quot;z-string z-unquoted z-key z-lua&quot;&gt;name&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-lua&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-lua&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-lua&quot;&gt;=&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-lua&quot;&gt; &lt;span class=&quot;z-string z-quoted z-double z-lua&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-lua&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;car&lt;span class=&quot;z-punctuation z-definition z-string z-end z-lua&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-lua&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-lua&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-lua&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-block z-lua&quot;&gt;&lt;span class=&quot;z-keyword z-control z-lua&quot;&gt;do&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-lua&quot;&gt;ent&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-lua&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-property z-lua&quot;&gt;active&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-lua&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-language z-boolean z-true z-lua&quot;&gt;false&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-control z-end z-lua&quot;&gt;end&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h4 id=&quot;large-pages&quot;&gt;Large pages&lt;&#x2F;h4&gt;
&lt;p&gt;Install &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;archlinux.org&#x2F;packages&#x2F;community&#x2F;x86_64&#x2F;mimalloc&#x2F;&quot;&gt;mimalloc&lt;&#x2F;a&gt; and set start command on factorio via steam:&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;LD_PRELOAD=&#x2F;usr&#x2F;lib&#x2F;libmimalloc.so MIMALLOC_PAGE_RESET=0 MIMALLOC_LARGE_OS_PAGES=1 %command%
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Settings are documented via &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;sid.ethz.ch&#x2F;debian&#x2F;mimalloc&#x2F;mimalloc-2.0.1&#x2F;docs&#x2F;environment.html&quot;&gt;mi-alloc&lt;&#x2F;a&gt;. Large pages makes the most difference, but huge pages also works well.&lt;&#x2F;p&gt;
&lt;&#x2F;p&gt;
&lt;&#x2F;details&gt;
&lt;h2 id=&quot;results&quot;&gt;Results&lt;&#x2F;h2&gt;
&lt;p&gt;In the end, all the optimizations meant we could run the 5400 SPM base at 210 UPS on my machine (i.e. the game managed to run the game at 3.5x real speed on average). With 20% productivity modules in labs, and that game speed scale, we effectively research ~23k science per minute, or 1.4 million science per hour.&lt;&#x2F;p&gt;
&lt;p&gt;If you want to view it interactively or play it, you can download or view &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;factoriobox.1au.us&#x2F;map&#x2F;info&#x2F;64a9a7e7a7c45dc3fc2c0ade02dee4c1d3eede36123460c3761a39d901587306&quot;&gt;full base&#x2F;save on factoriobox&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Baldur&#x27;s Gate: Multinomial Edition</title>
        <published>2022-04-12T00:00:00+00:00</published>
        <updated>2022-04-12T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://clux.dev/post/2022-04-12-baldurs-roll/"/>
        <id>https://clux.dev/post/2022-04-12-baldurs-roll/</id>
        
        <content type="html" xml:base="https://clux.dev/post/2022-04-12-baldurs-roll/">&lt;p&gt;In a &lt;del&gt;brief&lt;&#x2F;del&gt; bout of escapism from the world and responsibilities, I booted up &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;257350&#x2F;Baldurs_Gate_II_Enhanced_Edition&#x2F;&quot;&gt;Baldur&#x27;s Gate 2&lt;&#x2F;a&gt; with my brother. It&#x27;s an amazing game, once you have figured out how to &lt;strong&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;old.reddit.com&#x2F;r&#x2F;baldursgate&#x2F;search?q=roll&amp;amp;restrict_sr=on&quot;&gt;roll&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt; your character.&lt;&#x2F;p&gt;
&lt;p&gt;For today&#x27;s installment; rather than telling you about the game, let&#x27;s talk about the &lt;strong&gt;maths&lt;&#x2F;strong&gt; behind rolling a &lt;code&gt;2e&lt;&#x2F;code&gt; character for &lt;code&gt;BG2&lt;&#x2F;code&gt;, and then running simulations with weird &lt;code&gt;X&lt;&#x2F;code&gt;-based linux tools.&lt;&#x2F;p&gt;
&lt;script src=&quot;https:&#x2F;&#x2F;cdn.plot.ly&#x2F;plotly-2.26.0.min.js&quot;&gt;&lt;&#x2F;script&gt;
&lt;h2 id=&quot;rolling-a-character&quot;&gt;Rolling a character&lt;&#x2F;h2&gt;
&lt;p&gt;The &lt;code&gt;BG2&lt;&#x2F;code&gt; character generation mechanics is almost entirely based on the rules from &lt;code&gt;AD&amp;amp;D 2e&lt;&#x2F;code&gt;. You get &lt;code&gt;6&lt;&#x2F;code&gt; ability scores, and each ability score is rolled as the sum of &lt;code&gt;3d6&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Probablistically; this &lt;strong&gt;should&lt;&#x2F;strong&gt; give you a character with an expected &lt;code&gt;63&lt;&#x2F;code&gt; total ability points (as a result of rolling &lt;code&gt;18d6&lt;&#x2F;code&gt;).&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Mechanically, you are in this screen:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;imgs&#x2F;bg&#x2F;rolling.png&quot; alt=&quot;bg2 stat rolling screen&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;...and they have given you a &lt;code&gt;reroll&lt;&#x2F;code&gt; button.&lt;&#x2F;p&gt;
&lt;p&gt;It&#x27;s a strange design idea to port the rolling mechanics from &lt;code&gt;d&amp;amp;d&lt;&#x2F;code&gt; into this game. In a normal campaign you&#x27;d usually get one chance rolling, but here, there&#x27;s no downside to keeping going; encouraging excessive time investment (the irony in writing a blog post on this is not lost on me). &lt;small&gt;The character creation in BG2 would probably have been less perfection focused if they&#x27;d gone for something like &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;chicken-dinner.com&#x2F;5e&#x2F;5e-point-buy.html&quot;&gt;5e point buy&lt;&#x2F;a&gt;.&lt;&#x2F;small&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Anyway, &lt;strong&gt;suppose&lt;&#x2F;strong&gt; you want learn how to automate this, or you just want to think about combinatorics, multinomials, and weird &lt;code&gt;X&lt;&#x2F;code&gt; tools for a while, then this is the right place. You will also figure out &lt;strong&gt;how long it&#x27;s expected to take&lt;&#x2F;strong&gt; to roll high.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;HINT: ..it&#x27;s less time than it took to write this blogpost&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h2 id=&quot;disclaimer&quot;&gt;Disclaimer&lt;&#x2F;h2&gt;
&lt;p&gt;Using the script used herein to achieve higher rolls than you have patience for, is on some level; cheating. That said, it&#x27;s a fairly pointless effort:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;this is an &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Baldur%27s_Gate_II:_Shadows_of_Amn&quot;&gt;old&lt;&#x2F;a&gt;, unranked rpg with difficulty settings&lt;&#x2F;li&gt;
&lt;li&gt;having &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;tvtropes.org&#x2F;pmwiki&#x2F;pmwiki.php&#x2F;Main&#x2F;DumpStat&quot;&gt;dump stats&lt;&#x2F;a&gt; is not heavily penalized in the game&lt;&#x2F;li&gt;
&lt;li&gt;early items nullify effects of common dump stats (&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;baldursgate.fandom.com&#x2F;wiki&#x2F;Girdle_of_Hill_Giant_Strength&quot;&gt;19 STR girdle&lt;&#x2F;a&gt; or &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;baldursgate.fandom.com&#x2F;wiki&#x2F;Ring_of_Human_Influence&quot;&gt;18 CHA ring&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;you can get &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=5dDmh98lmkA&quot;&gt;max stats in 20 minutes&lt;&#x2F;a&gt; with by abusing inventory+stat &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;baldursgate.fandom.com&#x2F;wiki&#x2F;Exploits#Potion_Swap_Glitch&quot;&gt;underflow&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;some &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;baldursgate.fandom.com&#x2F;wiki&#x2F;Edwin_Odesseiron&quot;&gt;NPCS&lt;&#x2F;a&gt; come with &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;baldursgate.fandom.com&#x2F;wiki&#x2F;Edwin%27s_Amulet&quot;&gt;gear&lt;&#x2F;a&gt; that blows &lt;strong&gt;marginally better stats&lt;&#x2F;strong&gt; out of the water&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;So assuming you have a reason to be here despite this; let&#x27;s dive in to some maths.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;multinomials-and-probabilities&quot;&gt;Multinomials and probabilities&lt;&#x2F;h2&gt;
&lt;blockquote&gt;
&lt;p&gt;How likely are you to get a 90&#x2F;95&#x2F;100?&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;The sum of rolling 18 six-sided dice follows an easier variant of the &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Multinomial_distribution&quot;&gt;multinomial distribution&lt;&#x2F;a&gt; where we have equal event probabilities. We are going to follow the &lt;em&gt;simpler&lt;&#x2F;em&gt; multinomial expansion from &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;mathworld.wolfram.com&#x2F;Dice.html&quot;&gt;mathworld&#x2F;Dice&lt;&#x2F;a&gt; for &lt;code&gt;s=6&lt;&#x2F;code&gt; and &lt;code&gt;n=18&lt;&#x2F;code&gt; and find $P(x, 18, 6)$ which we will denote as $P(X = x)$; the chance of rolling a sum equal to $x$:&lt;&#x2F;p&gt;
&lt;p&gt;$$P(X = x) = \frac{1}{6^{18}} \sum_{k=0}^{\lfloor(x-18)&#x2F;6\rfloor} (-1)^k \binom{18}{k} \binom{x-6k-1}{17}$$
$$ = \sum_{k=0}^{\lfloor(x-18)&#x2F;6\rfloor} (-1)^k \frac{18}{k!(18-k)!} \frac{(x-6k-1)!}{(x-6k-18)!}$$&lt;&#x2F;p&gt;
&lt;p&gt;If we were to expand this expression, we would get 15 different expressions depending on how big of an $x$ you want to determine. So rather than trying to reduce this to a polynomial expression over $p$, we will &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.wolframalpha.com&#x2F;input?i2d=true&amp;amp;i=+Divide%5B1%2CPower%5B6%2C18%5D%5DSum%5BPower%5B%5C%2840%29-1%5C%2841%29%2Ck%5D+*binomial%5C%2840%2918%5C%2844%29+k%5C%2841%29*binomial%5C%2840%2991-6k-1%5C%2844%29+17%5C%2841%29%2C%7Bk%2C0%2Cfloor%5C%2840%29Divide%5B%5C%2840%2991-18%5C%2841%29%2C6%5D%5C%2841%29%7D%5D&quot;&gt;paste values into wolfram alpha&lt;&#x2F;a&gt; and tabulate for $[18, \ldots, 108]$.&lt;&#x2F;p&gt;
&lt;p&gt;You can see the &lt;a href=&quot;#appendix&quot;&gt;appendix&lt;&#x2F;a&gt; for the numbers. Here we will just plot the values:&lt;&#x2F;p&gt;
&lt;div id=&quot;probhist&quot; style=&quot;width:600px;height:450px;&quot;&gt;&lt;&#x2F;div&gt;
&lt;script&gt;
&#x2F;&#x2F; keys [18, 108]
var ALL_X = [...Array(109).keys()].slice(18);

&#x2F;&#x2F; probabilities for p=18 up to p=108 (sums to 0.9999999999999999 \o&#x2F;)
var MAIN_PROBS = [1&#x2F;101559956668416, 1&#x2F;5642219814912, 19&#x2F;11284439629824, 95&#x2F;8463329722368, 665&#x2F;11284439629824, 1463&#x2F;5642219814912, 33643&#x2F;33853318889472, 9605&#x2F;2821109907456, 119833&#x2F;11284439629824, 1552015&#x2F;50779978334208, 308465&#x2F;3761479876608, 97223&#x2F;470184984576, 2782169&#x2F;5642219814912, 1051229&#x2F;940369969152, 4550747&#x2F;1880739938304, 786505&#x2F;156728328192, 37624655&#x2F;3761479876608, 36131483&#x2F;1880739938304, 1206294965&#x2F;33853318889472, 20045551&#x2F;313456656384, 139474379&#x2F;1253826625536, 1059736685&#x2F;5642219814912, 128825225&#x2F;417942208512, 17143871&#x2F;34828517376, 8640663457&#x2F;11284439629824, 728073331&#x2F;626913312768, 2155134523&#x2F;1253826625536, 3942228889&#x2F;1586874322944, 4949217565&#x2F;1410554953728, 3417441745&#x2F;705277476864, 27703245169&#x2F;4231664861184, 3052981465&#x2F;352638738432, 126513483013&#x2F;11284439629824, 240741263447&#x2F;16926659444736, 199524184055&#x2F;11284439629824, 60788736553&#x2F;2821109907456, 2615090074301&#x2F;101559956668416, 56759069113&#x2F;1880739938304, 130521904423&#x2F;3761479876608, 110438453753&#x2F;2821109907456, 163027882055&#x2F;3761479876608, 88576807769&#x2F;1880739938304, 566880747559&#x2F;11284439629824, 24732579319&#x2F;470184984576, 101698030955&#x2F;1880739938304, 461867856157&#x2F;8463329722368, 101698030955&#x2F;1880739938304, 24732579319&#x2F;470184984576, 566880747559&#x2F;11284439629824, 88576807769&#x2F;1880739938304, 163027882055&#x2F;3761479876608, 110438453753&#x2F;2821109907456, 130521904423&#x2F;3761479876608, 56759069113&#x2F;1880739938304, 2615090074301&#x2F;101559956668416, 60788736553&#x2F;2821109907456, 199524184055&#x2F;11284439629824, 240741263447&#x2F;16926659444736, 126513483013&#x2F;11284439629824, 3052981465&#x2F;352638738432, 27703245169&#x2F;4231664861184, 3417441745&#x2F;705277476864, 4949217565&#x2F;1410554953728, 3942228889&#x2F;1586874322944, 2155134523&#x2F;1253826625536, 728073331&#x2F;626913312768, 8640663457&#x2F;11284439629824, 17143871&#x2F;34828517376, 128825225&#x2F;417942208512, 1059736685&#x2F;5642219814912, 139474379&#x2F;1253826625536, 20045551&#x2F;313456656384, 1206294965&#x2F;33853318889472, 36131483&#x2F;1880739938304, 37624655&#x2F;3761479876608, 786505&#x2F;156728328192, 4550747&#x2F;1880739938304, 1051229&#x2F;940369969152, 2782169&#x2F;5642219814912, 97223&#x2F;470184984576, 308465&#x2F;3761479876608, 1552015&#x2F;50779978334208, 119833&#x2F;11284439629824, 9605&#x2F;2821109907456, 33643&#x2F;33853318889472, 1463&#x2F;5642219814912, 665&#x2F;11284439629824, 95&#x2F;8463329722368, 19&#x2F;11284439629824, 1&#x2F;5642219814912, 1&#x2F;101559956668416];

var MAIN_LEGEND = MAIN_PROBS.map(x =&gt; &quot;expected once in &quot; + Intl.NumberFormat().format(Math.floor(1&#x2F;x)) + &quot; rolls&quot;)

var trace = {
  x: ALL_X,
  y: MAIN_PROBS,
  name: &#x27;probability&#x27;,
  text: MAIN_LEGEND,
  opacity: 0.8,
  type: &quot;scatter&quot;,
};
var plotlycfg = {responsive: true};


var data = [trace];
var layout = {
  title: &quot;Distribution for the sum of 18d6 dice rolls&quot;,
  xaxis: {title: &quot;Roll&quot;},
  yaxis: {title: &quot;Probability&quot;},
};
Plotly.newPlot(document.getElementById(&#x27;probhist&#x27;), data, layout, plotlycfg);

&#x2F;&#x2F; extra: precise expectation and variance
var expectation_orig = MAIN_PROBS.map((x,i) =&gt; (i+18)*x).reduce((acc, e) =&gt; acc+e, 0);
var variance_orig = MAIN_PROBS.map((x,i) =&gt; Math.pow(i+18 - expectation_orig, 2)*x).reduce((acc, e) =&gt; acc+e, 0);
console.log(&quot;Precise Expectation and variance for 18d6&quot;, expectation_orig, variance_orig);
&lt;&#x2F;script&gt;
&lt;p&gt;and with the precise distribution we can also calculation expectation and variance:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;$E(X) = 63$&lt;&#x2F;li&gt;
&lt;li&gt;$Var(X) = 52.5 \thickapprox 7.24^2$&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This is how things &lt;strong&gt;should&lt;&#x2F;strong&gt; look on paper. From the chart you can extract:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;108&lt;&#x2F;code&gt; would be a once in &lt;code&gt;101 trillion&lt;&#x2F;code&gt; ($6^{18}$) event&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;107&lt;&#x2F;code&gt; would be a once in &lt;code&gt;5 trillion&lt;&#x2F;code&gt; event (&lt;code&gt;6^18&#x2F;18&lt;&#x2F;code&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;106&lt;&#x2F;code&gt; would be a once in &lt;code&gt;600 billion&lt;&#x2F;code&gt; event (5s in two places, or 4 in one place)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;105&lt;&#x2F;code&gt; would be a once in &lt;code&gt;90 billion&lt;&#x2F;code&gt; event (3x5s, or 1x4 and 1x5, or 1x3)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;104&lt;&#x2F;code&gt; would be a once in &lt;code&gt;16 billion&lt;&#x2F;code&gt; event (4x5s, 2x5s and 1x4, 2x4s, 1x5 and 1x3, 1x2)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;103&lt;&#x2F;code&gt; would be a once in &lt;code&gt;4 billion&lt;&#x2F;code&gt; event (...)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;102&lt;&#x2F;code&gt; would be a once in &lt;code&gt;1 billion&lt;&#x2F;code&gt; event&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;101&lt;&#x2F;code&gt; would be a once in &lt;code&gt;290 million&lt;&#x2F;code&gt; event&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;100&lt;&#x2F;code&gt; would be a once in &lt;code&gt;94 million&lt;&#x2F;code&gt; event&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;99&lt;&#x2F;code&gt; would be a once in &lt;code&gt;32 million&lt;&#x2F;code&gt; event&lt;&#x2F;li&gt;
&lt;li&gt;$\ldots$&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;95&lt;&#x2F;code&gt; would be a once in &lt;code&gt;900k&lt;&#x2F;code&gt; event (first number with prob &amp;lt; 1 in a million)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;strong&gt;But is this really right for BG?&lt;&#x2F;strong&gt; A &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;old.reddit.com&#x2F;r&#x2F;baldursgate&#x2F;comments&#x2F;svnyy5&#x2F;this_is_why_i_let_my_gf_roll_my_stats_lol&#x2F;hxhde5k&#x2F;&quot;&gt;lot&lt;&#x2F;a&gt; of &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;old.reddit.com&#x2F;r&#x2F;baldursgate&#x2F;comments&#x2F;tak2m7&#x2F;say_hello_to_my_archer_roll&#x2F;&quot;&gt;people&lt;&#x2F;a&gt; have &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;old.reddit.com&#x2F;r&#x2F;baldursgate&#x2F;comments&#x2F;rjnw22&#x2F;less_than_a_minute_of_rolling_this_is_my_alltime&#x2F;&quot;&gt;all&lt;&#x2F;a&gt; rolled nineties in just a few hundred rolls, and many even getting &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;old.reddit.com&#x2F;r&#x2F;baldursgate&#x2F;comments&#x2F;phr68a&#x2F;my_new_highest_roll_10049_elf_mclovin_fightermage&#x2F;&quot;&gt;100&lt;&#x2F;a&gt; or &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;old.reddit.com&#x2F;r&#x2F;baldursgate&#x2F;comments&#x2F;sq54wo&#x2F;how_high_can_you_roll&#x2F;&quot;&gt;more&lt;&#x2F;a&gt;..was that extreme luck, or are higher numbers more likely than what this distribution says?&lt;&#x2F;p&gt;
&lt;p&gt;Well, let&#x27;s start with the obvious:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;The distribution is &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Censoring_(statistics)&quot;&gt;censored&lt;&#x2F;a&gt;. We don&#x27;t see the rolls below $75$.&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;div id=&quot;probhist2&quot; style=&quot;width:600px;height:450px;&quot;&gt;&lt;&#x2F;div&gt;
&lt;script&gt;
var data = [{
  x: ALL_X,
  y: MAIN_PROBS,
  name: &#x27;probability&#x27;,
  text: MAIN_LEGEND,
  opacity: 0.8,
  type: &quot;scatter&quot;,
}];
var layout = {
  annotations: [
   {
     y: 1&#x2F;70,
     x: 75,
     xref: &#x27;x&#x27;,
     yref: &#x27;y&#x27;,
     text: &#x27;cutoff&#x27;,
     showarrow: true,
     arrowhead: 7,
     arrowcolor: &quot;blue&quot;,
     ax: 0,
     ay: -40
   },
  ],
  xaxis: {title: &quot;Roll&quot;},
  yaxis: {title: &quot;Probability&quot;},
};
Plotly.newPlot(document.getElementById(&#x27;probhist2&#x27;), data, layout, plotlycfg);
&lt;&#x2F;script&gt;
&lt;p&gt;What&#x27;s &lt;strong&gt;left of this cutoff&lt;&#x2F;strong&gt; actually accounts for around &lt;code&gt;94%&lt;&#x2F;code&gt; of the distribution. &lt;strong&gt;If&lt;&#x2F;strong&gt; the game &lt;strong&gt;did not do this&lt;&#x2F;strong&gt;, you&#x27;d be as likely getting &lt;code&gt;36&lt;&#x2F;code&gt; as a &lt;code&gt;90&lt;&#x2F;code&gt;. We are effectively throwing away &quot;19 bad rolls&quot; on every roll.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;AD&amp;amp;D 2e&lt;&#x2F;code&gt; had its &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;advanced-dungeons-dragons-2nd-edition.fandom.com&#x2F;wiki&#x2F;Rolling_Ability_Scores&quot;&gt;own ways to tilt the distribution&lt;&#x2F;a&gt; in a way that resulted in more powerful characters.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;How such a truncation or censoring is performed is at the mercy of the BG engine. We will &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Rectified_Gaussian_distribution&quot;&gt;rectify&lt;&#x2F;a&gt; the distribution by &lt;strong&gt;scaling up&lt;&#x2F;strong&gt; the truncated version of our distribution, and show that this is correct later.&lt;&#x2F;p&gt;
&lt;div id=&quot;probhist3&quot; style=&quot;width:600px;height:450px;&quot;&gt;&lt;&#x2F;div&gt;
&lt;script&gt;
var prob_over_74 = MAIN_PROBS.slice(75-18).reduce((acc, e) =&gt; acc + e, 0);
var SCALED_PROBS = MAIN_PROBS.slice(75-18).map(x =&gt; x &#x2F; prob_over_74); &#x2F;&#x2F; scale up by whats left

var scaled_legend = SCALED_PROBS.map(x =&gt; &quot;expected once in &quot; + Intl.NumberFormat().format(Math.floor(1&#x2F;x)) + &quot; rolls&quot;);

&#x2F;&#x2F;console.log(&quot;probability of rolling gte 75&quot;, prob_over_74);
&#x2F;&#x2F;console.log(SCALED_PROBS.reduce((acc, e) =&gt; acc + e, 0)); &#x2F;&#x2F; 1!
var trace = {
  x: ALL_X.slice(75-18),
  y: SCALED_PROBS,
  name: &#x27;probability&#x27;,
  text: scaled_legend,
  opacity: 0.8,
  type: &quot;scatter&quot;,
};

var data = [trace];
var layout = {
  title: &quot;Scaled Distribution&quot;,
  xaxis: {title: &quot;Roll&quot;},
  yaxis: {title: &quot;Probability&quot;},
};
Plotly.newPlot(document.getElementById(&#x27;probhist3&#x27;), data, layout, plotlycfg);

&#x2F;&#x2F; extra: precise expectation and variance
var expectation_trunc = SCALED_PROBS.map((x,i) =&gt; (i+75)*x).reduce((acc, e) =&gt; acc+e, 0);
var variance_trunc = SCALED_PROBS.map((x,i) =&gt; Math.pow(i+75 - expectation_trunc, 2)*x).reduce((acc, e) =&gt; acc+e, 0);
console.log(&quot;Precise Truncated Expectation and variance for 18d6&quot;, expectation_trunc, variance_trunc);

&lt;&#x2F;script&gt;
&lt;p&gt;Here we have divided by the sum of the probabilities of the right hand side of the graph $P(X \ge 75)$ to get the new probability sum to &lt;code&gt;1&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Using this scaled data, we can get precise, truncated distribution parameters:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;$E(X_T) = 77.525$&lt;&#x2F;li&gt;
&lt;li&gt;$Var(X_T) = 2.61^2$&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This &lt;em&gt;censored 18d6 multinomial distribution&lt;&#x2F;em&gt; is actually very close for certain cases, and we will &lt;strong&gt;demonstrate&lt;&#x2F;strong&gt; this.&lt;&#x2F;p&gt;
&lt;p&gt;But first, we are going to need to press the &lt;code&gt;reroll&lt;&#x2F;code&gt; button a lot...&lt;&#x2F;p&gt;
&lt;h2 id=&quot;automating-rolling&quot;&gt;Automating Rolling&lt;&#x2F;h2&gt;
&lt;p&gt;The simulation script &#x2F; hacks we made is &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Thhethssmuz&#x2F;bg2ee-stat-roll&quot;&gt;found here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;tools&quot;&gt;Tools&lt;&#x2F;h3&gt;
&lt;p&gt;We are playing on &lt;strong&gt;Linux&lt;&#x2F;strong&gt; with &lt;code&gt;X&lt;&#x2F;code&gt; and some obscure associated tooling:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;scrot&lt;&#x2F;code&gt; - X screenshot utility&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;xdotool&lt;&#x2F;code&gt; - X CLI automation tool&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;xwininfo&lt;&#x2F;code&gt; - X window information utility&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Basic strategy;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;find out where buttons are with &lt;code&gt;xwininfo&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;press the &lt;code&gt;reroll&lt;&#x2F;code&gt; button with &lt;code&gt;xdotool&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;take screenshot of the &lt;code&gt;total&lt;&#x2F;code&gt; number with &lt;code&gt;scrot&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;compare screenshot to previous rolls&lt;&#x2F;li&gt;
&lt;li&gt;press &lt;code&gt;store&lt;&#x2F;code&gt; when a new maximum is found&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;The script also does some extra stuff to determine the strength roll, but that&#x27;s not relevant here.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;initialization&quot;&gt;Initialization&lt;&#x2F;h3&gt;
&lt;p&gt;To standardise what we are taking screenshots of, we need a consistent frame of reference.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;xwininfo&lt;&#x2F;code&gt; will give us the &lt;code&gt;x,y&lt;&#x2F;code&gt; coordinates of the top left corner of the game window, and then hard-code the offsets from that because the game has a consistent layout. There is &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Thhethssmuz&#x2F;bg2ee-stat-roll&#x2F;blob&#x2F;5a023de83c468224aa999b5b3c60f224aae76b97&#x2F;roll.sh#L20-L84&quot;&gt;some complexity&lt;&#x2F;a&gt; in doing this, but it has so far worked well.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Caveat&lt;&#x2F;strong&gt;: You need to have &lt;strong&gt;scaled the window&lt;&#x2F;strong&gt; to size &amp;gt;= 1024x768 to avoid UI downscaling.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;The standardised approach also helps with dealing with rolls, and it let us populate a roll-table quickly.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;roll-tables&quot;&gt;Roll Tables&lt;&#x2F;h3&gt;
&lt;p&gt;Taking screenshots is pretty easy. Use &lt;code&gt;scrot&lt;&#x2F;code&gt; at an &lt;code&gt;x,y&lt;&#x2F;code&gt; coordinate followed by lenghts; &lt;code&gt;,width,height&lt;&#x2F;code&gt; as remaining arguments defining the square to screenshot:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; class=&quot;language-sh z-code&quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;scrot&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;a&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-expansion z-parameter z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-expansion z-parameter z-begin z-shell&quot;&gt;{&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-expansion z-parameter z-shell&quot;&gt;&lt;span class=&quot;z-variable z-other z-readwrite z-shell&quot;&gt;STR_TOP_LEFT_X&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-expansion z-parameter z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-expansion z-parameter z-end z-shell&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;,&lt;span class=&quot;z-meta z-group z-expansion z-parameter z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-expansion z-parameter z-begin z-shell&quot;&gt;{&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-expansion z-parameter z-shell&quot;&gt;&lt;span class=&quot;z-variable z-other z-readwrite z-shell&quot;&gt;STR_TOP_LEFT_Y&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-expansion z-parameter z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-expansion z-parameter z-end z-shell&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;,49,17&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; -&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;the output of this can be piped to a &lt;code&gt;.webp&lt;&#x2F;code&gt;webpd passed to &lt;code&gt;compare&lt;&#x2F;code&gt; (part of &lt;code&gt;imagemagick&lt;&#x2F;code&gt; package), to compare values based on thresholds. However, this idea is actually overkill..&lt;&#x2F;p&gt;
&lt;p&gt;The menu background is &lt;strong&gt;static&lt;&#x2F;strong&gt; and the resulting screenshots are actually &lt;strong&gt;completely deterministic per value&lt;&#x2F;strong&gt;, so we can instead just compare them by their hashes in one big &lt;code&gt;switch&lt;&#x2F;code&gt; (i.e. after piping to &lt;code&gt;md5&lt;&#x2F;code&gt;) and use that as our &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Thhethssmuz&#x2F;bg2ee-stat-roll&#x2F;blob&#x2F;5a023de83c468224aa999b5b3c60f224aae76b97&#x2F;roll.sh#L130-L159&quot;&gt;roll table&lt;&#x2F;a&gt;, Excerpt:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; class=&quot;language-sh z-code&quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;    &lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;d74939b47327e4f2c1b781d64e2ab28d*&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;&#x2F;span&gt;) &lt;span class=&quot;z-variable z-other z-readwrite z-assignment z-shell&quot;&gt;CURRENT_ROLL&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-shell&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-unquoted z-shell&quot;&gt;90&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;&#x2F;span&gt;;&lt;span class=&quot;z-keyword z-operator z-logical z-continue z-shell&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;    &lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;ca49ce8b4c9c0f814dab24668f7313fe*&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;&#x2F;span&gt;) &lt;span class=&quot;z-variable z-other z-readwrite z-assignment z-shell&quot;&gt;CURRENT_ROLL&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-shell&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-unquoted z-shell&quot;&gt;91&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;&#x2F;span&gt;;&lt;span class=&quot;z-keyword z-operator z-logical z-continue z-shell&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;    &lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;3e6f8127ac0634bb1fc20acf40c95c48*&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;&#x2F;span&gt;) &lt;span class=&quot;z-variable z-other z-readwrite z-assignment z-shell&quot;&gt;CURRENT_ROLL&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-shell&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-unquoted z-shell&quot;&gt;92&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;&#x2F;span&gt;;&lt;span class=&quot;z-keyword z-operator z-logical z-continue z-shell&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;    &lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;7f849edd84a4be895f5c58b4f5b20d4e*&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;&#x2F;span&gt;) &lt;span class=&quot;z-variable z-other z-readwrite z-assignment z-shell&quot;&gt;CURRENT_ROLL&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-shell&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-unquoted z-shell&quot;&gt;93&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;&#x2F;span&gt;;&lt;span class=&quot;z-keyword z-operator z-logical z-continue z-shell&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;    &lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;b8f90179e2a0e975fc2647bc7439d9c6*&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;&#x2F;span&gt;) &lt;span class=&quot;z-variable z-other z-readwrite z-assignment z-shell&quot;&gt;CURRENT_ROLL&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-shell&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-unquoted z-shell&quot;&gt;94&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;&#x2F;span&gt;;&lt;span class=&quot;z-keyword z-operator z-logical z-continue z-shell&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;    &lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;b1d3b73de16d750b265f5c63000ccd54*&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;&#x2F;span&gt;) &lt;span class=&quot;z-variable z-other z-readwrite z-assignment z-shell&quot;&gt;CURRENT_ROLL&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-shell&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-unquoted z-shell&quot;&gt;95&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;&#x2F;span&gt;;&lt;span class=&quot;z-keyword z-operator z-logical z-continue z-shell&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;    &lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;87413f7310bd06b0b66fb4d2e61c5c7a*&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;&#x2F;span&gt;) &lt;span class=&quot;z-variable z-other z-readwrite z-assignment z-shell&quot;&gt;CURRENT_ROLL&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-shell&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-unquoted z-shell&quot;&gt;96&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;&#x2F;span&gt;;&lt;span class=&quot;z-keyword z-operator z-logical z-continue z-shell&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;    &lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;b489ad2a17456f8eebe843e4b7e3e685*&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;&#x2F;span&gt;) &lt;span class=&quot;z-variable z-other z-readwrite z-assignment z-shell&quot;&gt;CURRENT_ROLL&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-shell&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-unquoted z-shell&quot;&gt;97&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;&#x2F;span&gt;;&lt;span class=&quot;z-keyword z-operator z-logical z-continue z-shell&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;    &lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;25112e67464791f24f9e2e99d38ef9d7*&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;&#x2F;span&gt;) &lt;span class=&quot;z-variable z-other z-readwrite z-assignment z-shell&quot;&gt;CURRENT_ROLL&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-shell&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-unquoted z-shell&quot;&gt;98&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;&#x2F;span&gt;;&lt;span class=&quot;z-keyword z-operator z-logical z-continue z-shell&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;    &lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;9c3720b9d3ab1d7f0d11dfb9771a1aef*&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;&#x2F;span&gt;) &lt;span class=&quot;z-variable z-other z-readwrite z-assignment z-shell&quot;&gt;CURRENT_ROLL&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-shell&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-unquoted z-shell&quot;&gt;99&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;&#x2F;span&gt;;&lt;span class=&quot;z-keyword z-operator z-logical z-continue z-shell&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;    &lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;3ef9bf6cd4d9946d89765870e5b21566*&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;&#x2F;span&gt;) &lt;span class=&quot;z-variable z-other z-readwrite z-assignment z-shell&quot;&gt;CURRENT_ROLL&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-shell&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-unquoted z-shell&quot;&gt;100&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;&#x2F;span&gt;;&lt;span class=&quot;z-keyword z-operator z-logical z-continue z-shell&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;clicking&quot;&gt;Clicking&lt;&#x2F;h3&gt;
&lt;p&gt;Automating a click is simply:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; class=&quot;language-sh z-code&quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;xdotool&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; mousemove &lt;span class=&quot;z-string z-quoted z-double z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-expansion z-parameter z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-readwrite z-shell&quot;&gt;REROLL_BTN_X&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-expansion z-parameter z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-readwrite z-shell&quot;&gt;REROLL_BTN_Y&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; click&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; --&lt;&#x2F;span&gt;delay&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-option z-shell&quot;&gt;=&lt;&#x2F;span&gt;0 1&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;where the &lt;code&gt;--delay=0&lt;&#x2F;code&gt; overrides a builtin delay between clicks.&lt;&#x2F;p&gt;
&lt;p&gt;The only complication here is that BG performs &lt;strong&gt;internal buffering&lt;&#x2F;strong&gt; of clicks, so this allows us to blast through numbers faster than the screen can display them. This means we have to compensate with a &lt;code&gt;sleep 0.001&lt;&#x2F;code&gt; after clicking to ensure we can grab the &lt;code&gt;scrot&lt;&#x2F;code&gt; of the roll before another click is registered.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;showcase&quot;&gt;Showcase&lt;&#x2F;h3&gt;
&lt;p&gt;Running the script (with a terminal showing the script output overlayed) looks like this:&lt;&#x2F;p&gt;
&lt;div class=&quot;yv&quot;&gt;
    &lt;iframe src=&quot;https:&#x2F;&#x2F;www.youtube-nocookie.com&#x2F;embed&#x2F;849xInj3GmI&quot; title=&quot;Youtube&quot; class=&quot;yvi&quot; webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;&#x2F;iframe&gt;
&lt;&#x2F;div&gt;
&lt;p&gt;On my machine, we get just over &lt;strong&gt;15 rolls per second&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;sampling&quot;&gt;Sampling&lt;&#x2F;h2&gt;
&lt;p&gt;We rolled a human &lt;code&gt;fighter&lt;&#x2F;code&gt;, &lt;code&gt;paladin&lt;&#x2F;code&gt;, and a &lt;code&gt;ranger&lt;&#x2F;code&gt; overnight with roughly half a million rolls each (see &lt;a href=&quot;#appendix&quot;&gt;appendix&lt;&#x2F;a&gt;), and we got these values:&lt;&#x2F;p&gt;
&lt;div id=&quot;rollhist&quot; style=&quot;width:600px;height:450px;&quot;&gt;&lt;&#x2F;div&gt;
&lt;script&gt;
&#x2F;&#x2F; keys [75, 108]
var x = [...Array(109).keys()].slice(75);

&#x2F;&#x2F; number of samples per class
var samples = {
  &#x2F;&#x2F;  fighter (75 -&gt; 98)
  &quot;fighter&quot;: [137379, 109198, 85620, 65004, 48256, 35041, 24987, 17545, 11981, 7883, 5007, 3139, 1946, 1138, 670, 368, 199, 103, 49, 26, 12, 6, 2, 1],
  &#x2F;&#x2F; paladin (75 -&gt; 102)
  &quot;paladin&quot;: [50888, 54911, 57338, 57442, 55589, 52357, 47503, 41339, 34458, 28599, 21997, 16722, 12322, 8697, 5997, 3774, 2371, 1489, 822, 465, 251, 129, 56, 24, 12, 4, 1, 1],

  &#x2F;&#x2F; ranger (75 -&gt; 100)
  &quot;ranger&quot;: [32296, 37790, 43118, 46609, 48108, 47589, 45774, 41963, 36876, 30973, 25272, 19904, 14730, 10430, 7285, 4667, 2991, 1696, 986, 529, 254, 121, 56, 26, 10, 1],
};

var trace_observations = function(klss) {
  var sample_klss = samples[klss];
  let num_samples = sample_klss.reduce((acc, e) =&gt; acc+e, 0);
  var observed_probs = sample_klss.map(x =&gt; x &#x2F; num_samples);

  &#x2F;&#x2F; TODO: estimate expecation and variance here?
  return {
    x: x,
    y: observed_probs,
    name: &#x27;observed &#x27; + klss,
    text: observed_probs.map(x =&gt; &quot;occurred once in &quot; + Math.floor(1&#x2F;x) + &quot; rolls&quot;),
    opacity: 0.8,
    type: &quot;scatter&quot;,
  };
};

var trace_obs_fighter = trace_observations(&#x27;fighter&#x27;);
var trace_obs_paladin = trace_observations(&#x27;paladin&#x27;);
var trace_obs_ranger = trace_observations(&#x27;ranger&#x27;);

var data = [trace_obs_fighter, trace_obs_paladin, trace_obs_ranger];
var layout = {
  title: &quot;Roll Results&quot;,
  xaxis: {title: &quot;Roll&quot;},
  yaxis: {title: &quot;Observed probability&quot;},
};
Plotly.newPlot(document.getElementById(&#x27;rollhist&#x27;), data, layout, plotlycfg);
&lt;&#x2F;script&gt;
&lt;p&gt;Let&#x27;s start with the &lt;strong&gt;fighter&lt;&#x2F;strong&gt;. If we compare the fighter graph with our precise, censored multinomial distribution, they are &lt;strong&gt;very close&lt;&#x2F;strong&gt;:&lt;&#x2F;p&gt;
&lt;div id=&quot;probhist4&quot; style=&quot;width:600px;height:450px;&quot;&gt;&lt;&#x2F;div&gt;
&lt;script&gt;
var prob_over_74 = MAIN_PROBS.slice(75-18).reduce((acc, e) =&gt; acc + e, 0);
var SCALED_PROBS = MAIN_PROBS.slice(75-18).map(x =&gt; x &#x2F; prob_over_74); &#x2F;&#x2F; scale up by whats left

var scaled_legend = SCALED_PROBS.map(x =&gt; &quot;expected once in &quot; + Intl.NumberFormat().format(Math.floor(1&#x2F;x)) + &quot; rolls&quot;);

let trace_single_trunc = {
  x: ALL_X.slice(75-18),
  y: SCALED_PROBS,
  name: &#x27;fighter multinomial 18d6&#x27;,
  text: scaled_legend,
  opacity: 0.8,
  type: &quot;scatter&quot;,
};

var data = [trace_single_trunc, trace_obs_fighter];
var layout = {
  title: &quot;Distribution vs. Observed Fighter&quot;,
  xaxis: {title: &quot;Roll&quot;},
  yaxis: {title: &quot;Probability&quot;},
};
Plotly.newPlot(document.getElementById(&#x27;probhist4&#x27;), data, layout, plotlycfg);
&lt;&#x2F;script&gt;
&lt;p&gt;So for &lt;strong&gt;fighters&lt;&#x2F;strong&gt;, we can be pretty happy with the calculations we have done, and can use the precise probabilities as a guide.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;How long would it take you to achieve &amp;gt;95 for a fighter using the script?&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;108&lt;&#x2F;code&gt; is a once in &lt;code&gt;5 trillion&lt;&#x2F;code&gt; event (10,000 years)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;107&lt;&#x2F;code&gt; is a once in &lt;code&gt;300 billion&lt;&#x2F;code&gt; event (600 years)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;106&lt;&#x2F;code&gt; is a once in &lt;code&gt;33 billion&lt;&#x2F;code&gt; event (69 years)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;105&lt;&#x2F;code&gt; is a once in &lt;code&gt;5 billion&lt;&#x2F;code&gt; event (10 years)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;104&lt;&#x2F;code&gt; is a once in &lt;code&gt;900 million&lt;&#x2F;code&gt; event (2 years)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;103&lt;&#x2F;code&gt; is a once in &lt;code&gt;200 million&lt;&#x2F;code&gt; event (5 months)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;102&lt;&#x2F;code&gt; is a once in &lt;code&gt;50 million&lt;&#x2F;code&gt; event (5 weeks)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;101&lt;&#x2F;code&gt; is a once in &lt;code&gt;16 million&lt;&#x2F;code&gt; event (2 weeks)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;100&lt;&#x2F;code&gt; is a once in &lt;code&gt;5 million&lt;&#x2F;code&gt; event (4 days)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;99&lt;&#x2F;code&gt; is a once in &lt;code&gt;2 million&lt;&#x2F;code&gt; event (1.5 day)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;98&lt;&#x2F;code&gt; is a once in &lt;code&gt;700k&lt;&#x2F;code&gt; event (12h)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;97&lt;&#x2F;code&gt; is a once in &lt;code&gt;270k&lt;&#x2F;code&gt; event (5h)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;96&lt;&#x2F;code&gt; is a once in &lt;code&gt;110k&lt;&#x2F;code&gt; event (2h)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;95&lt;&#x2F;code&gt; is a once in &lt;code&gt;50k&lt;&#x2F;code&gt; event (55m)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;So if we only look at human fighters or mages, we can stop here:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;We are actually quite a lot more likely to get a good roll early than what just the pure dice math would indicate thanks to censoring (50k rolls =&amp;gt; likely &lt;code&gt;95&lt;&#x2F;code&gt; rather than estimated &lt;code&gt;90&lt;&#x2F;code&gt; without censoring).&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;However, what&#x27;s up with the paladins and rangers? Time for a more painful math detour.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;imgs&#x2F;bg&#x2F;amicat1-math.webp&quot; alt=&quot;sweat mile cat math&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;class-variance&quot;&gt;Class Variance&lt;&#x2F;h2&gt;
&lt;p&gt;The reason for the discrepancy is simple: &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;rpg.stackexchange.com&#x2F;questions&#x2F;165377&#x2F;how-do-baldurs-gate-and-baldurs-gate-2s-rolling-for-stats-actually-get-gene&quot;&gt;stat floors based on races&#x2F;class&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;These stat floors are insignificant in some cases, but highly significant in others. Some highly floored classes actually push the uncensored mean above the &lt;code&gt;75&lt;&#x2F;code&gt; cutoff even though it&#x27;s a whole 12 points above the mean of the original underlying distribution.&lt;&#x2F;p&gt;
&lt;p&gt;The floors for a some of the classes:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;fighter&lt;&#x2F;strong&gt; mins: &lt;code&gt;STR=9&lt;&#x2F;code&gt;, rest &lt;code&gt;3&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;mage&lt;&#x2F;strong&gt; mins: &lt;code&gt;INT=9&lt;&#x2F;code&gt;, rest &lt;code&gt;3&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;paladin&lt;&#x2F;strong&gt; mins: &lt;code&gt;CHA=17&lt;&#x2F;code&gt;, &lt;code&gt;WIS=13&lt;&#x2F;code&gt;, &lt;code&gt;STR=12&lt;&#x2F;code&gt;, &lt;code&gt;CON=9&lt;&#x2F;code&gt;, rest &lt;code&gt;3&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;ranger&lt;&#x2F;strong&gt; mins: &lt;code&gt;CON=14&lt;&#x2F;code&gt;, &lt;code&gt;WIS=14&lt;&#x2F;code&gt;, &lt;code&gt;STR=13&lt;&#x2F;code&gt;, &lt;code&gt;DEX=13&lt;&#x2F;code&gt;, rest &lt;code&gt;3&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;old.reddit.com&#x2F;r&#x2F;baldursgate&#x2F;comments&#x2F;reevp6&#x2F;everyone_enjoys_a_good_high_ability_score_role_so&#x2F;&quot;&gt;other classes&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt; mins: generally light floors&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;em&gt;In other words&lt;&#x2F;em&gt;: paladins and rangers have significantly higher rolls on average.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Sidenote: in &lt;code&gt;2e&lt;&#x2F;code&gt; you actually rolled stats first, and &lt;strong&gt;only if&lt;&#x2F;strong&gt; you met the &lt;strong&gt;requirements&lt;&#x2F;strong&gt; could you become a Paladin &#x2F; Ranger. It&#x27;s an interesting choice..&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Is it possible to incorporate these floors into our modelling?&lt;&#x2F;p&gt;
&lt;h2 id=&quot;ability-distributions&quot;&gt;Ability Distributions&lt;&#x2F;h2&gt;
&lt;p&gt;If floors are involved at earlier stages, we have to take a step back and look at the distributions that make up the sum. We &lt;strong&gt;can&lt;&#x2F;strong&gt; compute distributions for &lt;strong&gt;individual ability scores&lt;&#x2F;strong&gt; (even if floored) if we use the distribution for $P(x, 3, 6)$ from &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;mathworld.wolfram.com&#x2F;Dice.html&quot;&gt;mathworld&#x2F;Dice&lt;&#x2F;a&gt; where &lt;code&gt;s=6&lt;&#x2F;code&gt; and &lt;code&gt;n=3&lt;&#x2F;code&gt; and censor it at a cutoff point similar to how we censor the total distribution.&lt;&#x2F;p&gt;
&lt;p&gt;Computing the value without a floor follows the same setup as when we did 18 dice; use &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.wolframalpha.com&#x2F;input?i2d=true&amp;amp;i=+Divide%5B1%2CPower%5B6%2C3%5D%5DSum%5BPower%5B%5C%2840%29-1%5C%2841%29%2Ck%5D+*binomial%5C%2840%293%5C%2844%29+k%5C%2841%29*binomial%5C%2840%2910-6k-1%5C%2844%29+2%5C%2841%29%2C%7Bk%2C0%2Cfloor%5C%2840%29Divide%5B%5C%2840%2910-3%5C%2841%29%2C6%5D%5C%2841%29%7D%5D&quot;&gt;wolfram alpha&lt;&#x2F;a&gt; and tabulate for $[3, \ldots, 18]$:&lt;&#x2F;p&gt;
&lt;div id=&quot;probhist3roll&quot; style=&quot;width:600px;height:450px;&quot;&gt;&lt;&#x2F;div&gt;
&lt;script&gt;
var THREEROLL_X = [3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18];
&#x2F;&#x2F; probabilities for p=3 up to p=18 (also sums to 0.9999999999999999)
var THREEROLL_PROBS = [1&#x2F;216, 1&#x2F;72, 1&#x2F;36, 5&#x2F;108, 5&#x2F;72, 7&#x2F;72, 25&#x2F;216, 1&#x2F;8, 1&#x2F;8, 25&#x2F;216, 7&#x2F;72, 5&#x2F;72, 5&#x2F;108, 1&#x2F;36, 1&#x2F;72, 1&#x2F;216];
console.log(&quot;probability sum for 3d6 =&quot;, THREEROLL_PROBS.reduce((acc, e) =&gt; acc+e, 0));

var expectation_unt = THREEROLL_PROBS.map((x,i) =&gt; (i+3)*x).reduce((acc, e) =&gt; acc+e, 0);
var variance_unt = THREEROLL_PROBS.map((x,i) =&gt; Math.pow(i+3 - expectation_unt, 2)*x).reduce((acc, e) =&gt; acc+e, 0);
console.log(&quot;Expectation, variance for untruncated 3d6&quot;, expectation_unt, variance_unt);

var trace = {
  x: THREEROLL_X,
  y: THREEROLL_PROBS,
  name: &#x27;probability&#x27;,
  text: THREEROLL_PROBS.map(x =&gt; &quot;expected once in &quot; + Intl.NumberFormat().format(Math.floor(1&#x2F;x)) + &quot; rolls&quot;),
  opacity: 0.8,
  type: &quot;scatter&quot;,
};
var data = [trace];
var layout = {
  title: &quot;Distribution for the sum of 3d6 dice rolls&quot;,
  xaxis: {title: &quot;Roll&quot;},
  yaxis: {title: &quot;Probability&quot;},
};
Plotly.newPlot(document.getElementById(&#x27;probhist3roll&#x27;), data, layout, plotlycfg);
&lt;&#x2F;script&gt;
&lt;p&gt;then we truncate + scale this at the observed floor points &lt;code&gt;9&lt;&#x2F;code&gt;, &lt;code&gt;12&lt;&#x2F;code&gt;, &lt;code&gt;13&lt;&#x2F;code&gt;, &lt;code&gt;14&lt;&#x2F;code&gt;, and &lt;code&gt;17&lt;&#x2F;code&gt;:&lt;&#x2F;p&gt;
&lt;div id=&quot;probhist3rolltruncs&quot; style=&quot;width:600px;height:450px;&quot;&gt;&lt;&#x2F;div&gt;
&lt;script&gt;
var TRUNCATED_DISTS = {};
TRUNCATED_DISTS[0] = THREEROLL_PROBS.slice();
TRUNCATED_DISTS[3] = THREEROLL_PROBS.slice(); &#x2F;&#x2F; no truncation == truncation at 3
var truncated_trace = function (t) {
  &#x2F;&#x2F; calculate probability up to cutoff point:
  var TRUNC_T_SUM = THREEROLL_PROBS.slice(t-3).reduce((acc, e) =&gt; acc+e, 0);
  &#x2F;&#x2F; truncate and scale (rectify) the right side of the distribution:
  var THREE_TRUNC_T = THREEROLL_PROBS.slice(t-3).map(x =&gt; x &#x2F; TRUNC_T_SUM);
  &#x2F;&#x2F; sanity sum (all 1)
  &#x2F;&#x2F;console.log(&quot;Sum of 3d6 truncated at &quot;, t, &quot;:&quot;, THREE_TRUNC_T.reduce((acc, e)=&gt;acc+e, 0));
  var expectation = THREE_TRUNC_T.map((x,i) =&gt; (i+t)*x).reduce((acc, e) =&gt; acc+e, 0);
  var variance = THREE_TRUNC_T.map((x,i) =&gt; Math.pow(i+t - expectation, 2)*x).reduce((acc, e) =&gt; acc+e, 0);
  console.log(&quot;Expectation, variance for truncated 3d6 at&quot;, t, expectation, variance);
  TRUNCATED_DISTS[t] = THREE_TRUNC_T;
  var trace = {
    x: THREEROLL_X.slice(t-3),
    y: THREE_TRUNC_T,
    name: &#x27;floor &#x27; + t,
    text: THREE_TRUNC_T.map(x =&gt; &quot;expected once in &quot; + Intl.NumberFormat(&#x27;en-IN&#x27;, {maximumSignificantDigits: 2}).format(1&#x2F;x) + &quot; rolls&quot;),
    opacity: 0.8,
    type: &quot;scatter&quot;,
  };
  return trace;
};

let trace_9 = truncated_trace(9);
let trace_12 = truncated_trace(12);
let trace_13 = truncated_trace(13);
let trace_14 = truncated_trace(14);
let trace_17 = truncated_trace(17);

var data = [trace_9, trace_12, trace_13, trace_14, trace_17];
var layout = {
  title: &quot;Rectified Distribution for the sum of 3d6 dice rolls&quot;,
  xaxis: {title: &quot;Roll&quot;},
  yaxis: {title: &quot;Probability&quot;},
};
Plotly.newPlot(document.getElementById(&#x27;probhist3rolltruncs&#x27;), data, layout, plotlycfg);
&lt;&#x2F;script&gt;
&lt;p&gt;To avoid having to write out conditionals $P(X = x| X\ge k)$ everywhere we will denote $X^{\lfloor k \rfloor}$ as one of these graphed multinomial distributions for the sum of &lt;code&gt;3d6&lt;&#x2F;code&gt; floored at $k$:&lt;&#x2F;p&gt;
&lt;p&gt;$$X^{\lfloor k \rfloor} \sim \mathcal{M}^{\lfloor k \rfloor}(3d6)$$&lt;&#x2F;p&gt;
&lt;p&gt;Note also that an unfloored ability score $X$ is equal to $X^{\lfloor3\rfloor}$.&lt;&#x2F;p&gt;
&lt;p&gt;We can then compute precise conditional expectations by floor:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;$\mathbb{E}(X^{\lfloor3\rfloor}) = \mathbb{E}(X) = 3\sum_{k=1}^{6}\frac{k}{6} = 3*3.5 = 10.5$&lt;&#x2F;li&gt;
&lt;li&gt;$\mathbb{E}(X^{\lfloor9\rfloor}) = 11.8125$&lt;&#x2F;li&gt;
&lt;li&gt;$\mathbb{E}(X^{\lfloor12\rfloor}) = 13.5555$&lt;&#x2F;li&gt;
&lt;li&gt;$\mathbb{E}(X^{\lfloor13\rfloor}) = 14.2500$&lt;&#x2F;li&gt;
&lt;li&gt;$\mathbb{E}(X^{\lfloor14\rfloor}) = 15.0000$&lt;&#x2F;li&gt;
&lt;li&gt;$\mathbb{E}(X^{\lfloor17\rfloor}) = 17.2500$&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Similarly, we can compute precise variances:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;$Var(X^{\lfloor3\rfloor}) = Var(X) = 3\sum_{k=1}^6\frac{(x_i - 3.5)^2}{6} = 3*2.92 = 8.75$&lt;&#x2F;li&gt;
&lt;li&gt;$Var(X^{\lfloor9\rfloor}) = 4.5773$&lt;&#x2F;li&gt;
&lt;li&gt;$Var(X^{\lfloor12\rfloor}) = 2.2469$&lt;&#x2F;li&gt;
&lt;li&gt;$Var(X^{\lfloor13\rfloor}) = 1.6875$&lt;&#x2F;li&gt;
&lt;li&gt;$Var(X^{\lfloor14\rfloor}) = 1.2000$&lt;&#x2F;li&gt;
&lt;li&gt;$Var(X^{\lfloor17\rfloor}) = 0.1875$&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;sum-of-ability-distributions&quot;&gt;Sum of Ability Distributions&lt;&#x2F;h3&gt;
&lt;p&gt;To get a distribution for the total score, we need to create a sum distribution of the distributions for their six base stats at their given class floors.&lt;&#x2F;p&gt;
&lt;p&gt;Define $Z_{paladin}$, $Z_{ranger}$ and $Z_{fighter}$ as:&lt;&#x2F;p&gt;
&lt;p&gt;$$Z_{paladin} = X_1^{\lfloor17\rfloor} + X_2^{\lfloor13\rfloor} + X_3^{\lfloor12\rfloor} + X_4^{\lfloor9\rfloor} + X_5^{\lfloor3\rfloor} + X_6^{\lfloor3\rfloor}$$
$$Z_{ranger} = X_1^{\lfloor14\rfloor} + X_2^{\lfloor14\rfloor} + X_3^{\lfloor13\rfloor} + X_4^{\lfloor13\rfloor} + X_5^{\lfloor3\rfloor} + X_6^{\lfloor3\rfloor}$$
$$Z_{fighter} = X_1^{\lfloor9\rfloor} + X_2^{\lfloor3\rfloor} + X_3^{\lfloor3\rfloor} + X_4^{\lfloor3\rfloor} + X_5^{\lfloor3\rfloor} + X_6^{\lfloor3\rfloor}$$&lt;&#x2F;p&gt;
&lt;p&gt;for floored 3d6 based random variables $X_i^{\lfloor N \rfloor}  \sim \mathcal{M}^{\lfloor N \rfloor}(3d6)$.&lt;&#x2F;p&gt;
&lt;p&gt;Using the computed expectations above to sum across the 6 main stats:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;$\mathbb{E}(Fighter) = \mathbb{E}(X^{\lfloor9\rfloor}) + 5\mathbb{E}(X) = 64.31$&lt;&#x2F;li&gt;
&lt;li&gt;$\mathbb{E}(Ranger) = 2\mathbb{E}(X^{\lfloor14\rfloor}) + 2\mathbb{E}(X^{\lfloor13\rfloor}) + 2\mathbb{E}(X) = 79.5$&lt;&#x2F;li&gt;
&lt;li&gt;$\mathbb{E}(Paladin) = \mathbb{E}(X^{\lfloor17\rfloor}) + \mathbb{E}(X^{\lfloor13\rfloor}) + \mathbb{E}(X^{\lfloor12\rfloor}) + \mathbb{E}(X^{\lfloor9\rfloor})+ 2\mathbb{E}(X) = 77.86$&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;and similarly for variance:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;$Var(Fighter) = Var(X^{\lfloor9\rfloor}) + 5Var(X) \thickapprox 6.95^2$&lt;&#x2F;li&gt;
&lt;li&gt;$Var(Ranger) = 2Var(X^{\lfloor14\rfloor}) + 2Var(X^{\lfloor13\rfloor}) + 2Var(X) \thickapprox 4.82^2$&lt;&#x2F;li&gt;
&lt;li&gt;$Var(Paladin) = Var(X^{\lfloor17\rfloor}) + Var(X^{\lfloor13\rfloor}) + Var(X^{\lfloor12\rfloor}) + Var(X^{\lfloor3\rfloor})+ 2Var(X) \thickapprox 5.12^2$&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;noting that variables are independent under the observed two stage censoring.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Why can we rely on two stage censoring and their independence? If any of these internal mechanisms used some kind of &lt;code&gt;if&lt;&#x2F;code&gt; condition or &lt;code&gt;min&lt;&#x2F;code&gt; function, it would be immediately obvious from the distribution. The paladin distribution of charisma is clearly a &lt;code&gt;~1&#x2F;4&lt;&#x2F;code&gt; for an &lt;code&gt;18&lt;&#x2F;code&gt;, and &lt;code&gt;~3&#x2F;4&lt;&#x2F;code&gt; for a &lt;code&gt;17&lt;&#x2F;code&gt;; it would have been much rarer to see an 18 otherwise.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Thus, the distributions of our classes are based on multinomal-based distributions with the following first moments:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;$Uncensored\ Fighter \sim \mathcal{M}(\mu = 64.31, \sigma^2 = 6.95^2)$&lt;&#x2F;li&gt;
&lt;li&gt;$Uncensored\ Ranger \sim \mathcal{M}(\mu = 79.5, \sigma^2 = 4.82^2)$&lt;&#x2F;li&gt;
&lt;li&gt;$Uncensored\ Paladin \sim \mathcal{M}(\mu = 77.86, \sigma^2 = 5.12^2)$&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This is nice as a quick overview of what&#x27;s best in the higher ranges, but it&#x27;s not very precise. Without the &lt;strong&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Probability_mass_function&quot;&gt;PMF&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt; for the &lt;strong&gt;sum of our ability scores&lt;&#x2F;strong&gt;, it&#x27;s hard to give good values for what the truncated version will look like (we are censoring in two stages). In particular, these heavily floored random variables end up giving us quite asymmetrical distributions in the tails.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;class-distributions&quot;&gt;Class Distributions&lt;&#x2F;h3&gt;
&lt;p&gt;Thankfully, it is possible to inductively compute the pmf of $Z_{class}$ via &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Convolution#Discrete_convolution&quot;&gt;convolution&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Some internet digging notwithstanding; most answers found online for this required &lt;strong&gt;either&lt;&#x2F;strong&gt; &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;stats.stackexchange.com&#x2F;questions&#x2F;3614&#x2F;how-to-easily-determine-the-results-distribution-for-multiple-dice&#x2F;3684#3684&quot;&gt;mathematica functions&lt;&#x2F;a&gt; (that we do not have here in our inlined source), &lt;strong&gt;or&lt;&#x2F;strong&gt; a slightly more laborious manual convolution. We will follow the &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;stats.libretexts.org&#x2F;Bookshelves&#x2F;Probability_Theory&#x2F;Book%3A_Introductory_Probability_(Grinstead_and_Snell)&#x2F;07%3A_Sums_of_Random_Variables&#x2F;7.01%3A_Sums_of_Discrete_Random_Variables&quot;&gt;inductive convolution approach&lt;&#x2F;a&gt; which we can solve with recursion. Paladin case:&lt;&#x2F;p&gt;
&lt;p&gt;Let $X_{12} = X_1^{\lfloor17\rfloor} + X_2^{\lfloor13\rfloor}$. We can generate values for the pmf $p_{X_{12}}$ for $X_{12}$ via the pmfs $p_{X_i}$ for $X_1^{\lfloor17\rfloor}$ and $X_2^{\lfloor13\rfloor}$ via the convolution formula:&lt;&#x2F;p&gt;
&lt;p&gt;$$P(X_{12} = n) = \ (p_{X_1} * p_{X_2})(n) = \sum_{m=-\infty}^{\infty}P(X_1=m)P(X_2 = n-m)$$&lt;&#x2F;p&gt;
&lt;p&gt;This step is particularly easy for the paladin, because $X_1^{\lfloor17\rfloor}$ only takes two values (i.e. $m=17$ ahd $m=18$ are the only non-zero parts in the sum).&lt;&#x2F;p&gt;
&lt;p&gt;The rest is more laborious to do by hand, as the sums get increasingly large while we iterate towards $Z=P_{123456}$ by repeatedly applying convolution to the remaining $X_i$:&lt;&#x2F;p&gt;
&lt;p&gt;$$P(X_{123} = n) = \ (p_{X_{12}} * p_{X_3})(n) \sum_{m=-\infty}^{\infty}P(X_{12}=m)P(X_3 = n-m)$$&lt;&#x2F;p&gt;
&lt;p&gt;$$P(X_{1234} = n) = \ (p_{X_{123}} * p_{X_4})(n) \sum_{m=-\infty}^{\infty}P(X_{123}=m)P(X_4 = n-m)$$&lt;&#x2F;p&gt;
&lt;p&gt;$$P(X_{12345} = n) = \ (p_{X_{1234}} * p_{X_5})(n) \sum_{m=-\infty}^{\infty}P(X_{1234}=m)P(X_5 = n-m)$$&lt;&#x2F;p&gt;
&lt;p&gt;$$P(X_{123456} = n) = \ (p_{X_{12345}} * p_{X_5})(n) \sum_{m=-\infty}^{\infty}P(X_{12345}=m)P(X_6 = n-m)$$&lt;&#x2F;p&gt;
&lt;p&gt;The hard work is correctly matching indexes in our probability arrays that serve as our mass functions to the sum, and defaulting to zero when accessing out of bounds:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;js&quot; class=&quot;language-js z-code&quot;&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;z-source z-ts&quot;&gt;&lt;span class=&quot;z-comment z-line z-double-slash z-ts&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-ts&quot;&gt;&#x2F;&#x2F;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-double-slash z-ts&quot;&gt; given pXi = [0.75, 0.25], pXj = [0.375, 0.2678, 0.1786, 0.1071, 0.05357, 0.01786]&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ts&quot;&gt;&lt;span class=&quot;z-comment z-line z-double-slash z-ts&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-ts&quot;&gt;&#x2F;&#x2F;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-double-slash z-ts&quot;&gt; (approximations of the first two truncated paladin probability arrays for CHA + WIS)&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ts&quot;&gt;&lt;span class=&quot;z-meta z-var z-expr z-ts&quot;&gt;&lt;span class=&quot;z-storage z-type z-ts&quot;&gt;var&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-var-single-variable z-expr z-ts&quot;&gt;&lt;span class=&quot;z-meta z-definition z-variable z-ts&quot;&gt;&lt;span class=&quot;z-entity z-name z-function z-ts&quot;&gt;convolve&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-ts&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function z-expression z-ts&quot;&gt;&lt;span class=&quot;z-storage z-type z-function z-ts&quot;&gt;function&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-parameters z-ts&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameters z-begin z-ts&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-parameter z-ts&quot;&gt;pXi&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-parameter z-ts&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-parameter z-ts&quot;&gt;pXj&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-parameters z-end z-ts&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-block z-ts&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-block z-ts&quot;&gt;{&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ts&quot;&gt;&lt;span class=&quot;z-meta z-var z-expr z-ts&quot;&gt;&lt;span class=&quot;z-meta z-function z-expression z-ts&quot;&gt;&lt;span class=&quot;z-meta z-block z-ts&quot;&gt;&lt;span class=&quot;z-punctuation z-whitespace z-comment z-leading z-ts&quot;&gt;  &lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-double-slash z-ts&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-ts&quot;&gt;&#x2F;&#x2F;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-double-slash z-ts&quot;&gt; pre-allocate a zero-indexed array where our probabilities will go&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ts&quot;&gt;&lt;span class=&quot;z-meta z-var z-expr z-ts&quot;&gt;&lt;span class=&quot;z-meta z-function z-expression z-ts&quot;&gt;&lt;span class=&quot;z-meta z-block z-ts&quot;&gt;  &lt;span class=&quot;z-meta z-var z-expr z-ts&quot;&gt;&lt;span class=&quot;z-storage z-type z-ts&quot;&gt;var&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-var-single-variable z-expr z-ts&quot;&gt;&lt;span class=&quot;z-meta z-definition z-variable z-ts&quot;&gt;&lt;span class=&quot;z-variable z-other z-readwrite z-ts&quot;&gt;pXij&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-ts&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-array z-literal z-ts&quot;&gt; &lt;span class=&quot;z-meta z-brace z-square z-ts&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-spread z-ts&quot;&gt;...&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-ts&quot;&gt;&lt;span class=&quot;z-support z-class z-builtin z-ts&quot;&gt;Array&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-brace z-round z-ts&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-object z-ts&quot;&gt;pXi&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-ts&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-variable z-property z-ts&quot;&gt;length&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-arithmetic z-ts&quot;&gt;+&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-object z-ts&quot;&gt;pXj&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-ts&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-variable z-property z-ts&quot;&gt;length&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-arithmetic z-ts&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-decimal z-ts&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-brace z-round z-ts&quot;&gt;)&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-ts&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-ts&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-function z-dom z-ts&quot;&gt;keys&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-brace z-round z-ts&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-brace z-round z-ts&quot;&gt;)&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-brace z-square z-ts&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-statement z-ts&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ts&quot;&gt;&lt;span class=&quot;z-meta z-var z-expr z-ts&quot;&gt;&lt;span class=&quot;z-meta z-function z-expression z-ts&quot;&gt;&lt;span class=&quot;z-meta z-block z-ts&quot;&gt;&lt;span class=&quot;z-punctuation z-whitespace z-comment z-leading z-ts&quot;&gt;  &lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-double-slash z-ts&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-ts&quot;&gt;&#x2F;&#x2F;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-double-slash z-ts&quot;&gt; loop to generate P(Xij = n) for all n&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ts&quot;&gt;&lt;span class=&quot;z-meta z-var z-expr z-ts&quot;&gt;&lt;span class=&quot;z-meta z-function z-expression z-ts&quot;&gt;&lt;span class=&quot;z-meta z-block z-ts&quot;&gt;  &lt;span class=&quot;z-keyword z-control z-loop z-ts&quot;&gt;for&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-brace z-round z-ts&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-var z-expr z-ts&quot;&gt;&lt;span class=&quot;z-storage z-type z-ts&quot;&gt;let&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-var-single-variable z-expr z-ts&quot;&gt;&lt;span class=&quot;z-meta z-definition z-variable z-ts&quot;&gt;&lt;span class=&quot;z-variable z-other z-readwrite z-ts&quot;&gt;n&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-ts&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-decimal z-ts&quot;&gt;0&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-statement z-ts&quot;&gt;;&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-readwrite z-ts&quot;&gt;n&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-relational z-ts&quot;&gt;&amp;lt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-object z-ts&quot;&gt;pXi&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-ts&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-variable z-property z-ts&quot;&gt;length&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-arithmetic z-ts&quot;&gt;+&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-object z-ts&quot;&gt;pXj&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-ts&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-variable z-property z-ts&quot;&gt;length&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-arithmetic z-ts&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-decimal z-ts&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-statement z-ts&quot;&gt;;&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-readwrite z-ts&quot;&gt;n&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-compound z-ts&quot;&gt;+=&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-decimal z-ts&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-brace z-round z-ts&quot;&gt;)&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-block z-ts&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-block z-ts&quot;&gt;{&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ts&quot;&gt;&lt;span class=&quot;z-meta z-var z-expr z-ts&quot;&gt;&lt;span class=&quot;z-meta z-function z-expression z-ts&quot;&gt;&lt;span class=&quot;z-meta z-block z-ts&quot;&gt;&lt;span class=&quot;z-meta z-block z-ts&quot;&gt;    &lt;span class=&quot;z-variable z-other z-readwrite z-ts&quot;&gt;pXij&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-array z-literal z-ts&quot;&gt;&lt;span class=&quot;z-meta z-brace z-square z-ts&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-readwrite z-ts&quot;&gt;n&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-brace z-square z-ts&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-ts&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-decimal z-ts&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-statement z-ts&quot;&gt;;&lt;&#x2F;span&gt; &lt;span class=&quot;z-comment z-line z-double-slash z-ts&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-ts&quot;&gt;&#x2F;&#x2F;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-double-slash z-ts&quot;&gt; init to zero&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ts&quot;&gt;&lt;span class=&quot;z-meta z-var z-expr z-ts&quot;&gt;&lt;span class=&quot;z-meta z-function z-expression z-ts&quot;&gt;&lt;span class=&quot;z-meta z-block z-ts&quot;&gt;&lt;span class=&quot;z-meta z-block z-ts&quot;&gt;&lt;span class=&quot;z-punctuation z-whitespace z-comment z-leading z-ts&quot;&gt;    &lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-double-slash z-ts&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-ts&quot;&gt;&#x2F;&#x2F;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-double-slash z-ts&quot;&gt; loop to do sum over m, first variable determines length of this sum&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ts&quot;&gt;&lt;span class=&quot;z-meta z-var z-expr z-ts&quot;&gt;&lt;span class=&quot;z-meta z-function z-expression z-ts&quot;&gt;&lt;span class=&quot;z-meta z-block z-ts&quot;&gt;&lt;span class=&quot;z-meta z-block z-ts&quot;&gt;    &lt;span class=&quot;z-keyword z-control z-loop z-ts&quot;&gt;for&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-brace z-round z-ts&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-var z-expr z-ts&quot;&gt;&lt;span class=&quot;z-storage z-type z-ts&quot;&gt;let&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-var-single-variable z-expr z-ts&quot;&gt;&lt;span class=&quot;z-meta z-definition z-variable z-ts&quot;&gt;&lt;span class=&quot;z-variable z-other z-readwrite z-ts&quot;&gt;m&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-ts&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-decimal z-ts&quot;&gt;0&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-statement z-ts&quot;&gt;;&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-readwrite z-ts&quot;&gt;m&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-relational z-ts&quot;&gt;&amp;lt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-object z-ts&quot;&gt;pXi&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-ts&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-variable z-property z-ts&quot;&gt;length&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-statement z-ts&quot;&gt;;&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-readwrite z-ts&quot;&gt;m&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-compound z-ts&quot;&gt;+=&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-decimal z-ts&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-brace z-round z-ts&quot;&gt;)&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-block z-ts&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-block z-ts&quot;&gt;{&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ts&quot;&gt;&lt;span class=&quot;z-meta z-var z-expr z-ts&quot;&gt;&lt;span class=&quot;z-meta z-function z-expression z-ts&quot;&gt;&lt;span class=&quot;z-meta z-block z-ts&quot;&gt;&lt;span class=&quot;z-meta z-block z-ts&quot;&gt;&lt;span class=&quot;z-meta z-block z-ts&quot;&gt;&lt;span class=&quot;z-punctuation z-whitespace z-comment z-leading z-ts&quot;&gt;      &lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-double-slash z-ts&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-ts&quot;&gt;&#x2F;&#x2F;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-double-slash z-ts&quot;&gt; we do defaulting outside range with `|| 0`&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ts&quot;&gt;&lt;span class=&quot;z-meta z-var z-expr z-ts&quot;&gt;&lt;span class=&quot;z-meta z-function z-expression z-ts&quot;&gt;&lt;span class=&quot;z-meta z-block z-ts&quot;&gt;&lt;span class=&quot;z-meta z-block z-ts&quot;&gt;&lt;span class=&quot;z-meta z-block z-ts&quot;&gt;      &lt;span class=&quot;z-variable z-other z-readwrite z-ts&quot;&gt;pXij&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-array z-literal z-ts&quot;&gt;&lt;span class=&quot;z-meta z-brace z-square z-ts&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-readwrite z-ts&quot;&gt;n&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-brace z-square z-ts&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-compound z-ts&quot;&gt;+=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-brace z-round z-ts&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-readwrite z-ts&quot;&gt;pXi&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-array z-literal z-ts&quot;&gt;&lt;span class=&quot;z-meta z-brace z-square z-ts&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-readwrite z-ts&quot;&gt;m&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-brace z-square z-ts&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-logical z-ts&quot;&gt;||&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-decimal z-ts&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-brace z-round z-ts&quot;&gt;)&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-arithmetic z-ts&quot;&gt;*&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-brace z-round z-ts&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-readwrite z-ts&quot;&gt;pXj&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-array z-literal z-ts&quot;&gt;&lt;span class=&quot;z-meta z-brace z-square z-ts&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-readwrite z-ts&quot;&gt;n&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-arithmetic z-ts&quot;&gt;-&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-readwrite z-ts&quot;&gt;m&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-brace z-square z-ts&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-logical z-ts&quot;&gt;||&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-decimal z-ts&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-brace z-round z-ts&quot;&gt;)&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-statement z-ts&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ts&quot;&gt;&lt;span class=&quot;z-meta z-var z-expr z-ts&quot;&gt;&lt;span class=&quot;z-meta z-function z-expression z-ts&quot;&gt;&lt;span class=&quot;z-meta z-block z-ts&quot;&gt;&lt;span class=&quot;z-meta z-block z-ts&quot;&gt;&lt;span class=&quot;z-meta z-block z-ts&quot;&gt;    &lt;span class=&quot;z-punctuation z-definition z-block z-ts&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ts&quot;&gt;&lt;span class=&quot;z-meta z-var z-expr z-ts&quot;&gt;&lt;span class=&quot;z-meta z-function z-expression z-ts&quot;&gt;&lt;span class=&quot;z-meta z-block z-ts&quot;&gt;&lt;span class=&quot;z-meta z-block z-ts&quot;&gt;  &lt;span class=&quot;z-punctuation z-definition z-block z-ts&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ts&quot;&gt;&lt;span class=&quot;z-meta z-var z-expr z-ts&quot;&gt;&lt;span class=&quot;z-meta z-function z-expression z-ts&quot;&gt;&lt;span class=&quot;z-meta z-block z-ts&quot;&gt;  &lt;span class=&quot;z-keyword z-control z-flow z-ts&quot;&gt;return&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-readwrite z-ts&quot;&gt;pXij&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-statement z-ts&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ts&quot;&gt;&lt;span class=&quot;z-meta z-var z-expr z-ts&quot;&gt;&lt;span class=&quot;z-meta z-function z-expression z-ts&quot;&gt;&lt;span class=&quot;z-meta z-block z-ts&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-block z-ts&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-statement z-ts&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ts&quot;&gt;&lt;span class=&quot;z-comment z-line z-double-slash z-ts&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-ts&quot;&gt;&#x2F;&#x2F;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-double-slash z-ts&quot;&gt; returns [0.28125, 0.29464, 0.2009, 0.125, 0.06696, 0.02678, 0.004464]&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Using this, we can compute the PMF for $Z_{class} = X_{123456}$:&lt;&#x2F;p&gt;
&lt;p&gt;$$P(Z_{class} = z) = \ (((((p_{X_1} * p_{X_2}) * p_{X_3}) * p_{X_4}) * p_{X_5}) * p_{X_6}) (z)$$&lt;&#x2F;p&gt;
&lt;p&gt;and we graph them for various classes:&lt;&#x2F;p&gt;
&lt;div id=&quot;probhist3convolved&quot; style=&quot;width:600px;height:450px;&quot;&gt;&lt;&#x2F;div&gt;
&lt;script&gt;
&#x2F;&#x2F; The first one is easy, P_1 only has 2 values =&gt; m={0,1}
&#x2F;&#x2F;let pX1 = TRUNCATED_DISTS[17]; &#x2F;&#x2F; 2 values, for 17,18
&#x2F;&#x2F;let pX2 = TRUNCATED_DISTS[13]; &#x2F;&#x2F; 6 values, for 13,...,18
&#x2F;&#x2F;console.log(&quot;convolving&quot;, pX1, pX2)
&#x2F;&#x2F; new dist starts at 17+13 and goes to 18x2
&#x2F;&#x2F;let pX12 = [];
&#x2F;&#x2F;pX12[0] = pX1[0] * pX2[0]; &#x2F;&#x2F; 17+13 || 18+12 (zero)
&#x2F;&#x2F;pX12[1] = pX1[0] * pX2[1] + pX1[1]*pX2[0]; &#x2F;&#x2F; 17+14 || 18+13
&#x2F;&#x2F;pX12[2] = pX1[0] * pX2[2] + pX1[1]*pX2[1]; &#x2F;&#x2F; 17+15 || 18+14
&#x2F;&#x2F;pX12[3] = pX1[0] * pX2[3] + pX1[1]*pX2[2]; &#x2F;&#x2F; 17+16 || 18+15
&#x2F;&#x2F;pX12[4] = pX1[0] * pX2[4] + pX1[1]*pX2[3]; &#x2F;&#x2F; 17+17 || 18+16
&#x2F;&#x2F;pX12[5] = pX1[0] * pX2[5] + pX1[1]*pX2[4]; &#x2F;&#x2F; 17+18 || 18+17
&#x2F;&#x2F;pX12[6] =                 + pX1[1]*pX2[5]; &#x2F;&#x2F; 17+19 (zero) || 18+18
&#x2F;&#x2F;console.log(pX12, pX12.reduce((acc,e)=&gt;acc+e,0)); &#x2F;&#x2F; perfect

&#x2F;&#x2F; then do P_{12} + P_3
&#x2F;&#x2F;pX12 has 7 values, for 30, 31, 32, 33, 34, 35, 36
&#x2F;&#x2F;let pX3 = TRUNCATED_DISTS[12]; &#x2F;&#x2F; has 7 values, for 12,13,14,15,16,17,18
&#x2F;&#x2F; new dist starts at 30+12 and goes to 18x3 i.e. length (13)
&#x2F;&#x2F;let pX123 = [];
&#x2F;&#x2F;pX123[0] = pX12[0]*pX3[0]; &#x2F;&#x2F; 42 : 30+12
&#x2F;&#x2F;pX123[1] = pX12[0]*pX3[1] + pX12[1]*pX3[0]; &#x2F;&#x2F; 43: 30+13 || 31+12
&#x2F;&#x2F;pX123[2] = pX12[0]*pX3[2] + pX12[1]*pX3[1] + pX12[2]*pX3[0]; &#x2F;&#x2F; 44: 30+14 || 31+13 || 32+12
&#x2F;&#x2F;pX123[3] = pX12[0]*pX3[3] + pX12[1]*pX3[2] + pX12[2]*pX3[1] + pX12[3] +pX3[0]; &#x2F;&#x2F; 45: 30+15 || 31+14 || 32+13 || 33+12
&#x2F;&#x2F; ok... clearly not a hand written thing, but matches convolve result

&#x2F;&#x2F; what am i doing with my life
var convolve = function (pXi, pXj) {
  &#x2F;&#x2F; pre-allocate a zero-indexed array where our probabilities will go
  var pXij = [...Array(pXi.length + pXj.length - 1).keys()];
  &#x2F;&#x2F; loop to generate P(Xij = n) for all n
  for (let n = 0; n &lt; pXi.length + pXj.length - 1; n += 1) {
    pXij[n] = 0; &#x2F;&#x2F; init to zero
    &#x2F;&#x2F; loop to do sum over m, first variable determines length of this sum
    for (let m = 0; m &lt; pXi.length; m += 1) {
      &#x2F;&#x2F; we do defaulting outside range with `|| 0`
      pXij[n] += (pXi[m] || 0) * (pXj[n-m] || 0);
    }
  }
  return pXij;
}

&#x2F;&#x2F; doing paladin from function above:
&#x2F;&#x2F;let pX1 = TRUNCATED_DISTS[17]; &#x2F;&#x2F; 2 values; 17,18
&#x2F;&#x2F;let pX2 = TRUNCATED_DISTS[13]; &#x2F;&#x2F; 6 values; 13,...,18
&#x2F;&#x2F;let pX3 = TRUNCATED_DISTS[12]; &#x2F;&#x2F; 7 values; 12,13,14,15,16,17,18
&#x2F;&#x2F;let pX4 = TRUNCATED_DISTS[9]; &#x2F;&#x2F; 10 values; 9,...,18
&#x2F;&#x2F;let pX5 = TRUNCATED_DISTS[3]; &#x2F;&#x2F; 16 values; 3,...,18
&#x2F;&#x2F;let pX6 = TRUNCATED_DISTS[3]; &#x2F;&#x2F; ditto
&#x2F;&#x2F;let gen12 = convolve(pX1, pX2); &#x2F;&#x2F; dist from 30 -&gt; 36
&#x2F;&#x2F;let gen123 = convolve(gen12, pX3); &#x2F;&#x2F; dist from 42 -&gt; 54
&#x2F;&#x2F;let gen1234 = convolve(gen123, pX4); &#x2F;&#x2F; dist from 51 -&gt; 72
&#x2F;&#x2F;let gen12345 = convolve(gen1234, pX5); &#x2F;&#x2F; dist from 54 -&gt; 90
&#x2F;&#x2F;let gen123456 = convolve(gen12345, pX6); &#x2F;&#x2F; dist from 57 -&gt; 108
&#x2F;&#x2F;console.log(gen123456, gen123456.length)

&#x2F;&#x2F; automating class convolution
CONVOLVED_DISTS = {};
var gen_convolved_trace_for_class_dist = function(dists, klss) {
  var pX1 = TRUNCATED_DISTS[dists[0]];
  var pX2 = TRUNCATED_DISTS[dists[1]];
  var pX3 = TRUNCATED_DISTS[dists[2]];
  var pX4 = TRUNCATED_DISTS[dists[3]];
  var pX5 = TRUNCATED_DISTS[dists[4]];
  var pX6 = TRUNCATED_DISTS[dists[5]];
  var start = dists.reduce((acc, e) =&gt; acc+e, 0); &#x2F;&#x2F; start at sum of floors

  let gen12 = convolve(pX1, pX2);
  let gen123 = convolve(gen12, pX3);
  let gen1234 = convolve(gen123, pX4);
  let gen12345 = convolve(gen1234, pX5);
  let gen123456 = convolve(gen12345, pX6);
  CONVOLVED_DISTS[klss] = gen123456;

  return {
    x: gen123456.slice().map((x,i)=&gt; i + start),
    y: gen123456,
    name: klss,
    text: gen123456.map(x =&gt; &quot;expected once in &quot; + Intl.NumberFormat().format(Math.floor(1&#x2F;x)) + &quot; rolls&quot;),
    opacity: 0.8,
    type: &quot;scatter&quot;,
  };
}
var trace_paladin = gen_convolved_trace_for_class_dist([17,13,12,9,3,3], &#x27;paladin&#x27;);
var trace_ranger = gen_convolved_trace_for_class_dist([14,14,13,13,3,3], &#x27;ranger&#x27;);
var trace_fighter = gen_convolved_trace_for_class_dist([9,3,3,3,3,3], &#x27;fighter&#x27;);
trace_fighter.visible = &#x27;legendonly&#x27;; &#x2F;&#x2F; default off since we&#x27;ve kind of covered it
var data = [trace_paladin, trace_ranger, trace_fighter];
var layout = {
  title: &quot;Convolved Ability Distributions for Classes&quot;,
  xaxis: {title: &quot;Roll&quot;},
  yaxis: {title: &quot;Probability&quot;},
};
Plotly.newPlot(document.getElementById(&#x27;probhist3convolved&#x27;), data, layout, plotlycfg);
&lt;&#x2F;script&gt;
&lt;blockquote&gt;
&lt;p&gt;Notice the heavily tilted ranger&#x2F;paladin distributions whose lean is distinctively more to the right.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;The last thing that&#x27;s left now is to rectify $Z_c$ at &lt;code&gt;75&lt;&#x2F;code&gt; to get our &lt;strong&gt;true, final distributions&lt;&#x2F;strong&gt;:&lt;&#x2F;p&gt;
&lt;div id=&quot;probhist3convolvedtrunc&quot; style=&quot;width:600px;height:450px;&quot;&gt;&lt;&#x2F;div&gt;
&lt;script&gt;
var truncated_klass = function (klss) {
  let CONVOLVED = CONVOLVED_DISTS[klss];
  &#x2F;&#x2F; calculate probability up to cutoff point:
  let TRUNC_SUM = CONVOLVED.slice(-(108-75+1)).reduce((acc, e) =&gt; acc+e, 0);
  &#x2F;&#x2F; truncate and scale (rectify) the right side of the distribution:
  let TRUNC_CONV = CONVOLVED.slice(-(108-75+1)).map(x =&gt; x &#x2F; TRUNC_SUM);
  &#x2F;&#x2F; sanity sum (all 1)
  console.log(&quot;Sum of convolved truncated&quot;, klss, TRUNC_CONV.reduce((acc, e)=&gt;acc+e, 0));
  &#x2F;&#x2F;let expectation = TRUNC_CONV.map((x,i) =&gt; (i+t)*x).reduce((acc, e) =&gt; acc+e, 0);
  &#x2F;&#x2F;let variance = TRUNC_CONV.map((x,i) =&gt; Math.pow(i+t - expectation, 2)*x).reduce((acc, e) =&gt; acc+e, 0);
  &#x2F;&#x2F;console.log(&quot;Expectation, variance for conv truncated&quot;, klss, expectation, variance);
  return {
    x: TRUNC_CONV.map((x,i) =&gt; i +75),
    y: TRUNC_CONV,
    name: &#x27;true &#x27; + klss,
    text: TRUNC_CONV.map(x =&gt; &quot;expected once in &quot; + Intl.NumberFormat().format(Math.floor(1&#x2F;x)) + &quot; rolls&quot;),
    opacity: 0.8,
    type: &quot;scatter&quot;,
  };
};
let trace_trunconv_paladin = truncated_klass(&#x27;paladin&#x27;);
let trace_trunconv_fighter = truncated_klass(&#x27;fighter&#x27;);
let trace_trunconv_ranger = truncated_klass(&#x27;ranger&#x27;);
trace_trunconv_fighter.visible = &#x27;legendonly&#x27;;
var data = [trace_trunconv_paladin, trace_trunconv_fighter, trace_trunconv_ranger];
var layout = {
  title: &quot;True Roll Distributions for Classes&quot;,
  xaxis: {title: &quot;Roll&quot;},
  yaxis: {title: &quot;Probability&quot;},
};
Plotly.newPlot(document.getElementById(&#x27;probhist3convolvedtrunc&#x27;), data, layout, plotlycfg);
&lt;&#x2F;script&gt;
&lt;p&gt;These match the sampled data almost perfectly as can be seen in more detailed comparisons in the &lt;a href=&quot;#appendix&quot;&gt;appendix&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;As can be seen; &lt;code&gt;ranger&lt;&#x2F;code&gt; is faster at getting high numbers, particularly in the 90 -&amp;gt; 97 range, but if you want rolls &amp;gt;= 100, &lt;strong&gt;&lt;code&gt;paladin&lt;&#x2F;code&gt; rolls the highest&lt;&#x2F;strong&gt; at the fastest rate.&lt;&#x2F;p&gt;
&lt;p&gt;We end with the expected time to roll above a certain threshold where we use the most efficient class based on the number:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;108&lt;&#x2F;code&gt; paladin rolls once in &lt;code&gt;100 billion&lt;&#x2F;code&gt; ⇒ 210y&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;107&lt;&#x2F;code&gt; paladin rolls once in &lt;code&gt;5 billion&lt;&#x2F;code&gt; ⇒ 10y&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;106&lt;&#x2F;code&gt; paladin rolls once in &lt;code&gt;600 million&lt;&#x2F;code&gt; ⇒ 1y&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;105&lt;&#x2F;code&gt; paladin rolls once in &lt;code&gt;100 million&lt;&#x2F;code&gt; ⇒ 11w&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;104&lt;&#x2F;code&gt; paladin rolls once in &lt;code&gt;19 million&lt;&#x2F;code&gt; ⇒ 2w&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;103&lt;&#x2F;code&gt; paladin rolls once in &lt;code&gt;5 million&lt;&#x2F;code&gt; ⇒ 4d&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;102&lt;&#x2F;code&gt; paladin rolls once in &lt;code&gt;1.4 million&lt;&#x2F;code&gt; ⇒ 1d&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;101&lt;&#x2F;code&gt; paladin rolls once in &lt;code&gt;400k&lt;&#x2F;code&gt; ⇒ 7h&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;100&lt;&#x2F;code&gt; paladin&#x2F;ranger rolls once in &lt;code&gt;150k&lt;&#x2F;code&gt; ⇒ 3h&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;99&lt;&#x2F;code&gt; ranger rolls once in &lt;code&gt;57k&lt;&#x2F;code&gt; ⇒ 1h&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;98&lt;&#x2F;code&gt; ranger rolls once in &lt;code&gt;23k&lt;&#x2F;code&gt; ⇒ 25m&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;97&lt;&#x2F;code&gt; ranger rolls once in &lt;code&gt;10k&lt;&#x2F;code&gt; ⇒ 11m&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;96&lt;&#x2F;code&gt; ranger rolls once in &lt;code&gt;5k&lt;&#x2F;code&gt; ⇒ 5m&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;95&lt;&#x2F;code&gt; ranger rolls once in &lt;code&gt;2k&lt;&#x2F;code&gt; ⇒ 2m&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Hope you have enjoyed this random brain dump on probability. Don&#x27;t think I have ever been nerd sniped this hard before.. I just wanted to play a game and take a break.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;small&gt;&#x2F;me closes 20 tabs&lt;&#x2F;small&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;appendix&quot;&gt;Appendix&lt;&#x2F;h2&gt;
&lt;details&gt;&lt;summary style=&quot;cursor:pointer&quot;&gt;&lt;b&gt;1. Raw simulation data&lt;&#x2F;b&gt;&lt;&#x2F;summary&gt;
&lt;p&gt;
&lt;p&gt;10 hour paladin roll (&lt;code&gt;555558&lt;&#x2F;code&gt; rolls in &lt;code&gt;601m&lt;&#x2F;code&gt;)&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;yaml&quot; class=&quot;language-yaml z-code&quot;&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;75&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;50888&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;76&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;54911&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;77&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;57338&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;78&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;57442&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;79&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;55589&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;80&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;52357&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;81&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;47503&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;82&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;41339&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;83&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;34458&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;84&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;28599&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;85&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;21997&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;86&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;16722&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;87&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;12322&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;88&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;8697&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;89&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;5997&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;90&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;3774&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;91&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;2371&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;92&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;1489&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;93&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;822&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;94&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;465&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;95&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;251&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;96&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;129&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;97&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;56&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;98&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;24&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;99&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;12&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;100&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;4&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;101&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;1&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;102&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;1&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;10 hour fighter roll (&lt;code&gt;555560&lt;&#x2F;code&gt; rolls in &lt;code&gt;608m&lt;&#x2F;code&gt;)&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;yaml&quot; class=&quot;language-yaml z-code&quot;&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;75&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;137379&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;76&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;109198&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;77&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;85620&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;78&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;65004&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;79&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;48256&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;80&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;35041&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;81&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;24987&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;82&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;17545&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;83&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;11981&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;84&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;7883&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;85&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;5007&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;86&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;3139&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;87&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;1946&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;88&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;1138&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;89&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;670&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;90&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;368&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;91&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;199&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;92&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;103&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;93&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;49&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;94&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;26&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;95&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;12&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;96&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;6&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;97&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;2&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;98&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;1&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;9 hour ranger roll (&lt;code&gt;500054&lt;&#x2F;code&gt; rolls in &lt;code&gt;548m&lt;&#x2F;code&gt;)&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;yaml&quot; class=&quot;language-yaml z-code&quot;&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;75&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;32296&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;76&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;37790&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;77&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;43118&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;78&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;46609&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;79&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;48108&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;80&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;47589&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;81&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;45774&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;82&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;41963&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;83&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;36876&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;84&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;30973&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;85&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;25272&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;86&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;19904&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;87&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;14730&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;88&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;10430&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;89&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;7285&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;90&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;4667&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;91&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;2991&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;92&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;1696&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;93&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;986&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;94&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;529&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;95&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;254&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;96&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;121&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;97&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;56&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;98&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;26&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;99&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;10&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;100&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;1&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;p&gt;
&lt;&#x2F;details&gt;
&lt;details&gt;&lt;summary style=&quot;cursor:pointer&quot;&gt;&lt;b&gt;2. Tabulated values for 18 dice multinomial probability distribution&lt;&#x2F;b&gt;&lt;&#x2F;summary&gt;
&lt;p&gt;
&lt;p&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.wolframalpha.com&#x2F;input?i2d=true&amp;amp;i=+Divide%5B1%2CPower%5B6%2C18%5D%5DSum%5BPower%5B%5C%2840%29-1%5C%2841%29%2Ck%5D+*binomial%5C%2840%2918%5C%2844%29+k%5C%2841%29*binomial%5C%2840%2991-6k-1%5C%2844%29+17%5C%2841%29%2C%7Bk%2C0%2Cfloor%5C%2840%29Divide%5B%5C%2840%2991-18%5C%2841%29%2C6%5D%5C%2841%29%7D%5D&quot;&gt;Wolfram Alpha Query&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;yaml&quot; class=&quot;language-yaml z-code&quot;&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;18&lt;&#x2F;span&gt;  &lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;1&#x2F;101559956668416&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;19&lt;&#x2F;span&gt;  &lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;1&#x2F;5642219814912&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;20&lt;&#x2F;span&gt;  &lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;19&#x2F;11284439629824&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;21&lt;&#x2F;span&gt;  &lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;95&#x2F;8463329722368&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;22&lt;&#x2F;span&gt;  &lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;665&#x2F;11284439629824&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;23&lt;&#x2F;span&gt;  &lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;1463&#x2F;5642219814912&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;24&lt;&#x2F;span&gt;  &lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;33643&#x2F;33853318889472&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;25&lt;&#x2F;span&gt;  &lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;9605&#x2F;2821109907456&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;26&lt;&#x2F;span&gt;  &lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;119833&#x2F;11284439629824&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;27&lt;&#x2F;span&gt;  &lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;1552015&#x2F;50779978334208&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;28&lt;&#x2F;span&gt;  &lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;308465&#x2F;3761479876608&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;29&lt;&#x2F;span&gt;  &lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;97223&#x2F;470184984576&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;30&lt;&#x2F;span&gt;  &lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;2782169&#x2F;5642219814912&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;31&lt;&#x2F;span&gt;  &lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;1051229&#x2F;940369969152&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;32&lt;&#x2F;span&gt;  &lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;4550747&#x2F;1880739938304&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;33&lt;&#x2F;span&gt;  &lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;786505&#x2F;156728328192&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;34&lt;&#x2F;span&gt;  &lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;37624655&#x2F;3761479876608&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;35&lt;&#x2F;span&gt;  &lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;36131483&#x2F;1880739938304&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;36&lt;&#x2F;span&gt;  &lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;1206294965&#x2F;33853318889472&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;37&lt;&#x2F;span&gt;  &lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;20045551&#x2F;313456656384&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;38&lt;&#x2F;span&gt;  &lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;139474379&#x2F;1253826625536&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;39&lt;&#x2F;span&gt;  &lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;1059736685&#x2F;5642219814912&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;40&lt;&#x2F;span&gt;  &lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;128825225&#x2F;417942208512&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;41&lt;&#x2F;span&gt;  &lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;17143871&#x2F;34828517376&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;42&lt;&#x2F;span&gt;  &lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;8640663457&#x2F;11284439629824&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;43&lt;&#x2F;span&gt;  &lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;728073331&#x2F;626913312768&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;44&lt;&#x2F;span&gt;  &lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;2155134523&#x2F;1253826625536&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;45&lt;&#x2F;span&gt;  &lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;3942228889&#x2F;1586874322944&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;46&lt;&#x2F;span&gt;  &lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;4949217565&#x2F;1410554953728&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;47&lt;&#x2F;span&gt;  &lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;3417441745&#x2F;705277476864&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;48&lt;&#x2F;span&gt;  &lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;27703245169&#x2F;4231664861184&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;49&lt;&#x2F;span&gt;  &lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;3052981465&#x2F;352638738432&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;50&lt;&#x2F;span&gt;  &lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;126513483013&#x2F;11284439629824&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;51&lt;&#x2F;span&gt;  &lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;240741263447&#x2F;16926659444736&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;52&lt;&#x2F;span&gt;  &lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;199524184055&#x2F;11284439629824&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;53&lt;&#x2F;span&gt;  &lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;60788736553&#x2F;2821109907456&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;54&lt;&#x2F;span&gt;  &lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;2615090074301&#x2F;101559956668416&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;55&lt;&#x2F;span&gt;  &lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;56759069113&#x2F;1880739938304&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;56&lt;&#x2F;span&gt;  &lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;130521904423&#x2F;3761479876608&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;57&lt;&#x2F;span&gt;  &lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;110438453753&#x2F;2821109907456&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;58&lt;&#x2F;span&gt;  &lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;163027882055&#x2F;3761479876608&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;59&lt;&#x2F;span&gt;  &lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;88576807769&#x2F;1880739938304&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;60&lt;&#x2F;span&gt;  &lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;566880747559&#x2F;11284439629824&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;61&lt;&#x2F;span&gt;  &lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;24732579319&#x2F;470184984576&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;62&lt;&#x2F;span&gt;  &lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;101698030955&#x2F;1880739938304&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;63&lt;&#x2F;span&gt;  &lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;461867856157&#x2F;8463329722368&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;64&lt;&#x2F;span&gt;  &lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;101698030955&#x2F;1880739938304&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;65&lt;&#x2F;span&gt;  &lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;24732579319&#x2F;470184984576&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;66&lt;&#x2F;span&gt;  &lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;566880747559&#x2F;11284439629824&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;67&lt;&#x2F;span&gt;  &lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;88576807769&#x2F;1880739938304&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;68&lt;&#x2F;span&gt;  &lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;163027882055&#x2F;3761479876608&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;69&lt;&#x2F;span&gt;  &lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;110438453753&#x2F;2821109907456&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;70&lt;&#x2F;span&gt;  &lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;130521904423&#x2F;3761479876608&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;71&lt;&#x2F;span&gt;  &lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;56759069113&#x2F;1880739938304&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;72&lt;&#x2F;span&gt;  &lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;2615090074301&#x2F;101559956668416&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;73&lt;&#x2F;span&gt;  &lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;60788736553&#x2F;2821109907456&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;74&lt;&#x2F;span&gt;  &lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;199524184055&#x2F;11284439629824&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;75&lt;&#x2F;span&gt;  &lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;240741263447&#x2F;16926659444736&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;76&lt;&#x2F;span&gt;  &lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;126513483013&#x2F;11284439629824&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;77&lt;&#x2F;span&gt;  &lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;3052981465&#x2F;352638738432&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;78&lt;&#x2F;span&gt;  &lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;27703245169&#x2F;4231664861184&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;79&lt;&#x2F;span&gt;  &lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;3417441745&#x2F;705277476864&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;80&lt;&#x2F;span&gt;  &lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;4949217565&#x2F;1410554953728&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;81&lt;&#x2F;span&gt;  &lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;3942228889&#x2F;1586874322944&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;82&lt;&#x2F;span&gt;  &lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;2155134523&#x2F;1253826625536&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;83&lt;&#x2F;span&gt;  &lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;728073331&#x2F;626913312768&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;84&lt;&#x2F;span&gt;  &lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;8640663457&#x2F;11284439629824&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;85&lt;&#x2F;span&gt;  &lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;17143871&#x2F;34828517376&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;86&lt;&#x2F;span&gt;  &lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;128825225&#x2F;417942208512&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;87&lt;&#x2F;span&gt;  &lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;1059736685&#x2F;5642219814912&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;88&lt;&#x2F;span&gt;  &lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;139474379&#x2F;1253826625536&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;89&lt;&#x2F;span&gt;  &lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;20045551&#x2F;313456656384&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;90&lt;&#x2F;span&gt;  &lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;1206294965&#x2F;33853318889472&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;91&lt;&#x2F;span&gt;  &lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;36131483&#x2F;1880739938304&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;92&lt;&#x2F;span&gt;  &lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;37624655&#x2F;3761479876608&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;93&lt;&#x2F;span&gt;  &lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;786505&#x2F;156728328192&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;94&lt;&#x2F;span&gt;  &lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;4550747&#x2F;1880739938304&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;95&lt;&#x2F;span&gt;  &lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;1051229&#x2F;940369969152&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;96&lt;&#x2F;span&gt;  &lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;2782169&#x2F;5642219814912&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;97&lt;&#x2F;span&gt;  &lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;97223&#x2F;470184984576&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;98&lt;&#x2F;span&gt;  &lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;308465&#x2F;3761479876608&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;99&lt;&#x2F;span&gt;  &lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;1552015&#x2F;50779978334208&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;100&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;119833&#x2F;11284439629824&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;101&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;9605&#x2F;2821109907456&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;102&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;33643&#x2F;33853318889472&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;103&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;1463&#x2F;5642219814912&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;104&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;665&#x2F;11284439629824&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;105&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;95&#x2F;8463329722368&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;106&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;19&#x2F;11284439629824&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;107&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;1&#x2F;5642219814912&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;108&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;1&#x2F;101559956668416&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;p&gt;
&lt;&#x2F;details&gt;
&lt;details&gt;&lt;summary style=&quot;cursor:pointer&quot;&gt;&lt;b&gt;3. Tabulated values for 3 dice multinomial probability distribution&lt;&#x2F;b&gt;&lt;&#x2F;summary&gt;
&lt;p&gt;
&lt;p&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.wolframalpha.com&#x2F;input?i2d=true&amp;amp;i=+Divide%5B1%2CPower%5B6%2C3%5D%5DSum%5BPower%5B%5C%2840%29-1%5C%2841%29%2Ck%5D+*binomial%5C%2840%293%5C%2844%29+k%5C%2841%29*binomial%5C%2840%2910-6k-1%5C%2844%29+2%5C%2841%29%2C%7Bk%2C0%2Cfloor%5C%2840%29Divide%5B%5C%2840%2910-3%5C%2841%29%2C6%5D%5C%2841%29%7D%5D&quot;&gt;Wolfram Alpha Query&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;yaml&quot; class=&quot;language-yaml z-code&quot;&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;3&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;1&#x2F;216&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;4&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;1&#x2F;72&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;5&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;1&#x2F;36&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;6&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;5&#x2F;108&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;7&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;5&#x2F;72&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;8&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;7&#x2F;72&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;9&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;25&#x2F;216&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;10&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;1&#x2F;8&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;11&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;1&#x2F;8&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;12&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;25&#x2F;216&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;13&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;7&#x2F;72&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;14&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;5&#x2F;72&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;15&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;5&#x2F;108&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;16&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;1&#x2F;36&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;17&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;1&#x2F;72&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;18&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;1&#x2F;216&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;p&gt;
&lt;&#x2F;details&gt;
&lt;details&gt;&lt;summary style=&quot;cursor:pointer&quot;&gt;&lt;b&gt;4. Comparing observed vs. computed by class&lt;&#x2F;b&gt;&lt;&#x2F;summary&gt;
&lt;p&gt;
We compare with the precise $Z_{class}$ distributions worked out by convolution above.
&lt;div id=&quot;probhistappdxpala&quot; style=&quot;width:600px;height:450px;&quot;&gt;&lt;&#x2F;div&gt;
&lt;script&gt;
var data = [trace_trunconv_paladin, trace_obs_paladin];
var layout = {
  title: &quot;Theoretical vs Observed Distributions for Paladin&quot;,
  xaxis: {title: &quot;Roll&quot;},
  yaxis: {title: &quot;Probability&quot;},
};
Plotly.newPlot(document.getElementById(&#x27;probhistappdxpala&#x27;), data, layout, plotlycfg);
&lt;&#x2F;script&gt;
&lt;div id=&quot;probhistappdxrang&quot; style=&quot;width:600px;height:450px;&quot;&gt;&lt;&#x2F;div&gt;
&lt;script&gt;
var data = [trace_trunconv_ranger, trace_obs_ranger];
var layout = {
  title: &quot;Theoretical vs Observed Distributions for Ranger&quot;,
  xaxis: {title: &quot;Roll&quot;},
  yaxis: {title: &quot;Probability&quot;},
};
Plotly.newPlot(document.getElementById(&#x27;probhistappdxrang&#x27;), data, layout, plotlycfg);
&lt;&#x2F;script&gt;
&lt;p&gt;For fighter we have included the original uncorrected multinomial distribution for 18 dice before doing simulations. It was sufficiently close to the true distribution because flooring a single ability to &lt;code&gt;9&lt;&#x2F;code&gt; amounts to almost nothing in the right tail:&lt;&#x2F;p&gt;
&lt;div id=&quot;probhistappdxfig&quot; style=&quot;width:600px;height:450px;&quot;&gt;&lt;&#x2F;div&gt;
&lt;script&gt;
var data = [trace_trunconv_fighter, trace_obs_fighter, trace_single_trunc];
var layout = {
  title: &quot;Theoretical vs Observed Distributions for Fighter&quot;,
  xaxis: {title: &quot;Roll&quot;},
  yaxis: {title: &quot;Probability&quot;},
};
Plotly.newPlot(document.getElementById(&#x27;probhistappdxfig&#x27;), data, layout, plotlycfg);
&lt;&#x2F;script&gt;
&lt;p&gt;That said, the true distribution taking into account the single floored stat has a much better fit.&lt;&#x2F;p&gt;
&lt;&#x2F;p&gt;
&lt;&#x2F;details&gt;
&lt;details&gt;&lt;summary style=&quot;cursor:pointer&quot;&gt;&lt;b&gt;5. Normal approximations&lt;&#x2F;b&gt;&lt;&#x2F;summary&gt;
&lt;p&gt;
&lt;p&gt;An original idea here was to avoid doing all the faff with convolution above, and &quot;just&quot; approximate the distribution with some normal $\mathcal{N}(μ, σ)$.&lt;&#x2F;p&gt;
&lt;p&gt;After all, &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;mathworld.wolfram.com&#x2F;Dice.html&quot;&gt;this is suggested for high n&lt;&#x2F;a&gt;, and it will hold even for an unequal &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Central_limit_theorem&quot;&gt;sum of independent random variables with sufficient degrees of freedom&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;However, there are many &lt;strong&gt;complications&lt;&#x2F;strong&gt; with this approach:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;we only &lt;strong&gt;sample&lt;&#x2F;strong&gt; the &lt;strong&gt;doubly censored data&lt;&#x2F;strong&gt;, we don&#x27;t see the full normal distribution&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;distributions&lt;&#x2F;strong&gt; are heavily &lt;strong&gt;shifted&lt;&#x2F;strong&gt; (as can be seen with the true paladin distribution)&lt;&#x2F;li&gt;
&lt;li&gt;estimation of underlying normal distribution relies difficult for classes whose means precedes the truncation point&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;It does looks like there are tools to work with truncated or rectified normals:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;extension methods for &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Rectified_Gaussian_distribution#Extension_to_general_bounds&quot;&gt;rectified normal distributions&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Truncated_normal_distribution#One_sided_truncation_(of_lower_tail)&quot;&gt;formulas for dealing with truncation of a normal distributions&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;rdrr.io&#x2F;cran&#x2F;crch&#x2F;man&#x2F;cnorm.html&quot;&gt;cnorm r library&lt;&#x2F;a&gt; which comes with a &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;cran.r-project.org&#x2F;web&#x2F;packages&#x2F;cNORM&#x2F;cNORM.pdf&quot;&gt;giant pdf&lt;&#x2F;a&gt; as documentation to help remind you of why we need rustdoc&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;But this felt like the wrong path to descend, and the path was littered with arcana:&lt;&#x2F;p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-dnt=&quot;true&quot; data-theme=&quot;light&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;ah, yes, just a vector. &lt;a href=&quot;https:&#x2F;&#x2F;t.co&#x2F;RvkpS4h0DX&quot;&gt;pic.twitter.com&#x2F;RvkpS4h0DX&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;&amp;mdash; eirik ᐸ&amp;#39;⧖ᐳ (@sszynrae) &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;sszynrae&#x2F;status&#x2F;1512161877698174983?ref_src=twsrc%5Etfw&quot;&gt;April 7, 2022&lt;&#x2F;a&gt;&lt;&#x2F;blockquote&gt; &lt;script async src=&quot;https:&#x2F;&#x2F;platform.twitter.com&#x2F;widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;&#x2F;script&gt;
&lt;p&gt;That said. If anyone wants to fill in something here, or link to alternate methods, feel free to PR in something &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;probes&#x2F;blob&#x2F;main&#x2F;content&#x2F;post&#x2F;2022-04-12-baldurs-roll.md&quot;&gt;here&lt;&#x2F;a&gt; or write an &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;probes&#x2F;issues&quot;&gt;issue&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;p&gt;
&lt;&#x2F;details&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Prometheus Stack Review</title>
        <published>2022-01-11T00:00:00+00:00</published>
        <updated>2022-01-11T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://clux.dev/post/2022-01-11-prometheus-ecosystem/"/>
        <id>https://clux.dev/post/2022-01-11-prometheus-ecosystem/</id>
        
        <content type="html" xml:base="https://clux.dev/post/2022-01-11-prometheus-ecosystem/">&lt;p&gt;As part of my work life in the past year, a chunk of my day-to-day life has consisted of maintaining a &lt;code&gt;prometheus&lt;&#x2F;code&gt; installation on top of a sizable kubernetes cluster. My original feeling was &quot;this is not that bad with &lt;code&gt;kube-prometheus-stack&lt;&#x2F;code&gt;&quot;, but this sentiment has worsened somewhat with the realisation that more and more customizations and pieces were needed for large scale use. Half a year later (and 6+ charts deep), I thought I&#x27;d collect my thoughts on the ecosystem - from an operational perspective - with a rough architecture overview post.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;disclaimer&quot;&gt;Disclaimer&lt;&#x2F;h2&gt;
&lt;ol&gt;
&lt;li&gt;Information here is based on my own learnings. Some details &lt;strong&gt;might&lt;&#x2F;strong&gt; be wrong. Please submit an &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;probes&#x2F;issues&quot;&gt;issue&lt;&#x2F;a&gt; &#x2F; &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;probes&#x2F;edit&#x2F;master&#x2F;content&#x2F;post&#x2F;2022-01-11-prometheus-ecosystem.md&quot;&gt;fix&lt;&#x2F;a&gt; if you see anything glaring.&lt;&#x2F;li&gt;
&lt;li&gt;This post uses the classical open source &lt;code&gt;prometheus&lt;&#x2F;code&gt; setup with HA pairs and &lt;code&gt;thanos&lt;&#x2F;code&gt; on top. There are other promising setups such as agent mode with remote write.&lt;&#x2F;li&gt;
&lt;li&gt;We are following the most-standard &lt;code&gt;helm&lt;&#x2F;code&gt; approach and using charts directly (i.e. &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;prometheus-operator&#x2F;kube-prometheus&#x2F;&quot;&gt;avoiding direct use of jsonnet&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;You can debate the last point, but if you are optimizing for &lt;strong&gt;user-editability&lt;&#x2F;strong&gt; of the prometheus-stack, then &lt;code&gt;jsonnet&lt;&#x2F;code&gt; is kind of the opposite of that - particularly when the rest of the cloud is installed with &lt;code&gt;helm&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;architecture-overview&quot;&gt;Architecture Overview&lt;&#x2F;h2&gt;
&lt;p&gt;The TL;DR image. Open it up in a new tab, and cycle between if you want to read about specific components below.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;&#x2F;imgs&#x2F;prometheus&#x2F;ecosystem-miro.webp&quot;&gt;&lt;img src=&quot;&#x2F;imgs&#x2F;prometheus&#x2F;ecosystem-miro.webp&quot; alt=&quot;prometheus ecosystem architecture diagram&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Legend&lt;&#x2F;strong&gt;:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;user&lt;&#x2F;strong&gt; components and the user &lt;strong&gt;read path&lt;&#x2F;strong&gt; is &lt;i style=&quot;color:green&quot;&gt;green&lt;&#x2F;i&gt;&lt;&#x2F;li&gt;
&lt;li&gt;prometheus&#x2F;thanos write path is &lt;i style=&quot;color:red&quot;&gt;red&lt;&#x2F;i&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;helm charts&lt;&#x2F;code&gt; are denoted with &lt;strong&gt;thick dashed lines&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;li&gt;arrows flow &lt;strong&gt;from&lt;&#x2F;strong&gt; the instigator of the verb &lt;strong&gt;to&lt;&#x2F;strong&gt; the object acted upon&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;developer-interaction&quot;&gt;Developer Interaction&lt;&#x2F;h2&gt;
&lt;p&gt;A &lt;strong&gt;user&lt;&#x2F;strong&gt; &#x2F; developer on a kubernetes cluster with the prometheus stack installed can be expected to:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;develop applications with hpas&lt;&#x2F;strong&gt; and have them &lt;strong&gt;scraped&lt;&#x2F;strong&gt; by prometheus for metrics&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;create dashboards&lt;&#x2F;strong&gt; in grafana and save them as &lt;code&gt;ConfigMap&lt;&#x2F;code&gt; entries&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;create alerting rules&lt;&#x2F;strong&gt; to be triggered when metrics exceed thresholds (and maybe even tweak existing mixins)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;query metrics&lt;&#x2F;strong&gt; directly on grafana&#x27;s explore and thanos&#x27;s queryfrontend&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;..and the user should not have to know too much about the complicated spaghetti setup that this diagram might give a scary impression of.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;part-1-kube-prometheus-stack&quot;&gt;Part 1: kube-prometheus-stack&lt;&#x2F;h2&gt;
&lt;p&gt;The blue dashed line represents a set of components that are commonly deployed together on kubernetes due to their interdependence, and these are managed together in the &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;prometheus-community&#x2F;helm-charts&#x2F;tree&#x2F;main&#x2F;charts&#x2F;kube-prometheus-stack&quot;&gt;kube-prometheus-stack&lt;&#x2F;a&gt; helm chart.&lt;&#x2F;p&gt;
&lt;p&gt;It is a &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;prometheus-community&#x2F;helm-charts&#x2F;blob&#x2F;main&#x2F;charts&#x2F;kube-prometheus-stack&#x2F;values.yaml&quot;&gt;~3k LOC yaml values file&lt;&#x2F;a&gt; with a further 71k LOC of yaml in that chart folder alone (what could go wrong), and it configures the following components:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;prometheus&lt;&#x2F;li&gt;
&lt;li&gt;alertmanager&lt;&#x2F;li&gt;
&lt;li&gt;prometheus-operator&lt;&#x2F;li&gt;
&lt;li&gt;grafana&lt;&#x2F;li&gt;
&lt;li&gt;kube-state-metrics&lt;&#x2F;li&gt;
&lt;li&gt;node-exporter&lt;&#x2F;li&gt;
&lt;li&gt;kubernetes specific monitors&lt;&#x2F;li&gt;
&lt;li&gt;monitoring mixins&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;code&gt;24k&lt;&#x2F;code&gt; lines here are &lt;strong&gt;just&lt;&#x2F;strong&gt; the absolutely &lt;strong&gt;massive&lt;&#x2F;strong&gt; prometheus-operator crds (that are now &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;prometheus-community&#x2F;helm-charts&#x2F;issues&#x2F;1500&quot;&gt;too big to apply&lt;&#x2F;a&gt;), but it&#x27;s still an astonishing amount of yaml. Typically you&#x27;ll end up with between &lt;code&gt;20-40k&lt;&#x2F;code&gt; (excluding the crds) with a 100-500 line values file that you have to maintain &lt;small&gt;(you generally don&#x27;t want your values file to be too large as it becomes harder and harder to keep track of the breaking changes in the stringly typed helm chart apis)&lt;&#x2F;small&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;prometheus&quot;&gt;prometheus&lt;&#x2F;h3&gt;
&lt;p&gt;The octopus at the base of our architecture. Prometheus &lt;strong&gt;scrapes&lt;&#x2F;strong&gt; the metrics endpoints of virtually &lt;strong&gt;every&lt;&#x2F;strong&gt; application you have, &lt;strong&gt;stores&lt;&#x2F;strong&gt; the data &lt;strong&gt;locally&lt;&#x2F;strong&gt; in a low-retention (a week or two) time series database that you can query. &lt;small&gt;(The grey scrape arrows are illustrative, whereas they would usually hit everything, and also hit it from every prometheus pod in the statefulset for redundancy).&lt;&#x2F;small&gt;&lt;&#x2F;p&gt;
&lt;p&gt;It also continually computes configured &lt;strong&gt;evaluation rules&lt;&#x2F;strong&gt;, and raises alerts on configured metric thresholds.&lt;&#x2F;p&gt;
&lt;p&gt;Prometheus is &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;prometheus&#x2F;prometheus&#x2F;commit&#x2F;734d28b515026ca9f429eba0a7d09954bceb6387&quot;&gt;over 9 years old&lt;&#x2F;a&gt;, and has &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.cncf.io&#x2F;projects&#x2F;prometheus&#x2F;&quot;&gt;graduate maturity in cncf&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;In theory, you can run it directly, tell it to scrape this-and-this and be done, but that will lead to downtime quickly. You are going to need at least two replicas for failover, and these are going to need mounted volumes to store their data. A &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;kubernetes.io&#x2F;docs&#x2F;concepts&#x2F;workloads&#x2F;controllers&#x2F;statefulset&#x2F;&quot;&gt;&lt;code&gt;StatefulSet&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; in kubernetes.&lt;&#x2F;p&gt;
&lt;p&gt;For configuration; how to scrape metrics can be tweaked through a mounted &lt;code&gt;scrape_config&lt;&#x2F;code&gt; (a &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;prometheus.io&#x2F;docs&#x2F;prometheus&#x2F;latest&#x2F;configuration&#x2F;configuration&#x2F;#scrape_config&quot;&gt;pretty complicated yaml DSL&lt;&#x2F;a&gt; using &lt;code&gt;snake_case&lt;&#x2F;code&gt;). If you get the syntax wrong, prometheus hates your config and won&#x27;t boot. &lt;code&gt;promtool&lt;&#x2F;code&gt; can validate it.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;yaml&quot; class=&quot;language-yaml z-code&quot;&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;relabel_configs&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-block z-sequence z-item z-yaml&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;source_labels&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-flow-sequence z-yaml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-sequence z-begin z-yaml&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-unquoted z-plain z-in z-yaml&quot;&gt;__meta_kubernetes_service_annotation_prometheus_io_scrape&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-sequence z-end z-yaml&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;  &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;action&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;keep&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;  &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;regex&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-language z-boolean z-yaml&quot;&gt;true&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-block z-sequence z-item z-yaml&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;source_labels&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-flow-sequence z-yaml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-sequence z-begin z-yaml&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-unquoted z-plain z-in z-yaml&quot;&gt;__meta_kubernetes_service_annotation_prometheus_io_scheme&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-sequence z-end z-yaml&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;  &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;action&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;replace&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;  &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;target_label&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;__scheme__&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;  &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;regex&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;(https?)&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-block z-sequence z-item z-yaml&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;source_labels&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-flow-sequence z-yaml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-sequence z-begin z-yaml&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-unquoted z-plain z-in z-yaml&quot;&gt;__meta_kubernetes_service_annotation_prometheus_io_path&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-sequence z-end z-yaml&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;  &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;action&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;replace&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;  &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;target_label&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;__metrics_path__&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;  &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;regex&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;(.+)&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-block z-sequence z-item z-yaml&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;source_labels&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-flow-sequence z-yaml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-sequence z-begin z-yaml&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-unquoted z-plain z-in z-yaml&quot;&gt;__address__&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-sequence z-yaml&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-in z-yaml&quot;&gt;__meta_kubernetes_service_annotation_prometheus_io_port&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-sequence z-end z-yaml&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;  &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;action&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;replace&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;  &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;target_label&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;__address__&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;  &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;regex&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;([^:]+)(?::\d+)?;(\d+)&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;  &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;replacement&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;$1:$2&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-block z-sequence z-item z-yaml&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;action&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;labelmap&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;  &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;regex&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;__meta_kubernetes_service_label_(.+)&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;This config is pretty awful to write and debug manually, so imo, you should probably avoid writing it yourself (see the operator below).&lt;&#x2F;p&gt;
&lt;p&gt;Consider importing the &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;prometheus-community&#x2F;helm-charts&#x2F;blob&#x2F;970e1334813f90348b849f0a3850262a61f82797&#x2F;charts&#x2F;prometheus&#x2F;values.yaml#L1516-L1759&quot;&gt;semi-standardised &lt;code&gt;prometheus.io&#x2F;scrape&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; ones from the main prometheus chart if you wish (they slightly clash with the root chart), but those should be it. Scrape config also needs you to inline secrets, so not great from a security perspective.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;prometheus.io&#x2F;docs&#x2F;prometheus&#x2F;latest&#x2F;configuration&#x2F;alerting_rules&#x2F;&quot;&gt;Alerting and recording rules&lt;&#x2F;a&gt; are similarly configured and has same caveats (don&#x27;t write them manually).&lt;&#x2F;p&gt;
&lt;h3 id=&quot;alertmanager&quot;&gt;alertmanager&lt;&#x2F;h3&gt;
&lt;p&gt;Alerts (the data in the special &lt;code&gt;ALERTS{alertstate=&quot;firing&quot;}&lt;&#x2F;code&gt; metric) are sent from &lt;code&gt;prometheus&lt;&#x2F;code&gt; to &lt;code&gt;alertmanager&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;imgs&#x2F;prometheus&#x2F;eva-alert.webp&quot; alt=&quot;how alerts should look&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;At least, this is usually what happens. The communication &lt;strong&gt;to&lt;&#x2F;strong&gt; and &lt;strong&gt;within&lt;&#x2F;strong&gt; &lt;code&gt;alertmanager&lt;&#x2F;code&gt; is probably the most &lt;strong&gt;annoying&lt;&#x2F;strong&gt; parts of this entire architecture.&lt;&#x2F;p&gt;
&lt;p&gt;A problem that keeps biting me is how &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;prometheus&#x2F;prometheus&#x2F;issues&#x2F;7063&quot;&gt;prometheus can lose track of alertmanager ips, and fail to send alerts for hours&lt;&#x2F;a&gt;. There are many &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;prometheus&#x2F;prometheus&#x2F;search?q=%22error+sending+alert%22&amp;amp;type=issues&quot;&gt;issues related to this&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;When alerts do actually get passed to alertmanager, they go through a &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;prometheus&#x2F;alertmanager&#x2F;blob&#x2F;main&#x2F;doc&#x2F;arch.svg&quot;&gt;pretty complicated internal architecture&lt;&#x2F;a&gt;, before ultimately being sent to &lt;strong&gt;configured receivers&lt;&#x2F;strong&gt;. Alertmanager contains &lt;strong&gt;deduplication&lt;&#x2F;strong&gt; mechanisms, and a &lt;strong&gt;custom&lt;&#x2F;strong&gt; UDP &amp;amp; TCP &lt;strong&gt;gossip protocol&lt;&#x2F;strong&gt; (that keeps breaking in HA setups - causing &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;prometheus&#x2F;alertmanager&#x2F;issues?q=is%3Aissue+duplicate+alerts&quot;&gt;duplicate alerts&lt;&#x2F;a&gt;).&lt;&#x2F;p&gt;
&lt;p&gt;The built-in receivers for slack&#x2F;pagerduty seem to handle deduplicating alerts themselves, so if you can get by without HA and don&#x27;t need a custom webhook, you might be ok.&lt;&#x2F;p&gt;
&lt;p&gt;Still, &lt;strong&gt;your mileage will definitely vary&lt;&#x2F;strong&gt; with this component.&lt;&#x2F;p&gt;
&lt;p&gt;Alertmanager is &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;prometheus&#x2F;alertmanager&#x2F;commit&#x2F;f86966a0e75dfa52f068d3a085753518bd4aea74&quot;&gt;almost 9 years old&lt;&#x2F;a&gt;, has &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;prometheus&#x2F;alertmanager&#x2F;blob&#x2F;main&#x2F;MAINTAINERS.md&quot;&gt;2 maintainers&lt;&#x2F;a&gt;, and is a sub-project of the prometheus org.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;prometheus-operator&quot;&gt;prometheus-operator&lt;&#x2F;h3&gt;
&lt;p&gt;A system that sits on top of prometheus, and extends the configuration with the large &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;prometheus-operator&#x2F;prometheus-operator&#x2F;tree&#x2F;main&#x2F;example&#x2F;prometheus-operator-crd&quot;&gt;&lt;code&gt;monitoring.coreos.com&lt;&#x2F;code&gt; CRDs&lt;&#x2F;a&gt;. This operator watches these CRDs, validates them via &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;kubernetes.io&#x2F;docs&#x2F;reference&#x2F;access-authn-authz&#x2F;admission-controllers&#x2F;&quot;&gt;admission&lt;&#x2F;a&gt;, converts them to a prometheus compatible format, and injects them into the running prometheus via a &lt;code&gt;config-reloader&lt;&#x2F;code&gt; sidecar on the prometheus statefulset. The most commonly used configuration CRDs are &lt;code&gt;PrometheusRule&lt;&#x2F;code&gt; and &lt;code&gt;ServiceMonitor&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;This setup avoids you taking down prometheus when you&#x2F;users write new or invalid configuration or alerts. It also provides a mechanism for referencing kubernetes &lt;code&gt;Secret&lt;&#x2F;code&gt; objects (avoiding encryption needs on the base configuration), and it is generally considered the standard abstraction for configuring prometheus scraping.&lt;&#x2F;p&gt;
&lt;p&gt;A minor, but debatable choice they have made, is to re-map the &lt;code&gt;scrape_config&lt;&#x2F;code&gt; keys to &lt;code&gt;camelCase&lt;&#x2F;code&gt; forcing you have to write half of your &lt;code&gt;ServiceMonitor&lt;&#x2F;code&gt; in &lt;code&gt;camelCase&lt;&#x2F;code&gt; (the keys), and the other half in &lt;code&gt;snake_case&lt;&#x2F;code&gt; (the values):&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;yaml&quot; class=&quot;language-yaml z-code&quot;&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;    &lt;span class=&quot;z-punctuation z-definition z-block z-sequence z-item z-yaml&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;relabelings&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;      &lt;span class=&quot;z-punctuation z-definition z-block z-sequence z-item z-yaml&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;action&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;replace&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;        &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;sourceLabels&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;         &lt;span class=&quot;z-punctuation z-definition z-block z-sequence z-item z-yaml&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;__meta_kubernetes_namespace&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;         &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;targetLabel&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;kubernetes_namespace&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The operator &lt;strong&gt;configures&lt;&#x2F;strong&gt; &lt;code&gt;prometheus&lt;&#x2F;code&gt;, &lt;code&gt;alertmanager&lt;&#x2F;code&gt;, and optionally also thanos &lt;code&gt;ruler&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;It is over 5 years old and considered &lt;code&gt;beta&lt;&#x2F;code&gt;. It&#x27;s &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;prometheus-operator&#x2F;prometheus-operator&#x2F;blob&#x2F;main&#x2F;MAINTAINERS.md&quot;&gt;maintained by&lt;&#x2F;a&gt; people who are mostly disjoint from the the &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;prometheus&#x2F;prometheus&#x2F;blob&#x2F;main&#x2F;MAINTAINERS.md&quot;&gt;prometheus maintainers&lt;&#x2F;a&gt;. I.e. while this is not a first-class supported thing from prometheus, everyone uses it - and it is &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;prometheus-operator.dev&#x2F;docs&#x2F;prologue&#x2F;introduction&#x2F;&quot;&gt;well-documented&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;grafana&quot;&gt;grafana&lt;&#x2F;h3&gt;
&lt;p&gt;While prometheus does have sufficient querying functionality built in, it does not let you save these queries other than by a long-ass url, so realistically, users will want Grafana for dashboards and cool panel customization.&lt;&#x2F;p&gt;
&lt;p&gt;The key strength of Grafana lies in how it becomes the one-stop shop for &lt;strong&gt;querying &amp;amp; visualising anything&lt;&#x2F;strong&gt; when you buy into the ecosystem, and the huge amount of data sources they have available:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;grafana.com&#x2F;docs&#x2F;grafana&#x2F;latest&#x2F;datasources&#x2F;prometheus&#x2F;#prometheus-api&quot;&gt;anything prometheus-like&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;grafana.com&#x2F;grafana&#x2F;plugins&#x2F;cloudwatch&#x2F;&quot;&gt;cloudwatch&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;grafana.com&#x2F;blog&#x2F;2021&#x2F;08&#x2F;30&#x2F;introducing-the-honeycomb-plugin-for-grafana&#x2F;&quot;&gt;honeycomb&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;grafana.com&#x2F;docs&#x2F;tempo&#x2F;latest&#x2F;getting-started&#x2F;tempo-in-grafana&#x2F;&quot;&gt;tempo&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;grafana.com&#x2F;docs&#x2F;loki&#x2F;latest&#x2F;getting-started&#x2F;grafana&#x2F;&quot;&gt;loki&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;grafana.com&#x2F;blog&#x2F;2021&#x2F;03&#x2F;04&#x2F;why-were-partnering-with-elastic-to-build-the-elasticsearch-plugin-for-grafana&#x2F;&quot;&gt;elastic&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;grafana.com&#x2F;blog&#x2F;2021&#x2F;12&#x2F;16&#x2F;introducing-the-sentry-data-source-plugin-for-grafana&#x2F;&quot;&gt;sentry&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;..plus tons more that you are less likely to run into (&lt;code&gt;cloudwatch&lt;&#x2F;code&gt; shown as one common case). Even if you only use if it against &lt;code&gt;prometheus&lt;&#x2F;code&gt;, it&#x27;s still a &lt;strong&gt;generally painless&lt;&#x2F;strong&gt; component to install with tons of &lt;strong&gt;benefits&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Grafana is packaged as a small-ish &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;grafana&#x2F;helm-charts&#x2F;tree&#x2F;main&#x2F;charts&#x2F;grafana&quot;&gt;grafana-maintained helm chart&lt;&#x2F;a&gt;, which is &lt;strong&gt;pinned&lt;&#x2F;strong&gt; as a &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;prometheus-community&#x2F;helm-charts&#x2F;blob&#x2F;9401be121c65e6e3332670a49c5ad6ba2aeae9c3&#x2F;charts&#x2F;kube-prometheus-stack&#x2F;Chart.yaml#L45-L48&quot;&gt;subchart under kube-prometheus-stack&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The chart contains some nice ways of making &lt;strong&gt;dashboard provisioning&lt;&#x2F;strong&gt; automatic (dashboards as configmaps), but this comes with its own &lt;strong&gt;pain points&lt;&#x2F;strong&gt;:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;need to verify dashboard json out-of-band (validity + uid presence)&lt;&#x2F;li&gt;
&lt;li&gt;dashboards incur k8s size limits - 1MB on ConfigMap, 256kB applied annotation&lt;&#x2F;li&gt;
&lt;li&gt;HA setups could split brain dashboards with &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;grafana&#x2F;grafana&#x2F;issues&#x2F;37679&quot;&gt;partial saves&lt;&#x2F;a&gt; (seems fixed now)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;grafana&#x2F;grafana&#x2F;issues&#x2F;36328&quot;&gt;provisioned dashboards are incompatible with built-in alerts&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;future &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;grafana&#x2F;grafana&#x2F;issues&#x2F;31038&quot;&gt;dashboard-as-code direction is very undecided&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Regardless, the diagram shows how the user flow would be for this, and how it ends up being picked up by a sidecar in the grafana statefulset.&lt;&#x2F;p&gt;
&lt;details&gt;&lt;summary style=&quot;cursor:pointer;color:#0af&quot;&gt;&lt;b&gt;Addendum: Governance &amp; Grafana Labs Sidenotes&lt;&#x2F;b&gt;&lt;&#x2F;summary&gt;
&lt;p&gt;Grafana has a more &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;grafana&#x2F;grafana&#x2F;blob&#x2F;main&#x2F;GOVERNANCE.md&quot;&gt;company driven governance model&lt;&#x2F;a&gt; - it&#x27;s maintained almost exclusively by people employed by Grafana Labs - and the company is clearly optimizing for their own cloud offering of a parallel subset of this ecosystem; &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;grafana.com&#x2F;products&#x2F;cloud&#x2F;&quot;&gt;Grafana Cloud&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;This obvious &lt;em&gt;conflict of interest&lt;&#x2F;em&gt; does pollute the purity of ecosystem somewhat, but at least they have &lt;strong&gt;financing&lt;&#x2F;strong&gt; to move at the great pace they are moving. Some examples of their recent efforts:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;grafana&#x2F;loki&quot;&gt;loki&lt;&#x2F;a&gt; - a serious elastic contender for logs that integrates with grafana&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;grafana&#x2F;tempo&quot;&gt;tempo&lt;&#x2F;a&gt; - a super clean tracing backend that integrates with grafana&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;grafana&#x2F;helm-charts&#x2F;tree&#x2F;main&#x2F;charts&quot;&gt;well maintained helm charts for grafana&#x2F;tempo&#x2F;loki&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;grafana.com&#x2F;blog&#x2F;2021&#x2F;11&#x2F;16&#x2F;why-we-created-a-prometheus-agent-mode-from-the-grafana-agent&#x2F;&quot;&gt;prometheus agent mode&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Of course, there is the expectation that open source functionality not related to grafana cloud &lt;strong&gt;might&lt;&#x2F;strong&gt; be receiving &lt;strong&gt;less attention&lt;&#x2F;strong&gt;, but I can&#x27;t really blame them for pursuing a sensible monetisation strategy.&lt;&#x2F;p&gt;
&lt;p&gt;I do hope &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;grafana.com&#x2F;blog&#x2F;2021&#x2F;11&#x2F;09&#x2F;announcing-grafana-oncall&#x2F;&quot;&gt;Grafana OnCall&lt;&#x2F;a&gt; manages to get something contributed upstream (outside the grafana monolith) so we can have a better alternative to alertmanager (as alertmanager has lots of issues and can only alert on prometheus data sources).&lt;&#x2F;p&gt;
&lt;&#x2F;details&gt;
&lt;h3 id=&quot;monitoring-mixins&quot;&gt;Monitoring Mixins&lt;&#x2F;h3&gt;
&lt;p&gt;A default grafana&#x2F;prometheus-operator installation is not going to be very helpful without some dashboards that tell you about the state of your system(s).&lt;&#x2F;p&gt;
&lt;p&gt;Common patterns for alerts&#x2F;dashboards&#x2F;recording rules are encapsulated in a collection of mixins that are browsable on &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;monitoring.mixins.dev&#x2F;&quot;&gt;monitoring.mixins.dev&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;monitoring.mixins.dev&#x2F;kubernetes&#x2F;&quot;&gt;&lt;code&gt;kubernetes-mixin&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; stands out in particular, providing excellent, &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;grafana.com&#x2F;docs&#x2F;grafana&#x2F;latest&#x2F;best-practices&#x2F;dashboard-management-maturity-levels&#x2F;&quot;&gt;high maturity&lt;&#x2F;a&gt;, drill-down-linked dashboards that are going to be vital for a large percentage of kubernetes related incidents.&lt;&#x2F;p&gt;
&lt;p&gt;In general, these provide a great starting point for most clusters (despite &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;monitoring.mixins.dev&#x2F;kubernetes&#x2F;#kubernetes-system-kubelet&quot;&gt;sometimes&lt;&#x2F;a&gt; being &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kubernetes-monitoring&#x2F;kubernetes-mixin&#x2F;search?q=KubeletTooManyPods&amp;amp;type=issues&quot;&gt;overly noisy&lt;&#x2F;a&gt;). You likely have to re-configure some &lt;strong&gt;thresholds&lt;&#x2F;strong&gt;, and remove some of these alerts as you see fit you your production cluster, but the defaults are generally intelligent.&lt;&#x2F;p&gt;
&lt;p&gt;Unfortunately, there are &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;grafana.com&#x2F;blog&#x2F;2021&#x2F;01&#x2F;14&#x2F;how-prometheus-monitoring-mixins-can-make-effective-observability-strategies-accessible-to-all&#x2F;#the-challenges-with-mixins&quot;&gt;many operational challenges with these mixins&lt;&#x2F;a&gt;. &lt;code&gt;helm&lt;&#x2F;code&gt; is certainly not best suited to take full advantage of them as not every option is bubbled up to the charts, and these values flow through so many layers it&#x27;s &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;prometheus-operator&#x2F;kube-prometheus&#x2F;issues&#x2F;1333&quot;&gt;challenging&lt;&#x2F;a&gt; to find where they truly originate, e.g. &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;prometheus-community&#x2F;helm-charts&#x2F;blob&#x2F;main&#x2F;charts&#x2F;kube-prometheus-stack&#x2F;templates&#x2F;prometheus&#x2F;rules-1.14&#x2F;prometheus.yaml&quot;&gt;kube-prometheus-stack&lt;&#x2F;a&gt; &amp;lt;- &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;prometheus-operator&#x2F;kube-prometheus&#x2F;blob&#x2F;main&#x2F;manifests&#x2F;prometheusOperator-prometheusRule.yaml&quot;&gt;kube-prometheus&lt;&#x2F;a&gt; &amp;lt;- &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;prometheus-operator&#x2F;prometheus-operator&#x2F;blob&#x2F;main&#x2F;example&#x2F;mixin&#x2F;alerts.yaml&quot;&gt;prometheus-operator&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;This often caused me not wanting to bother with fixing it in the first place, which of course leads to the mixins not being as good as they could be. AFAIKT, your options are:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;forking&lt;&#x2F;strong&gt; the mixins you care about and &lt;strong&gt;opting out&lt;&#x2F;strong&gt; of automatic upstream fixes&lt;&#x2F;li&gt;
&lt;li&gt;post-template modifications of minor details with hacky solutions like sed&#x2F;jq&lt;&#x2F;li&gt;
&lt;li&gt;managing mixins &lt;strong&gt;out-of-band&lt;&#x2F;strong&gt;, aligning implicit default values with the charts, and customizing with jsonnet&lt;&#x2F;li&gt;
&lt;li&gt;going through the drudgery of propagating mixin fixes through several repos&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;While I advocate for trying to propagate fixes when motivation strikes, &lt;strong&gt;forking mixins&lt;&#x2F;strong&gt; at least makes your yaml &lt;strong&gt;readable&lt;&#x2F;strong&gt; in your gitops repo, so it&#x27;s actually a decent option - particularly given how &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;prometheus-operator.dev&#x2F;docs&#x2F;developing-prometheus-rules-and-grafana-dashboards&#x2F;#adjustment&quot;&gt;awful&lt;&#x2F;a&gt; the other solutions are.&lt;&#x2F;p&gt;
&lt;p&gt;Regardless, it&#x27;s another useful, but imperfect component that you are going to need.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;metric-sources&quot;&gt;Metric Sources&lt;&#x2F;h3&gt;
&lt;p&gt;We move on to the components that create most of your data in prometheus.&lt;&#x2F;p&gt;
&lt;p&gt;Using the mixins (or equivalent dashboards) effectively &lt;strong&gt;requires&lt;&#x2F;strong&gt; you having &lt;strong&gt;standard kubernetes metric sources&lt;&#x2F;strong&gt; configured (otherwise you will have missing values in all your mixin dashboards).&lt;&#x2F;p&gt;
&lt;p&gt;We will briefly run through these metric sources, focusing first on the ones that appear in the &lt;code&gt;kube-prometheus-stack&lt;&#x2F;code&gt;. In general, these are pretty-well behaved and low-maintenance, so there won&#x27;t be too much to say about these.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;node-exporter&quot;&gt;node-exporter&lt;&#x2F;h4&gt;
&lt;p&gt;The main external metric source. A &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;prometheus&#x2F;node_exporter&quot;&gt;prometheus org maintained&lt;&#x2F;a&gt; &lt;code&gt;DaemonSet&lt;&#x2F;code&gt; component that scrapes system level &lt;strong&gt;unix metrics&lt;&#x2F;strong&gt;. It mounts &lt;code&gt;&#x2F;&lt;&#x2F;code&gt;, &lt;code&gt;&#x2F;sys&lt;&#x2F;code&gt;, and &lt;code&gt;&#x2F;proc&lt;&#x2F;code&gt; - with &lt;code&gt;hostPID&lt;&#x2F;code&gt; and &lt;code&gt;hostNetwork&lt;&#x2F;code&gt; enabled - to grab extensive information about each node.&lt;&#x2F;p&gt;
&lt;p&gt;It&#x27;s a &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;prometheus-community&#x2F;helm-charts&#x2F;blob&#x2F;9401be121c65e6e3332670a49c5ad6ba2aeae9c3&#x2F;charts&#x2F;kube-prometheus-stack&#x2F;Chart.yaml#L41-L44&quot;&gt;sub-chart of kube-prometheus-stack&lt;&#x2F;a&gt;, and it has a slew of &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;prometheus&#x2F;node_exporter#collectors&quot;&gt;configurable exporters&lt;&#x2F;a&gt;, which can be &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;prometheus-community&#x2F;helm-charts&#x2F;blob&#x2F;9401be121c65e6e3332670a49c5ad6ba2aeae9c3&#x2F;charts&#x2F;prometheus-node-exporter&#x2F;values.yaml#L150-L152&quot;&gt;configured from the chart&lt;&#x2F;a&gt;, but the &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;prometheus-community&#x2F;helm-charts&#x2F;blob&#x2F;9401be121c65e6e3332670a49c5ad6ba2aeae9c3&#x2F;charts&#x2F;kube-prometheus-stack&#x2F;values.yaml#L1358-L1360&quot;&gt;defaults from kube-prometheus-stack&lt;&#x2F;a&gt; are likely good enough.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;kube-state-metrics&quot;&gt;kube-state-metrics&lt;&#x2F;h4&gt;
&lt;p&gt;The second stand-alone metric exporter for kubernetes. Maintained by kubernetes itself; &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kubernetes&#x2F;kube-state-metrics&quot;&gt;kube-state-metrics&lt;&#x2F;a&gt; is a &lt;strong&gt;smaller deployment&lt;&#x2F;strong&gt; that generates metrics from what it sees the state of objects are from the apiserver. It has &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kubernetes&#x2F;kube-state-metrics&#x2F;blob&#x2F;master&#x2F;docs&#x2F;design&#x2F;metrics-store-performance-optimization.md#proposal&quot;&gt;client-go reflectors&lt;&#x2F;a&gt; and uses the results of their long watches to populate metrics.&lt;&#x2F;p&gt;
&lt;p&gt;It&#x27;s a conceptually pretty simple piece; an &lt;strong&gt;api -&amp;gt; metrics transformer&lt;&#x2F;strong&gt;, but kubernetes has a lot of apis, so definitely not something you want to write yourself.&lt;&#x2F;p&gt;
&lt;p&gt;In example terms; this component provides the &lt;strong&gt;base data&lt;&#x2F;strong&gt; for what you need to &lt;strong&gt;answer&lt;&#x2F;strong&gt; the questions like whether your:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&quot;&lt;code&gt;Pod&lt;&#x2F;code&gt; has been in an unhealthy state for &lt;code&gt;&amp;gt;N&lt;&#x2F;code&gt; minutes&quot;&lt;&#x2F;li&gt;
&lt;li&gt;&quot;&lt;code&gt;Deployment&lt;&#x2F;code&gt; has failed to complete its last rollout in &lt;code&gt;N&lt;&#x2F;code&gt; minutes&quot;&lt;&#x2F;li&gt;
&lt;li&gt;&quot;&lt;code&gt;HorizontalPodAutoscaler&lt;&#x2F;code&gt; has been maxed out for &lt;code&gt;&amp;gt;N&lt;&#x2F;code&gt; minutes&quot;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;..stuff that you can figure out with &lt;code&gt;kubectl get -oyaml&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;KSM is deployed via an &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;prometheus-community&#x2F;helm-charts&#x2F;tree&#x2F;main&#x2F;charts&#x2F;kube-state-metrics&quot;&gt;in-tree subchart&lt;&#x2F;a&gt; under &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;prometheus-community&#x2F;helm-charts&#x2F;blob&#x2F;9401be121c65e6e3332670a49c5ad6ba2aeae9c3&#x2F;charts&#x2F;kube-prometheus-stack&#x2F;Chart.yaml#L37-L40&quot;&gt;kube-prometheus-stack&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;You can configure what apis it provides metrics for &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;prometheus-community&#x2F;helm-charts&#x2F;blob&#x2F;9401be121c65e6e3332670a49c5ad6ba2aeae9c3&#x2F;charts&#x2F;kube-state-metrics&#x2F;values.yaml#L155-L183&quot;&gt;under collectors&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;details&gt;&lt;summary style=&quot;cursor:pointer;color:#0af&quot;&gt;&lt;b&gt;Addendum: Label configuration caveat&lt;&#x2F;b&gt;&lt;&#x2F;summary&gt;
&lt;p&gt;The only issue I&#x27;ve run into with KSM is that the metric labels are often insufficient for integration with existing standard alerting setups (problem being that the generic alerts from &lt;code&gt;kubernetes-mixin&lt;&#x2F;code&gt; will fire, but it&#x27;s hard to tell by the name of the deployment alone who should get that alert). This can be rectified with the &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;prometheus-community&#x2F;helm-charts&#x2F;blob&#x2F;9401be121c65e6e3332670a49c5ad6ba2aeae9c3&#x2F;charts&#x2F;kube-state-metrics&#x2F;values.yaml#L135-L142&quot;&gt;&lt;code&gt;metricLabelsAllowlist&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; in the chart, e.g.:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;yaml&quot; class=&quot;language-yaml z-code&quot;&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;    &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;metricLabelsAllowlist&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;    &lt;span class=&quot;z-punctuation z-definition z-block z-sequence z-item z-yaml&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-yaml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-yaml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;deployments=[app.kubernetes.io&#x2F;name,app]&lt;span class=&quot;z-punctuation z-definition z-string z-end z-yaml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;    &lt;span class=&quot;z-punctuation z-definition z-block z-sequence z-item z-yaml&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-yaml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-yaml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;jobs=[app.kubernetes.io&#x2F;name,app]&lt;span class=&quot;z-punctuation z-definition z-string z-end z-yaml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;    &lt;span class=&quot;z-punctuation z-definition z-block z-sequence z-item z-yaml&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-yaml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-yaml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;horizontalpodautoscalers=[app.kubernetes.io&#x2F;name,app]&lt;span class=&quot;z-punctuation z-definition z-string z-end z-yaml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;to inject more labels (here &lt;code&gt;app&lt;&#x2F;code&gt;) from the root object onto metrics. Annoyingly, these only get injected into an informational &lt;code&gt;_labels&lt;&#x2F;code&gt; metric, so you&#x27;d have to extend &lt;code&gt;kubernetes-mixin&lt;&#x2F;code&gt; with big joins to get these values exposed in the alert:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;diff&quot; class=&quot;language-diff z-code&quot;&gt;&lt;code class=&quot;language-diff&quot; data-lang=&quot;diff&quot;&gt;&lt;span class=&quot;z-source z-diff&quot;&gt;diff --git development&#x2F;rules-kubernetes-apps.yaml development&#x2F;rules-kubernetes-apps.yaml
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-diff&quot;&gt;index e36496e..988d6a6 100644
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-diff&quot;&gt;&lt;span class=&quot;z-meta z-diff z-header z-from-file&quot;&gt;&lt;span class=&quot;z-meta z-header z-from-file z-diff&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-from-file z-diff&quot;&gt;---&lt;&#x2F;span&gt; development&#x2F;rules-kubernetes-apps.yaml
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-diff&quot;&gt;&lt;span class=&quot;z-meta z-diff z-header z-to-file&quot;&gt;&lt;span class=&quot;z-meta z-header z-to-file z-diff&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-to-file z-diff&quot;&gt;+++&lt;&#x2F;span&gt; development&#x2F;rules-kubernetes-apps.yaml
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-diff&quot;&gt;&lt;span class=&quot;z-meta z-diff z-range z-unified&quot;&gt;&lt;span class=&quot;z-meta z-range z-unified z-diff&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-range z-diff&quot;&gt;@@&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-toc-list z-line-number z-diff&quot;&gt;-220,7 +220,9&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-definition z-range z-diff&quot;&gt;@@&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-section z-diff&quot;&gt;spec:&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-diff&quot;&gt;&lt;span class=&quot;z-markup z-deleted z-diff&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-deleted z-diff&quot;&gt;-&lt;&#x2F;span&gt;      expr: kube_job_spec_completions{job=&amp;quot;kube-state-metrics&amp;quot;, namespace=~&amp;quot;.*&amp;quot;} - kube_job_status_succeeded{job=&amp;quot;kube-state-metrics&amp;quot;, namespace=~&amp;quot;.*&amp;quot;}  &amp;gt; 0
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-diff&quot;&gt;&lt;span class=&quot;z-markup z-inserted z-diff&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-inserted z-diff&quot;&gt;+&lt;&#x2F;span&gt;      expr: |-
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-diff&quot;&gt;&lt;span class=&quot;z-markup z-inserted z-diff&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-inserted z-diff&quot;&gt;+&lt;&#x2F;span&gt;        (kube_job_spec_completions{job=&amp;quot;kube-state-metrics&amp;quot;, namespace=~&amp;quot;.*&amp;quot;} -
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-diff&quot;&gt;&lt;span class=&quot;z-markup z-inserted z-diff&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-inserted z-diff&quot;&gt;+&lt;&#x2F;span&gt;        kube_job_status_succeeded{job=&amp;quot;kube-state-metrics&amp;quot;, namespace=~&amp;quot;.*&amp;quot;}  &amp;gt; 0) *
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-diff&quot;&gt;&lt;span class=&quot;z-markup z-inserted z-diff&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-inserted z-diff&quot;&gt;+&lt;&#x2F;span&gt;        on(job_name) group_left(label_app_kubernetes_io_name)
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-diff&quot;&gt;&lt;span class=&quot;z-markup z-inserted z-diff&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-inserted z-diff&quot;&gt;+&lt;&#x2F;span&gt;        sum by (namespace, job_name) (kube_job_labels{job=&amp;quot;kube-state-metrics&amp;quot;, label_app_kubernetes_io_name=~&amp;quot;.+&amp;quot;})
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;details&gt;
&lt;h4 id=&quot;kubernetes-internal-sources&quot;&gt;kubernetes internal sources&lt;&#x2F;h4&gt;
&lt;p&gt;For poking at the internals of kubernetes, you can enable configurable scrapers for:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;kubelet&lt;&#x2F;li&gt;
&lt;li&gt;kube-apiserver&lt;&#x2F;li&gt;
&lt;li&gt;kube-controller-manager&lt;&#x2F;li&gt;
&lt;li&gt;kube-scheduler&lt;&#x2F;li&gt;
&lt;li&gt;kube-proxy&lt;&#x2F;li&gt;
&lt;li&gt;coreDns or kubeDns&lt;&#x2F;li&gt;
&lt;li&gt;etcd&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;There is some sparse documentation for these under &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;kubernetes.io&#x2F;docs&#x2F;concepts&#x2F;cluster-administration&#x2F;system-metrics&#x2F;&quot;&gt;kubernetes&#x2F;cluster-admin&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;These are a little more optional, but you need the &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kubernetes&#x2F;kubernetes&#x2F;tree&#x2F;ea0764452222146c47ec826977f49d7001b0ea8c&#x2F;pkg&#x2F;kubelet&#x2F;metrics&#x2F;collectors&quot;&gt;kubelet metrics&lt;&#x2F;a&gt; (via &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;google&#x2F;cadvisor&quot;&gt;cadvisor&lt;&#x2F;a&gt;), for the main kubernetes mixins, so make sure those are enabled.&lt;&#x2F;p&gt;
&lt;p&gt;The more superfluous ones that come with the kube-apiserver (particularly the &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;monitoring.mixins.dev&#x2F;kubernetes&#x2F;#kube-apiserver-burnraterules&quot;&gt;burnrate stuff&lt;&#x2F;a&gt;) are particularly heavy evaluation rules (saw a ~6 cores reduction after removing them from one busy prometheus pair). Imo, you probably only need some of these if you are a cloud provider.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;extra-metrics-exporters&quot;&gt;Extra metrics exporters&lt;&#x2F;h4&gt;
&lt;p&gt;Any additional metrics exporters are not part of the &lt;code&gt;kube-prometheus-stack&lt;&#x2F;code&gt; chart, but there are &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;prometheus-community&#x2F;helm-charts&#x2F;tree&#x2F;main&#x2F;charts&quot;&gt;tons of exporters availble&lt;&#x2F;a&gt; supported by the same &lt;code&gt;prometheus-community&lt;&#x2F;code&gt;, so would expect them to be of high quality based on their commit history and repository CI, but have otherwise not enough experience here.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;part-2-thanos&quot;&gt;Part 2: &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;thanos.io&#x2F;&quot;&gt;Thanos&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;Before this step, you can have a pretty self-contained prometheus stack where grafana&#x27;s default data source would point at the prometheus&#x27; &lt;code&gt;Service&lt;&#x2F;code&gt;, and metrics would fade out after prometheus&#x27; &lt;code&gt;retention&lt;&#x2F;code&gt; period.&lt;&#x2F;p&gt;
&lt;p&gt;Thanos essentially &lt;strong&gt;takes all the components&lt;&#x2F;strong&gt; that&#x27;s found &lt;strong&gt;inside prometheus&lt;&#x2F;strong&gt;, and allows you to deploy and &lt;strong&gt;scale them separately&lt;&#x2F;strong&gt;, while providing a &lt;strong&gt;prometheus compatible API&lt;&#x2F;strong&gt; for &lt;strong&gt;long term&lt;&#x2F;strong&gt; storage of metrics.&lt;&#x2F;p&gt;
&lt;p&gt;It relies on data being sent from any prometheus set - via a sidecar on prometheus (configurable via the &lt;code&gt;kube-prometheus-stack&lt;&#x2F;code&gt; chart) - to some provisioned object storage (here S3).&lt;&#x2F;p&gt;
&lt;p&gt;The &lt;strong&gt;write paths&lt;&#x2F;strong&gt; to the S3 bucket is &lt;strong&gt;highlighted&lt;&#x2F;strong&gt; in &lt;i style=&quot;color:red&quot;&gt;red&lt;&#x2F;i&gt; on the diagram.&lt;&#x2F;p&gt;
&lt;p&gt;The various &lt;strong&gt;read paths&lt;&#x2F;strong&gt; are &lt;strong&gt;highlighted&lt;&#x2F;strong&gt; in &lt;i style=&quot;color:green&quot;&gt;green&lt;&#x2F;i&gt; on the diagram, and show how various types of reads propagate to various systems (grafana is the normal entrypoint, but the query-frontend is also a nice way to debug thanos specifics closer to the source).&lt;&#x2F;p&gt;
&lt;p&gt;The &lt;strong&gt;thanos configuration&lt;&#x2F;strong&gt; is &lt;strong&gt;&quot;almost&quot;&lt;&#x2F;strong&gt; completely contained in the thanos &lt;strong&gt;chart&lt;&#x2F;strong&gt; (of your choice) and is marked with a dashed &lt;i style=&quot;color:purple&quot;&gt;purple&lt;&#x2F;i&gt; square.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&quot;almost&quot;&lt;&#x2F;strong&gt;: S3 configuration is also needed in &lt;code&gt;kube-prometheus-stack&lt;&#x2F;code&gt; for writing&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;There are several charts that are trying to package the same thing for thanos:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bitnami&#x2F;charts&#x2F;tree&#x2F;master&#x2F;bitnami&#x2F;thanos&#x2F;&quot;&gt;bitnami&#x2F;thanos&lt;&#x2F;a&gt; - most active&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;banzaicloud&#x2F;banzai-charts&#x2F;tree&#x2F;master&#x2F;thanos&quot;&gt;banzai&#x2F;thanos&lt;&#x2F;a&gt; - pretty inactive&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;thanos-community&#x2F;helm-charts&quot;&gt;thanos-community&#x2F;helm-charts&lt;&#x2F;a&gt; - &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;thanos-io&#x2F;thanos&#x2F;issues&#x2F;1820&quot;&gt;&quot;official&quot;&lt;&#x2F;a&gt;, but clearly abandoned&#x2F;out-of-date&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They &lt;strong&gt;all have problems&lt;&#x2F;strong&gt;:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;bitnami&lt;&#x2F;code&gt; ties itself to its own ecosystem, and is not based on the &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;thanos-io&#x2F;kube-thanos&quot;&gt;official jsonnet&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;banzai&lt;&#x2F;code&gt; is clearly outdated&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;thanos-community&lt;&#x2F;code&gt; charts lacks developers (&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;thanos-io&#x2F;thanos&#x2F;issues&#x2F;1820#issuecomment-752609815&quot;&gt;and they see helm users as a minority&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;So far, the &lt;code&gt;bitnami&lt;&#x2F;code&gt; chart is the most appropriate for &lt;code&gt;helm&lt;&#x2F;code&gt; users.&lt;&#x2F;p&gt;
&lt;p&gt;It&#x27;s an evolving ecosystem with many components, but none of them are as complicated to operate as the &lt;code&gt;kube-prometheus-stack&lt;&#x2F;code&gt; components (and there seems to be a lot less footguns).&lt;&#x2F;p&gt;
&lt;p&gt;Thanos is an &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.cncf.io&#x2F;projects&#x2F;thanos&#x2F;&quot;&gt;incubating cncf project&lt;&#x2F;a&gt; that is just over &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;thanos-io&#x2F;thanos&#x2F;commit&#x2F;3a7b2996f8574048900cfc6259561ac412bcf251&quot;&gt;4 years old&lt;&#x2F;a&gt;. It has a healthy set of &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;thanos-io&#x2F;thanos&#x2F;blob&#x2F;main&#x2F;MAINTAINERS.md&quot;&gt;maintainers&lt;&#x2F;a&gt;, it &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;thanos.devstats.cncf.io&#x2F;d&#x2F;74&#x2F;contributions-chart?orgId=1&amp;amp;var-period=d7&amp;amp;var-metric=contributions&amp;amp;var-repogroup_name=All&amp;amp;var-country_name=All&amp;amp;var-company_name=All&amp;amp;var-company=all&quot;&gt;moves fast&lt;&#x2F;a&gt;, and makes some of the most &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;thanos.io&#x2F;tip&#x2F;thanos&#x2F;getting-started.md&#x2F;&quot;&gt;well-documented&lt;&#x2F;a&gt;, high-quality &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;thanos-io&#x2F;thanos&#x2F;releases&quot;&gt;releases&lt;&#x2F;a&gt; out there.&lt;&#x2F;p&gt;
&lt;p&gt;While it&#x27;s &lt;strong&gt;not trivial&lt;&#x2F;strong&gt; to maintain - the large cpu&#x2F;memory usage and scaling profiles presents some challenges - it has generally &lt;strong&gt;not&lt;&#x2F;strong&gt; presented major problems.&lt;&#x2F;p&gt;
&lt;p&gt;A quick run-through of things worth knowing about the components follows:&lt;&#x2F;p&gt;
&lt;h3 id=&quot;thanos-query-frontend&quot;&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;thanos.io&#x2F;tip&#x2F;components&#x2F;query-frontend.md&#x2F;&quot;&gt;Thanos Query Frontend&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;The http UI users can use. Very light-weight. The &lt;code&gt;Service&lt;&#x2F;code&gt; for this &lt;code&gt;Deployment&lt;&#x2F;code&gt; generally becomes the default user substitute way to query anything (instead of going to a prometheus service&#x27;s web interface - which after installing thanos is mostly useful for debugging scrape configs).&lt;&#x2F;p&gt;
&lt;p&gt;It also looks &lt;strong&gt;almost exactly&lt;&#x2F;strong&gt; like the prometheus web interface (sans ability to debug scrape targets).&lt;&#x2F;p&gt;
&lt;p&gt;This &lt;strong&gt;proxies&lt;&#x2F;strong&gt; all traffic to &lt;strong&gt;thanos query&lt;&#x2F;strong&gt; and never breaks.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;thanos-query&quot;&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;thanos.io&#x2F;tip&#x2F;components&#x2F;query.md&#x2F;&quot;&gt;Thanos Query&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;The big &lt;strong&gt;fan-out engine&lt;&#x2F;strong&gt; that fetches query data from one or more metric sources (typically thanos store + prometheus services), and computes the result of your query on the retrieved data.&lt;&#x2F;p&gt;
&lt;p&gt;This component will suddenly spike in both CPU and memory when it&#x27;s under heavy load (i.e. users doing big queries), so an HPA here on CPU works OK - albeit some stabilization values might be useful:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;yaml&quot; class=&quot;language-yaml z-code&quot;&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;  &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;scaleTargetRef&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;    &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;apiVersion&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;apps&#x2F;v1&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;    &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;kind&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;Deployment&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;    &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;name&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;prometheus-stack-thanos-query&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;  &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;minReplicas&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;2&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;  &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;maxReplicas&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;10&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;  &lt;span class=&quot;z-comment z-line z-number-sign z-yaml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-line z-number-sign z-yaml&quot;&gt;#&lt;&#x2F;span&gt; Slow down scaleDown behavior as thanos query has very sporadic usage
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;  &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;behavior&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;    &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;scaleDown&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;      &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;stabilizationWindowSeconds&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;100&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;      &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;policies&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;      &lt;span class=&quot;z-punctuation z-definition z-block z-sequence z-item z-yaml&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;type&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;Percent&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;        &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;value&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;10&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;        &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;periodSeconds&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;60&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;    &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;scaleUp&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;      &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;policies&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;      &lt;span class=&quot;z-punctuation z-definition z-block z-sequence z-item z-yaml&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;type&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;Percent&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;        &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;value&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;20&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;        &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;periodSeconds&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;15&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;  &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;metrics&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;  &lt;span class=&quot;z-punctuation z-definition z-block z-sequence z-item z-yaml&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;type&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;Resource&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;    &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;resource&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;      &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;name&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;cpu&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;      &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;target&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;        &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;averageUtilization&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;70&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;        &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;type&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;Utilization&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The compute workload &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;monitoring.mixins.dev&#x2F;kubernetes&#x2F;#dashboards&quot;&gt;kubernetes-mixin dashboard&lt;&#x2F;a&gt; will show roughly how this HPA reacts to changes (stacked view, colors represent pods):&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;&#x2F;imgs&#x2F;prometheus&#x2F;thanos-query-usage.png&quot;&gt;&lt;img src=&quot;&#x2F;imgs&#x2F;prometheus&#x2F;thanos-query-usage.png&quot; alt=&quot;thanos query cpu and memory usage&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;which lines up with the &lt;code&gt;thanos_query_concurrent_gate_queries_in_flight&lt;&#x2F;code&gt; metric reasonably well.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;thanos-store&quot;&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;thanos.io&#x2F;tip&#x2F;components&#x2F;store.md&#x2F;&quot;&gt;Thanos Store&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;The read interface to long term storage. It&#x27;s also prometheus api compatible (using the Store API), so from the querier&#x27;s POV it is analogous to querying a prometheus.&lt;&#x2F;p&gt;
&lt;p&gt;This component also will &lt;strong&gt;also&lt;&#x2F;strong&gt; suddenly spike in both CPU and memory when users start doing big queries on historical data (i.e. further back in time than prometheus&#x27; &lt;code&gt;retention&lt;&#x2F;code&gt;), so a similar HPA to thanos query to scale on CPU works reasonably well:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;&#x2F;imgs&#x2F;prometheus&#x2F;thanos-store-usage.png&quot;&gt;&lt;img src=&quot;&#x2F;imgs&#x2F;prometheus&#x2F;thanos-store-usage.png&quot; alt=&quot;thanos store cpu and memory usage&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;thanos-ruler&quot;&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;thanos.io&#x2F;tip&#x2F;components&#x2F;rule.md&#x2F;&quot;&gt;Thanos Ruler&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;An &lt;strong&gt;optional&lt;&#x2F;strong&gt; rule evaluation &#x2F; alerting analogue. Not pictured in the current image because it&#x27;s not really needed in the normal thanos setup (see the next &lt;a href=&quot;&#x2F;tags&#x2F;prometheus&#x2F;&quot;&gt;#prometheus&lt;&#x2F;a&gt; post for how this could be used).
This is a bit more &lt;strong&gt;niche&lt;&#x2F;strong&gt; than the rule evaluation in prometheus itself, because rule evalution on the prometheus side already gets stored as metrics in the long term storage. The only reasons you need this is if you need to alert &#x2F; evaluate rules on the federated level (e.g. to answer whether you have a high error rate across all production clusters &#x2F; prometheus sets), or need long term metrics in the evaluation phase for anomaly detection.&lt;&#x2F;p&gt;
&lt;p&gt;If you need the alerting part, then you have another component that talks to &lt;code&gt;alertmanager&lt;&#x2F;code&gt; 🙃.&lt;&#x2F;p&gt;
&lt;p&gt;Can run in a stateful mode - presenting a prometheus compatible store api that the querier can hit for rule results - or statelessly; persisting rule results to s3.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;thanos-compactor&quot;&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;thanos.io&#x2F;tip&#x2F;components&#x2F;compact.md&#x2F;&quot;&gt;Thanos Compactor&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;The magic sauce that makes &lt;strong&gt;querying long term&lt;&#x2F;strong&gt; data &lt;strong&gt;practical&lt;&#x2F;strong&gt; - as raw data is too resource intensive to use when you want to view result over the past weeks or months.&lt;&#x2F;p&gt;
&lt;p&gt;The compactor will go through the S3 bucket, and create lower-res data (at &lt;code&gt;5m&lt;&#x2F;code&gt; averages and &lt;code&gt;1h&lt;&#x2F;code&gt; averages), and delete raw data (after a configurable time has passed).&lt;&#x2F;p&gt;
&lt;p&gt;One such configuration can be:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Maintain &lt;code&gt;raw&lt;&#x2F;code&gt; resolution for &lt;code&gt;7d&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Create &lt;code&gt;5m&lt;&#x2F;code&gt; resolution chunks that are kept for &lt;code&gt;30d&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Create &lt;code&gt;1h&lt;&#x2F;code&gt; resolution chunks that are kept for &lt;code&gt;1y&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;The &lt;code&gt;compactor&lt;&#x2F;code&gt; will &lt;strong&gt;chug along&lt;&#x2F;strong&gt; and do these in steps (creating &lt;code&gt;5m&lt;&#x2F;code&gt; res from raw, then creating &lt;code&gt;1h&lt;&#x2F;code&gt; res from &lt;code&gt;5m&lt;&#x2F;code&gt; res), as the chunks become available.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Long-term&lt;&#x2F;strong&gt;, the lower res data is &lt;strong&gt;more practical&lt;&#x2F;strong&gt; to both &lt;strong&gt;query&lt;&#x2F;strong&gt; and &lt;strong&gt;store&lt;&#x2F;strong&gt;, but you end up with multiple variants of the data in the first 7 to 30 days.&lt;&#x2F;p&gt;
&lt;p&gt;If this is hard to visualize, then fear not, you can browse to thanos &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;thanos.io&#x2F;tip&#x2F;components&#x2F;tools.md&#x2F;#bucket-web&quot;&gt;bucket web&lt;&#x2F;a&gt; to visualise the state of your &lt;code&gt;S3&lt;&#x2F;code&gt; bucket. It&#x27;s a small service (included in the chart) that presents the view, and what resolutions are availble from various dates.&lt;&#x2F;p&gt;
&lt;p&gt;Think of &lt;code&gt;compactor&lt;&#x2F;code&gt; as a cronjob (but with &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;monitoring.mixins.dev&#x2F;thanos&#x2F;#thanos-compact&quot;&gt;good alerts&lt;&#x2F;a&gt;) that needs to do big data operations. If you give it enough space, cpu, and memory it is usually happy. It will use these resources a bit sporadically though - some cycles are clearly visible in memory use:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;&#x2F;imgs&#x2F;prometheus&#x2F;compactor-cycles.png&quot;&gt;&lt;img src=&quot;&#x2F;imgs&#x2F;prometheus&#x2F;compactor-cycles.png&quot; alt=&quot;thanos compactor cpu and memory usage&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;part-3-metrics-api-integrations&quot;&gt;Part 3: Metrics API Integrations&lt;&#x2F;h2&gt;
&lt;p&gt;The final components reside in the void outside the two big standard charts and contains the implementors of the various &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kubernetes&#x2F;metrics#apis&quot;&gt;metrics apis&lt;&#x2F;a&gt;:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;resource metrics&lt;&#x2F;strong&gt; api (cpu&#x2F;memory for pods)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;custom metrics&lt;&#x2F;strong&gt; api (metrics related to a scalable object)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;external metrics&lt;&#x2F;strong&gt; api (metrics unrelated to a scalable object)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;These are apis that allow Kubernetes to &lt;code&gt;scale&lt;&#x2F;code&gt; your workloads (with varying degrees of intelligence) through HPAs, but you need something to implement them.&lt;&#x2F;p&gt;
&lt;p&gt;I mention these different underlying apis explicitly because &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kubernetes-sigs&#x2F;custom-metrics-apiserver&#x2F;issues&#x2F;70&quot;&gt;currently&lt;&#x2F;a&gt; you can &lt;strong&gt;only&lt;&#x2F;strong&gt; have &lt;strong&gt;one implementor&lt;&#x2F;strong&gt; of each api, and if you have more than one thing that provides custom metrics (like say cloudwatch metrics + prometheus adapter), then you are better served by using &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;keda.sh&#x2F;&quot;&gt;KEDA&lt;&#x2F;a&gt; than what is described herein.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;metrics-server&quot;&gt;metrics-server&lt;&#x2F;h3&gt;
&lt;p&gt;The first is a kubernetes standard component; the &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kubernetes-sigs&#x2F;metrics-server&quot;&gt;metrics-server&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;It only implements the &lt;strong&gt;resource metrics&lt;&#x2F;strong&gt; api, and thus &lt;strong&gt;only&lt;&#x2F;strong&gt; enables you scale on cpu and memory.&lt;&#x2F;p&gt;
&lt;p&gt;It extracts cpu&#x2F;memory values values via &lt;code&gt;kubelet&lt;&#x2F;code&gt;, and as such allows &lt;code&gt;kubectl top&lt;&#x2F;code&gt; + HPAs to work out of the box - without prometheus or any of the other components visualised herein. It&#x27;s even installed on &lt;code&gt;k3d&lt;&#x2F;code&gt; by default.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;prometheus-adapter&quot;&gt;prometheus-adapter&lt;&#x2F;h3&gt;
&lt;p&gt;This adapter funnels metrics from &lt;code&gt;prometheus&lt;&#x2F;code&gt; into the HPA universe, so you can scale on &lt;strong&gt;arbitrary&lt;&#x2F;strong&gt; metrics.&lt;&#x2F;p&gt;
&lt;p&gt;It implements the resource metrics, custom metrics, and external metrics APIs. The underlying setup for this has &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;kubernetes.io&#x2F;docs&#x2F;tasks&#x2F;run-application&#x2F;horizontal-pod-autoscale&#x2F;#scaling-on-custom-metrics&quot;&gt;stable docs from k8s 1.23&lt;&#x2F;a&gt;, and in essence this allows you to scale on &lt;strong&gt;custom metrics&lt;&#x2F;strong&gt; (related to the scaling object) or &lt;strong&gt;external metrics&lt;&#x2F;strong&gt; (unrelated to the scaling object).&lt;&#x2F;p&gt;
&lt;p&gt;The &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kubernetes-sigs&#x2F;prometheus-adapter&#x2F;blob&#x2F;c9e69613d3e1ccf4a5828aba25de613d84694779&#x2F;docs&#x2F;sample-config.yaml&quot;&gt;syntax needed for this component&lt;&#x2F;a&gt; definitely leaves a lot &lt;strong&gt;to be desired&lt;&#x2F;strong&gt;. The only way we have managed to get somewhere with this is with principal engineers and a lot of trial and error. Thankfully, there are &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kubernetes-sigs&#x2F;prometheus-adapter&#x2F;blob&#x2F;master&#x2F;docs&#x2F;walkthrough.md&quot;&gt;some helpful resources&lt;&#x2F;a&gt;, this is still not easy.&lt;&#x2F;p&gt;
&lt;p&gt;The repository for &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kubernetes-sigs&#x2F;prometheus-adapter&quot;&gt;prometheus-adapter&lt;&#x2F;a&gt; is also not receiving a whole of attention: &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kubernetes-sigs&#x2F;prometheus-adapter&#x2F;issues?q=is%3Aissue+is%3Aclosed+label%3Alifecycle%2Frotten&quot;&gt;almost half&lt;&#x2F;a&gt; of their closed issues looks like they were closed by kubernetes org&#x27;s auto-closer bot. You can say many sensible things about this closing practice - on the importance of funding and triagers for open source software - but it ultimately sends a message:&lt;&#x2F;p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Unpopular opinion: I think solving issue triage by letting robots auto close issues that were never responded to is a *horrible* way to manage your project and tells users you don&amp;#39;t give a crap about their effort filing bugs :(&lt;&#x2F;p&gt;&amp;mdash; Benjamin Elder (@BenTheElder) &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;BenTheElder&#x2F;status&#x2F;1407774856033181696?ref_src=twsrc%5Etfw&quot;&gt;June 23, 2021&lt;&#x2F;a&gt;&lt;&#x2F;blockquote&gt; &lt;script async src=&quot;https:&#x2F;&#x2F;platform.twitter.com&#x2F;widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;&#x2F;script&gt;
&lt;p&gt;It does have its own &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;prometheus-community&#x2F;helm-charts&#x2F;tree&#x2F;main&#x2F;charts&#x2F;prometheus-adapter&quot;&gt;prometheus-community maintained chart&lt;&#x2F;a&gt;, which is of high quality, but you will need to figure out the templated promql yourself.&lt;&#x2F;p&gt;
&lt;p&gt;Without having much experience with &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;keda.sh&#x2F;&quot;&gt;KEDA&lt;&#x2F;a&gt;, I would recommend looking into using &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;keda.sh&#x2F;docs&#x2F;2.5&#x2F;scalers&#x2F;prometheus&#x2F;&quot;&gt;KEDA&#x27;s prometheus scaler directly instead&lt;&#x2F;a&gt; of using the arcane template magic from &lt;code&gt;prometheus-adapter&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;happy-new-year&quot;&gt;Happy new year&lt;&#x2F;h2&gt;
&lt;p&gt;That&#x27;s all I can bring myself to write about this archeticture for now. It took longer than I anticipated, so hopefully this was useful to someone. Regardless, best of luck maintaining prometheus in 2022.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Campaign Conclusion &amp; Brain Dump</title>
        <published>2021-12-05T00:00:00+00:00</published>
        <updated>2021-12-05T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://clux.dev/post/2021-12-05-campaign-concluded/"/>
        <id>https://clux.dev/post/2021-12-05-campaign-concluded/</id>
        
        <content type="html" xml:base="https://clux.dev/post/2021-12-05-campaign-concluded/">&lt;p&gt;After almost 4 years of running D&amp;amp;D almost every week, my big campaign concluded recently. This week marked our retrospective, and the release of several relics of the campaign. One in particular was the campaign repo - previously described as my &lt;a href=&quot;&#x2F;post&#x2F;2020-09-27-second-brain&quot;&gt;foaming campaign brain&lt;&#x2F;a&gt;. This is a brief post about the setup, and discovered pros&#x2F;cons associated with it.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;campaign&quot;&gt;Campaign&lt;&#x2F;h2&gt;
&lt;p&gt;Campaign first. We held &lt;code&gt;126&lt;&#x2F;code&gt; sessions about the campaign over &lt;code&gt;3.5 years&lt;&#x2F;code&gt; (i.e. &lt;strong&gt;36 per 12 months&lt;&#x2F;strong&gt;) as a remarkably consistent group (even after the pandemic hit and we moved remote).&lt;&#x2F;p&gt;
&lt;p&gt;Tooling also moved on; discord + &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;avrae.io&#x2F;&quot;&gt;Avreae&lt;&#x2F;a&gt; (dndbeyond character + dice integration), &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;rythm.fm&#x2F;&quot;&gt;rhythm&lt;&#x2F;a&gt; for music (got DMCA&#x27;d and replaced by &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jagrosh&#x2F;MusicBot&quot;&gt;jmusicbot&lt;&#x2F;a&gt;), &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.owlbear.rodeo&#x2F;&quot;&gt;owlbear.rodeo&lt;&#x2F;a&gt; for interactive maps, &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;5e.tools&#x2F;&quot;&gt;5e.tools&lt;&#x2F;a&gt; for quick spell&#x2F;item&#x2F;monster searches and more. A lot easier to run with your main computer in front of you.&lt;&#x2F;p&gt;
&lt;p&gt;We could also record with &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;obsproject.com&#x2F;&quot;&gt;OBS&lt;&#x2F;a&gt;. So in fact, from the pandemic on, I started gathering episodes in an unlisted youtube playlist. Mainly as a reference, but also a memento later, for when it was over.&lt;&#x2F;p&gt;
&lt;p&gt;Inlining an external embed here to the wrap-up episode below.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;div class=&quot;yv&quot;&gt;
    &lt;iframe src=&quot;https:&#x2F;&#x2F;www.youtube-nocookie.com&#x2F;embed&#x2F;9HRCumVEHQU&quot; title=&quot;Youtube&quot; class=&quot;yvi&quot; webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;&#x2F;iframe&gt;
&lt;&#x2F;div&gt;

&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=_toA4XCp--U&quot;&gt;part 2 here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;This could be interesting if you want to cross reference with navigation in the brain &#x2F; want to see how the tools fit together (map top left, discord dice bot bottom left), or you were a previous player (I don&#x27;t assume it would be super interesting to anyone else).&lt;&#x2F;p&gt;
&lt;p&gt;It&#x27;s also the only episode where the DM is relieved throughout the entire episode (because we managed to finish the campaign and they didn&#x27;t all wipe 16 levels in).&lt;&#x2F;p&gt;
&lt;p&gt;Anyway. Onto the notes.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;the-brain&quot;&gt;The Brain&lt;&#x2F;h2&gt;
&lt;p&gt;I had started to use &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;foambubble.github.io&#x2F;foam&#x2F;&quot;&gt;foam&lt;&#x2F;a&gt; as a note taking tool in 2020. Mostly because of my familiarity with &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;guides.github.com&#x2F;features&#x2F;mastering-markdown&#x2F;&quot;&gt;Markdown&lt;&#x2F;a&gt;, but also the avoidance of vendor lock-in. Go read &lt;a href=&quot;&#x2F;post&#x2F;2020-09-27-second-brain&quot;&gt;foaming campaign brain&lt;&#x2F;a&gt; for more reasons behind this and how it works.&lt;&#x2F;p&gt;
&lt;p&gt;It&#x27;s very similar to &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;obsidian.md&#x2F;&quot;&gt;obsidian&lt;&#x2F;a&gt;, and most of the &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;channel&#x2F;UC85D7ERwhke7wVqskV_DZUA&quot;&gt;general advice for it&lt;&#x2F;a&gt; applies.&lt;&#x2F;p&gt;
&lt;p&gt;The structure is just one enormous docs folder with markdown documents that is haphazardly grouped into folders:&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;├── coast
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;├── deities
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;├── east
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;├── factions
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;├── north
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;├── npcs
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;├── pcs
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;├── planar
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;├── recaps
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;├── rules
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;├── seaofbones
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;├── spine
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;├── underdark
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;└── whiteplume
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;These refer to either collections of notes that were close in time&#x2F;space across the campaign, or special sets of notes like pcs, npcs, factions, and dm notes and rules.&lt;&#x2F;p&gt;
&lt;p&gt;The documents in these folders cross-link with various markdown plugins in &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;code.visualstudio.com&#x2F;&quot;&gt;VS Code&lt;&#x2F;a&gt; (using wiki syntax). Users &lt;strong&gt;could&lt;&#x2F;strong&gt; clone and open the &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;campaign&quot;&gt;campaign repo&lt;&#x2F;a&gt; with VS Code, install plugins, and you would get my experience, but this is a bit awkward.&lt;&#x2F;p&gt;
&lt;p&gt;I couldn&#x27;t just give people a link to things in the docs (e.g. &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;campaign&#x2F;blob&#x2F;main&#x2F;docs&#x2F;pcs&#x2F;goatweaver.md&quot;&gt;goatweaver&lt;&#x2F;a&gt;) because you&#x27;ll notice none of the wikilinks work. So we needed a webpage conversion.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;release-solution&quot;&gt;Release Solution&lt;&#x2F;h2&gt;
&lt;p&gt;Thanks to this &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Jackiexiao&#x2F;foam-mkdocs-template&quot;&gt;template repo&lt;&#x2F;a&gt;, it was reasonable easy to glue together
&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.mkdocs.org&#x2F;&quot;&gt;mkdocs&lt;&#x2F;a&gt; with the &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;squidfunk.github.io&#x2F;mkdocs-material&#x2F;&quot;&gt;mkdocs-material&lt;&#x2F;a&gt; theme. The result is this:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;clux.github.io&#x2F;campaign&#x2F;&quot;&gt;&lt;img src=&quot;&#x2F;imgs&#x2F;foam&#x2F;foam-material.png&quot; alt=&quot;foam mkdocs campaign website&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Folders become tabs, files becomes entries on the left side, and TOC is generated from headers on the right. Images are rendered from disk (as in markdown preview), cross-links work, and it would have ended up looking super professional had it not been for the myriad of TODOs buried in every document.&lt;&#x2F;p&gt;
&lt;p&gt;You can view the &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;clux.github.io&#x2F;campaign&#x2F;&quot;&gt;resulting static website&lt;&#x2F;a&gt; at your leisure, but again, this is not going to be very interesting for anyone except the players and other DMs.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;what-worked-well&quot;&gt;What Worked Well&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;running-the-game&quot;&gt;Running The Game&lt;&#x2F;h3&gt;
&lt;p&gt;It was very nice process to DM with &lt;code&gt;code&lt;&#x2F;code&gt; in front of me. Definitely much better than the original &lt;code&gt;OneNote&lt;&#x2F;code&gt; setup that was periodically down or slow to respond. Knowing how to search, and cycle through tabs, and search within docs (or use &lt;code&gt;rg&lt;&#x2F;code&gt; in the docs folder) made it very easy to find anything quickly (no matter how deeply buried it ended up).&lt;&#x2F;p&gt;
&lt;p&gt;Your mileage may vary on this point, but if you know how to use a code editor, you&#x27;ll always end up with a more powerful way to navigate than whatever features that eventually make it into notion et al.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;website-release&quot;&gt;Website Release&lt;&#x2F;h3&gt;
&lt;p&gt;It took me about one day to reorganise the repo in a way that it worked with &lt;code&gt;mkdocs&lt;&#x2F;code&gt;. The process was basically:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;move content into a &lt;code&gt;docs&#x2F;&lt;&#x2F;code&gt; subfolder&lt;&#x2F;li&gt;
&lt;li&gt;import &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Jackiexiao&#x2F;foam-mkdocs-template&quot;&gt;template repo&lt;&#x2F;a&gt; as a base&lt;&#x2F;li&gt;
&lt;li&gt;re-remember &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;dotfiles&#x2F;blob&#x2F;e7f07400b3b8ac2ef19b7c35a5e5eff009c6a018&#x2F;.functions#L483-L493&quot;&gt;how to install shit with python&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;fix broken links that &lt;code&gt;mkdocs serve&lt;&#x2F;code&gt; found&lt;&#x2F;li&gt;
&lt;li&gt;tweak &lt;code&gt;mkdocs.yml&lt;&#x2F;code&gt; to
&lt;ul&gt;
&lt;li&gt;make the theme look good and add dark mode&lt;&#x2F;li&gt;
&lt;li&gt;choose the most sensible navigation setups (&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;squidfunk.github.io&#x2F;mkdocs-material&#x2F;setup&#x2F;setting-up-navigation&#x2F;&quot;&gt;mkdocs-material has many&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;make edit links work (takes you to a github edit view that eventually leads to a branch commit or a fork pr)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;The &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;squidfunk.github.io&#x2F;mkdocs-material&#x2F;setup&#x2F;changing-the-colors&#x2F;&quot;&gt;mkdocs-material docs&lt;&#x2F;a&gt; in general were fantastic. Live preview of the features from their dogfooding setup. While I am confident &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;themes.gohugo.io&#x2F;&quot;&gt;an approximation exists with hugo&lt;&#x2F;a&gt;, the features and quality here went far beyond anything I have seen in this space:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;squidfunk.github.io&#x2F;mkdocs-material&#x2F;setup&#x2F;setting-up-site-search&#x2F;&quot;&gt;Search&lt;&#x2F;a&gt; &#x2F; &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;squidfunk.github.io&#x2F;mkdocs-material&#x2F;setup&#x2F;setting-up-navigation&#x2F;#instant-loading&quot;&gt;ajax fetching&lt;&#x2F;a&gt; &#x2F; &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;squidfunk.github.io&#x2F;mkdocs-material&#x2F;setup&#x2F;adding-a-git-repository&#x2F;?h=edit#edit-button&quot;&gt;edit links on page&lt;&#x2F;a&gt; &#x2F; multiple &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;squidfunk.github.io&#x2F;mkdocs-material&#x2F;setup&#x2F;setting-up-navigation&#x2F;#integrated-table-of-contents&quot;&gt;TOC generation&lt;&#x2F;a&gt; methods&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;It made the outcome very attractive looking. In fact, it&#x27;s so nice that it might even replace the &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;mdBook&quot;&gt;rust mdbook tool&lt;&#x2F;a&gt; as a default simple static markdown web page for me.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;small&gt;(.. well. Maybe anyway. The python ecosystem still leaves a lot to be desired.)&lt;&#x2F;small&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;recap-writing&quot;&gt;Recap Writing&lt;&#x2F;h3&gt;
&lt;p&gt;Basically, a quick &lt;code&gt;Ctrl-Shift-P&lt;&#x2F;code&gt; in &lt;code&gt;code&lt;&#x2F;code&gt;, ask foam to create my &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;campaign&#x2F;blob&#x2F;main&#x2F;.foam&#x2F;templates&#x2F;recap-template.md&quot;&gt;preferred note&lt;&#x2F;a&gt; (by &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;facemaulers&#x2F;blob&#x2F;main&#x2F;.foam&#x2F;templates&#x2F;recap-template.md&quot;&gt;hijacking the daily note setup&lt;&#x2F;a&gt; for this), and it fills in the basics.&lt;&#x2F;p&gt;
&lt;p&gt;This file would serve as the &quot;last we left off&quot; at the start of each session, plus notes and TODOs for myself.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;image-pasting&quot;&gt;Image Pasting&lt;&#x2F;h3&gt;
&lt;p&gt;The &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;marketplace.visualstudio.com&#x2F;items?itemName=mushan.vscode-paste-image&quot;&gt;paste-image plugin&lt;&#x2F;a&gt; was pretty easy for capturing images and associating it quickly with the document. I would have preferred a drag and drop (when it could have worked), but ultimately bound a &lt;strong&gt;button&lt;&#x2F;strong&gt; in my desktop environment to do &lt;strong&gt;quickly draw a rectangle&lt;&#x2F;strong&gt; on my screen and shunt its contents to my &lt;strong&gt;clipboard&lt;&#x2F;strong&gt; (which then could be pasted from the plugin without going through a temporary file).&lt;&#x2F;p&gt;
&lt;h3 id=&quot;foam-improvements&quot;&gt;Foam Improvements&lt;&#x2F;h3&gt;
&lt;p&gt;Throughout half their &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;foambubble&#x2F;foam&#x2F;releases&quot;&gt;release history&lt;&#x2F;a&gt;, nothing major broke on my end as plugins upgraded.&lt;&#x2F;p&gt;
&lt;p&gt;The most notable upgrade I noticed was the complete revamp of the graph view with new selection features:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;imgs&#x2F;foam&#x2F;foam-newgraph.png&quot; alt=&quot;foam new graph view&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;However, one minor snag in one upgrade was &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;foambubble&#x2F;foam&#x2F;issues&#x2F;835&quot;&gt;hiding the recaps from the graph view&lt;&#x2F;a&gt;. &lt;strong&gt;EDIT 2023&lt;&#x2F;strong&gt; &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;foambubble&#x2F;foam&#x2F;issues&#x2F;835#issuecomment-1399437329&quot;&gt;workaround found&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;what-sucked&quot;&gt;What Sucked&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;renames&quot;&gt;Renames&lt;&#x2F;h3&gt;
&lt;p&gt;Foam &lt;del&gt;still&lt;&#x2F;del&gt; struggled with &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;foambubble&#x2F;foam&#x2F;issues&#x2F;809&quot;&gt;doing file renames&lt;&#x2F;a&gt; (because backlinks were not updated). This was worked around to some extent thanks to &lt;code&gt;mkdocs&lt;&#x2F;code&gt; telling me about the broken links (but this was after adding the web page element).&lt;&#x2F;p&gt;
&lt;p&gt;&lt;del&gt;You are really dissuaded from renaming files either way (because of the work it leads to), and it basically precludes doing bigger refactors at the moment.&lt;&#x2F;del&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;del&gt;It&#x27;s probably™ implementable on their side &lt;em&gt;&quot;without too much work&quot;©&lt;&#x2F;em&gt; (because you can probably work around this with a script + &lt;code&gt;sed&lt;&#x2F;code&gt; if you are masochistic enough), but ultimately, &lt;strong&gt;someone&lt;&#x2F;strong&gt; has to actually do it - and who knows what complexity lurks within vs code plugins.&lt;&#x2F;del&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;EDIT&lt;&#x2F;strong&gt;: Have commented out this part in 2023 because this issue was resolved in foam.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;sort-inconsistencies&quot;&gt;Sort Inconsistencies&lt;&#x2F;h3&gt;
&lt;p&gt;My &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;campaign&#x2F;tree&#x2F;main&#x2F;docs&#x2F;recaps&quot;&gt;recaps folder&lt;&#x2F;a&gt; has two digits prefixes on every note. This was fine in my file viewer + vs code, but not in &lt;code&gt;mkdocs-material&lt;&#x2F;code&gt; which sorted the entries lexicographically. Renaming would have to be done with &lt;code&gt;sed&lt;&#x2F;code&gt; or some other bulk search&#x2F;replace tool.&lt;&#x2F;p&gt;
&lt;p&gt;This meant we basically had to take the folder contents and &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;campaign&#x2F;blob&#x2F;main&#x2F;mkdocs.yml#L221-L347&quot;&gt;manually arrange them&lt;&#x2F;a&gt;. This wasn&#x27;t too annoying, as we could just copy the output from &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sharkdp&#x2F;fd&quot;&gt;&lt;code&gt;fd .md .&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; in the docs folder, and it was nice to be able to customize sorting anyway.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;world-secrets&quot;&gt;World Secrets&lt;&#x2F;h3&gt;
&lt;p&gt;If you want to release a DM brain (with all your plans and secrets) from your campaing, you are more or less saying that this world over. This was ok for us, it&#x27;s been almost 4 years, and it&#x27;s not particularly original (forgotten realms, and stolen content everywhere). If you wanted to do a &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=i-p9lWIhcLQ&amp;amp;list=PL1tiwbzkOjQz7D0l_eLJGAISVtcL7oRu_&quot;&gt;Mercer style&lt;&#x2F;a&gt; campaign procession where each season is set in the same world different area, then this process becomes difficult.&lt;&#x2F;p&gt;
&lt;p&gt;If you have a team of software people familiar with an editor you could have a &lt;strong&gt;player brain&lt;&#x2F;strong&gt; type thing that you could reference from the &lt;strong&gt;DM brain&lt;&#x2F;strong&gt; potentially. But if you have their level of viewers or players dedicated enough to basically write a &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;criticalrole.fandom.com&#x2F;wiki&#x2F;Critical_Role_Wiki&quot;&gt;wiki for your campaign&lt;&#x2F;a&gt;, maybe you have bigger problems.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;graph-view-not-exported&quot;&gt;Graph View Not Exported&lt;&#x2F;h3&gt;
&lt;p&gt;There maybe some way of exporting the graph into a json blob and importing it in a separate page for users to browse (like a sitemap). But given how much &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;foambubble&#x2F;foam&#x2F;issues&#x2F;530&quot;&gt;graph has changed and is going to change&lt;&#x2F;a&gt;, plus my impatience for real web development made this a non-starter.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;&#x2F;h2&gt;
&lt;p&gt;Foam worked really well for this type of scoped project. I actually think that this type of brain would also &lt;strong&gt;work well for the players&lt;&#x2F;strong&gt; (if you have an engineer or two to manage it as notes) because they benefit much more from the website searchability, and you don&#x27;t run into the last problem about world secrets.&lt;&#x2F;p&gt;
&lt;p&gt;Lacking that, I &lt;strong&gt;will probably carry on&lt;&#x2F;strong&gt; with this setup for &lt;strong&gt;any similar ttrpg&lt;&#x2F;strong&gt; setup. Most of the negatives listed above are a bit nitpicky (&lt;strong&gt;EDIT&lt;&#x2F;strong&gt;: and resolved now), and are &lt;em&gt;generally not that problematic&lt;&#x2F;em&gt;. Plus, I now have a better idea of what structures work (pcs, npcs, factions, deities, recaps were perfect fits for their own folders), what information ought to go where, and how deep to go.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;del&gt;However, this comes with a heavy caveat. This is currently best for small scale projects with a &lt;strong&gt;sense of finality&lt;&#x2F;strong&gt;. If this was my life brain, I would be a bit worried about the &lt;strong&gt;renaming problem&lt;&#x2F;strong&gt; (&quot;would I never be able to refactor this?&quot;). On the other hand, they &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;foambubble&#x2F;foam&#x2F;issues&#x2F;809&quot;&gt;have an issue for it&lt;&#x2F;a&gt; and have been doing promising development.&lt;&#x2F;del&gt; &lt;strong&gt;EDIT 2023:&lt;&#x2F;strong&gt; The rename problem is resolved, and I am using this for my main brain as well now.&lt;&#x2F;p&gt;
&lt;p&gt;Considering the standard open source software tradeoff is often between:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;free + a bit janky &amp;lt;------------&amp;gt; costly + vendor-locked&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;foambubble.github.io&#x2F;&quot;&gt;Foam&lt;&#x2F;a&gt; does not deviate too far from this. It&#x27;s &lt;strong&gt;good&lt;&#x2F;strong&gt;, and it &lt;strong&gt;can become great&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;small&gt;&lt;em&gt;..and you have VS Code on your side to help tilt the tradeoff&lt;&#x2F;em&gt;&lt;&#x2F;small&gt;&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Talk log from KubeCon LA</title>
        <published>2021-11-06T00:00:00+00:00</published>
        <updated>2021-11-06T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://clux.dev/post/2021-11-06-kubecon-la-log/"/>
        <id>https://clux.dev/post/2021-11-06-kubecon-la-log/</id>
        
        <content type="html" xml:base="https://clux.dev/post/2021-11-06-kubecon-la-log/">&lt;p&gt;First KubeCon in a while I haven&#x27;t done anything for (didn&#x27;t even buy an ticket). This post is largely for myself, but thought I&#x27;d put some thoughts here public. All talks referenced were recently published on the &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;c&#x2F;cloudnativefdn&#x2F;videos&quot;&gt;CNCF youtube channel&lt;&#x2F;a&gt;, and the posts here are really just my notes (make of them what you will).&lt;&#x2F;p&gt;
&lt;p&gt;My interest areas this kubecon fall broadly into these categories;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;observability related&lt;&#x2F;strong&gt; :: maintain a lot of metrics related tooling + do a lot of dev advocacy&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;community related&lt;&#x2F;strong&gt; :: am trying to &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kube-rs&#x2F;kube-rs&#x2F;issues&#x2F;584&quot;&gt;donate kube-rs to cncf&lt;&#x2F;a&gt; and grow that community&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;misc tech&lt;&#x2F;strong&gt; :: engineer likes shiny things&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;sorted in order of interest (grouped by category):&lt;&#x2F;p&gt;
&lt;h2 id=&quot;observability&quot;&gt;Observability&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;using-slos-for-continuous-performance-optimizations&quot;&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=V4ByBVARjkc&quot;&gt;Using SLOs for Continuous Performance Optimizations&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;keptn.sh&#x2F;&quot;&gt;keptn&lt;&#x2F;a&gt; and its evented automation system does seem really good.
treats SLOs as first class things. higher level abstraction than other CD systems. no need to write automation systems..
pretty new (cncf sandbox). &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;keptn.sh&#x2F;docs&#x2F;0.9.x&#x2F;operate&#x2F;advanced_install_options&#x2F;&quot;&gt;I should try it&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=WVRdF0ZvApw&quot;&gt;Keptn Office Hours&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt; also goes into a lot of details here for this.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;evolving-prometheus-for-more-use-cases&quot;&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=5R6Fy21MXVE&quot;&gt;Evolving Prometheus for More Use Cases&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;bwplotka&quot;&gt;Bartek&lt;&#x2F;a&gt; on latest news:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;New config: &lt;code&gt;sample_limit&lt;&#x2F;code&gt; (body limit) + &lt;code&gt;label_limit&lt;&#x2F;code&gt; (num labels) + &lt;code&gt;label_name_length_limit&lt;&#x2F;code&gt; (label len) + &lt;code&gt;target_limit&lt;&#x2F;code&gt; (per-scrape config limit).&lt;&#x2F;li&gt;
&lt;li&gt;Configure scraping by labels e.g. &lt;code&gt;prometheus.io&#x2F;scrape&lt;&#x2F;code&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;Exemplars with OpenMetrics format. Supported in java&#x2F;golang&#x2F;python. (NB: I closed &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tikv&#x2F;rust-prometheus&#x2F;pull&#x2F;395&quot;&gt;my rust pr&lt;&#x2F;a&gt; due to time constraints &#x2F; lack of support)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Thanos remote-read to help federated setups. Via &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;G-Research&#x2F;thanos-remote-read&quot;&gt;G-Research&lt;&#x2F;a&gt;.
But &lt;code&gt;remote_write&lt;&#x2F;code&gt; more popular. Can set prometheus to only &lt;code&gt;remote_write&lt;&#x2F;code&gt; recording rule results!&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Prometheus Agent based on Grafana Agent (&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;prometheus&#x2F;prometheus&#x2F;pull&#x2F;8785&quot;&gt;contributed by them&lt;&#x2F;a&gt;) (better disk usage, DS mode presumably).&lt;&#x2F;li&gt;
&lt;li&gt;Grafana Operator; dashboards as CRDs (can split configmap monorepo that normally uses sidecars)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;prometheus-community&#x2F;prom-label-proxy&quot;&gt;prom-label-proxy&lt;&#x2F;a&gt;: isolation. each team only sees their own metrics + resources.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Upcoming: ingestion scaling automation; HPA scaling scraping via dynamically assign scrape targets. High density histograms.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;what-you-need-to-know-about-openmetrics&quot;&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=MMfmNpoYAec&quot;&gt;What You Need to Know About OpenMetrics&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;prometheus + its exposition format is a global standard. Now big collaboration on new standard.&lt;&#x2F;p&gt;
&lt;p&gt;largely the same; but some cleanups and new features.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;counters require &lt;code&gt;_total&lt;&#x2F;code&gt; suffix, timestamp unit is in seconds (used to be ms)&lt;&#x2F;li&gt;
&lt;li&gt;added metadata (units in scrapes), exemplar support&lt;&#x2F;li&gt;
&lt;li&gt;(minor breaking changes, opt in with header)&lt;&#x2F;li&gt;
&lt;li&gt;push&#x2F;pull considerations (cannot emulate all of pull with push though)&lt;&#x2F;li&gt;
&lt;li&gt;text format mandatory &#x2F; optional protobuf&lt;&#x2F;li&gt;
&lt;li&gt;python client is the reference impl (also go&#x2F;java)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;prometheus conformance program (vendors need to do things to get &quot;Prometheus Compliant&quot; logo) &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=N_OkWRC-xQU&quot;&gt;separate talk&lt;&#x2F;a&gt;:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;to use the mark (for a period of time) have to sign LF paperwork&lt;&#x2F;li&gt;
&lt;li&gt;includes: good faith testing clauses, submit tests to prom team&lt;&#x2F;li&gt;
&lt;li&gt;monetary incentives - because they plan on iterating on test suite quickly&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;ebf-superpowers&quot;&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=KY5qujcujfI&quot;&gt;EBF Superpowers&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;cilium&#x2F;hubble&quot;&gt;cilium hubble&lt;&#x2F;a&gt; works as a CNI and can help visualise traffic&lt;&#x2F;li&gt;
&lt;li&gt;falco can detect syscalls&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;pixielabs.ai&#x2F;&quot;&gt;pixie&lt;&#x2F;a&gt; can show flamegraphs within containers&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&quot;observability &#x2F; networking sidecars needs yaml, but ebpf is kernel level.&quot;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;linkerd people go into limitation of ebpf as a &quot;mesh&quot; in this thread:&lt;&#x2F;p&gt;
&lt;!--&lt; tweet user=&quot;wm&quot; id=&quot;1453492551579836417&quot; &gt;--&gt;
&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Was a little bummed to see this article earlier this week from some people I respect, which promotes things that I I believe are *not* the future of cloud native security. &lt;a href=&quot;https:&#x2F;&#x2F;t.co&#x2F;U1kdID4NIA&quot;&gt;https:&#x2F;&#x2F;t.co&#x2F;U1kdID4NIA&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;&amp;mdash; William Morgan (@wm) &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;wm&#x2F;status&#x2F;1453492551579836417?ref_src=twsrc%5Etfw&quot;&gt;October 27, 2021&lt;&#x2F;a&gt;&lt;&#x2F;blockquote&gt; &lt;script async src=&quot;https:&#x2F;&#x2F;platform.twitter.com&#x2F;widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;&#x2F;script&gt;
&lt;p&gt;similar overview to rakyll&#x27;s &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=SKLA6n3TKL0&quot;&gt;eBPF in Microservices Observability&lt;&#x2F;a&gt;, which additionally notes the distribution problem with ebpf at the end.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;understanding-service-mesh-metric-merging&quot;&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=1KG3wFb6mU0&quot;&gt;Understanding Service Mesh Metric Merging&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;How scraping works with istio (to ensure you get app + proxy) from meshday. Awkward, but ok.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;effortless-profiling-on-kubernetes&quot;&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=VPN-q2rjhxc&quot;&gt;Effortless Profiling on Kubernetes&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;code&gt;kubectl flame&lt;&#x2F;code&gt; - creating a container on the same node as target container with profiler binaries (sharing process ids + ns and fs).
=&amp;gt; can use capturing tools like &lt;code&gt;py-spy&lt;&#x2F;code&gt;&#x2F;&lt;code&gt;async-profiler&lt;&#x2F;code&gt; to capture flamegraphs without touching running containers
it then runs kubectl cp&#x27;s the thing out to disk and cleans up thing (no rust support though)&lt;&#x2F;p&gt;
&lt;p&gt;might be obsolete &#x2F; rewritten with &lt;code&gt;ephemeralContainers&lt;&#x2F;code&gt; (no need find node and grab ps&#x2F;ns&#x2F;fs stuff)
&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;prodfiler.com&#x2F;&quot;&gt;prodfiler&lt;&#x2F;a&gt; does something similar as a service&lt;&#x2F;p&gt;
&lt;h2 id=&quot;misc-tech&quot;&gt;Misc Tech&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;leveraging-webassembly-to-write-kubernetes-admission-policies&quot;&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=oNJxPbvPzLk&quot;&gt;Leveraging WebAssembly to Write Kubernetes Admission Policies&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.kubewarden.io&#x2F;&quot;&gt;Kubewarden&lt;&#x2F;a&gt;! Rust dynamic admission controller using &lt;code&gt;kube-rs&lt;&#x2F;code&gt; with WASM.
No DLS. OCI registry to publish policies. Runs all of them through the policy server.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Tracing support into policy wasms!&lt;&#x2F;li&gt;
&lt;li&gt;CRD now for policies: &lt;code&gt;module&lt;&#x2F;code&gt; (oci path) + rbac + constraints.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;opa build -t wasm&lt;&#x2F;code&gt; wasmify via &lt;code&gt;opa&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;testing: &lt;code&gt;kwctl run -e gatekeeper ---settings-json &#x27;{...}&#x27; --request-path some.json gatekeeper&#x2F;policy.wasa&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Should test this out properly. Looks like less of a hassle than OPA&#x2F;gatekeeper.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;edge-computing-using-k3s-on-raspberry-pi&quot;&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=BgzQYlxYOmE&quot;&gt;Edge Computing using K3s on Raspberry Pi&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;nice up to date tutorial to look into in case of apocalypse.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;allocation-optimizer-for-minimizing-power-consumption&quot;&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=TXa1lj7FIZA&quot;&gt;Allocation Optimizer for Minimizing Power Consumption&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;using science on cpu power usage based on cpu utilization %.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;shifting-spotify-from-spreadsheets-to-backstage&quot;&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=lCgDiusuixM&quot;&gt;Shifting Spotify from Spreadsheets to Backstage&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;great service catalog. tons of plugins. costs. trigger incidents.
probably better than opslevel? but backstage needs to be in-cluster.
also wants to do things that &lt;code&gt;keptn&lt;&#x2F;code&gt; wants to do.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;building-catalogs-of-operators-for-olm-the-declarative-way&quot;&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=3_MnWTuuMN8&quot;&gt;Building Catalogs of Operators for OLM the Declarative Way&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;OLM craziness on top of controllers. &lt;code&gt;opm&lt;&#x2F;code&gt; serves a registry of controllers in a catalog...&lt;&#x2F;p&gt;
&lt;h3 id=&quot;faster-container-image-distribution&quot;&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=K2VlZE7lDjI&quot;&gt;Faster Container Image Distribution&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;tared image distribution problematic coz you have to download all of it. so two new systems:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;eStargz&lt;&#x2F;code&gt;: extension to OCI (backwards compat) - subproject of containerd&lt;&#x2F;li&gt;
&lt;li&gt;looks like 20-40% of pull speeds of original&lt;&#x2F;li&gt;
&lt;li&gt;can enable with &lt;code&gt;k3s server --snapshotter=stargz&lt;&#x2F;code&gt; (but need lazy pull enabled images)&lt;&#x2F;li&gt;
&lt;li&gt;can buildkit build using &lt;code&gt;buildx build -o type=registry,name=org&#x2F;repo:tag,oci-mediatypes=true,compression=estargz&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;also ways to convert images nerdctl ord ctr-remote&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;opencontainers&#x2F;image-spec&#x2F;issues&#x2F;815&quot;&gt;opencontainers&#x2F;image-spec#815&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;and&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;nydus&lt;&#x2F;code&gt; - future looking (incubator dragonfly sub-project)&lt;&#x2F;li&gt;
&lt;li&gt;next OCI image spec propoasal&lt;&#x2F;li&gt;
&lt;li&gt;improved lazy pulling, better ecosystem integration&lt;&#x2F;li&gt;
&lt;li&gt;benchmarks looks better than estargz?&lt;&#x2F;li&gt;
&lt;li&gt;harbor with auto-conversion&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;what-we-learned-from-reading-100-kubernetes-post-mortems&quot;&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=Bxnu3llBN20&quot;&gt;What We Learned from Reading 100+ Kubernetes Post-Mortems&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;nice quick failure stories&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;cronjob &lt;code&gt;concurrencyPolicy: Forbid&lt;&#x2F;code&gt; otherwise crashing causing pod duplication &quot;fork bombs&quot;&lt;&#x2F;li&gt;
&lt;li&gt;incorrect yaml placements discards bad yaml on bad CI&lt;&#x2F;li&gt;
&lt;li&gt;ingress: no &lt;code&gt;*&lt;&#x2F;code&gt; in &lt;code&gt;rules[].host&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;pods: no limits on 3rd party image -&amp;gt; took down cluster when it memory leaked&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;TL;DR: use good validation and good CD.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;community-related&quot;&gt;Community Related&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;from-storming-to-performing-growing-your-project-s-contributor-experience&quot;&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=yhlDYCdwg7I&quot;&gt;From Storming to Performing: Growing Your Project&#x27;s Contributor Experience&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;matt butcher. 4 stages on how they apply to OS:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;FORM&lt;&#x2F;strong&gt;: deal with prs positively &#x2F; identity &#x2F; website &#x2F; branding &#x2F; communications &#x2F; twitter (think early) &#x2F; maintainer guide docs&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;STORM&lt;&#x2F;strong&gt;: conflicts (dispute resolution &#x2F; CoC &#x2F; Governance &#x2F; coding standards &#x2F; contributors != employees (ask + thank)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;NORM&lt;&#x2F;strong&gt;: sharing responsibilities (issue mgmt &#x2F; triage &#x2F; delegate (find volunteers) &#x2F; standardising communication channels)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;PERFORM&lt;&#x2F;strong&gt;: optimising for long haul (retaining maintainers &#x2F; burnout &#x2F; turnover &#x2F; acquire new maintainers)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;at all stages; people are still volunteers, be kind, thank them, give them something (responsibility &#x2F; status) if possible
sometimes people need to step down. steps are not hard-delineated&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;adjourning&lt;&#x2F;strong&gt; could be the last step (nothing more to really do?)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;triage maintainer could be a good idea.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;kubernetes-sig-cli-intro-and-updates&quot;&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=2o7WDLiXrW4&quot;&gt;Kubernetes SIG CLI: Intro and Updates&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;strong&gt;scope:&lt;&#x2F;strong&gt; standardisation of cli framework &#x2F; posix compliance &#x2F; conventions - owns kubectl kui, cli-runtime cli-experimental cli-utils, krew kustomize&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;they are conceding that &lt;code&gt;apply --prune&lt;&#x2F;code&gt; is awful and has drawbacks. (alpha and probably won&#x27;t ever graduate). cli-utils has experiments for improvements.&lt;&#x2F;li&gt;
&lt;li&gt;all stuff use cobra (want to remove that) - want to pull apply into something people can use (so can use their stuff as library)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;kubectl&lt;&#x2F;code&gt; has many imperative things (like kubectl create - hard to maintain)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;kubectl&lt;&#x2F;code&gt; is bad on performance - too much serialization (json -&amp;gt; yaml -&amp;gt; json -&amp;gt; go structs ...) go is strictly typed without generics. memory usage balloons.&lt;&#x2F;li&gt;
&lt;li&gt;&quot;kubectl is a very difficult codebase to work on&quot; -_-&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;measuring-the-health-of-your-cncf-project&quot;&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=iO14TVtIemk&quot;&gt;Measuring the Health of Your CNCF Project&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;Via &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;contribute.cncf.io&#x2F;maintainers&#x2F;community&#x2F;project-health&#x2F;&quot;&gt;CNCF project-health&lt;&#x2F;a&gt; and &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;all.devstats.cncf.io&#x2F;d&#x2F;8&#x2F;dashboards?orgId=1&amp;amp;refresh=15m&quot;&gt;devstats cncf dashboards&lt;&#x2F;a&gt;. Project health metrics:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Responsiveness&lt;&#x2F;strong&gt; (more likely to retain contributors)
&lt;ul&gt;
&lt;li&gt;First Response time on PRs (1 hour good, 3 days bad)&lt;&#x2F;li&gt;
&lt;li&gt;Resolution (time to close - dislike this - autoclose bot)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Contributor Activity&lt;&#x2F;strong&gt; (community toxic? clear contribution policies makes it easier for new&#x2F;episodic contribs)
&lt;ul&gt;
&lt;li&gt;Contributor activity&lt;&#x2F;li&gt;
&lt;li&gt;Contributors new and episodic (shows growth of contributors)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Contributor Risk&lt;&#x2F;strong&gt; (low risk; many contributors, org diversity)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Project Velocity&lt;&#x2F;strong&gt; (decrease =&amp;gt; maturity or health issues)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Release Activity&lt;&#x2F;strong&gt; (regular cadence improves trust, quick security response)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Inclusivity&lt;&#x2F;strong&gt; (inclusive &#x2F; welcoming porjects attract + retain diverse contributors)
&lt;ul&gt;
&lt;li&gt;mentoring programs?
Timeframe? Can run sensibly if you have a regular release cadence, otherwise have to pick a time frame.
They have dashboards.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;turn-contributors-into-maintainers-with-tag-contributor-strategy&quot;&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=dI8Ti3ruvuo&quot;&gt;Turn Contributors Into Maintainers with TAG Contributor Strategy&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;produces &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;cncf&#x2F;project-template&quot;&gt;templates&lt;&#x2F;a&gt;, guide for governance (already used it!)&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;descriptive helps. goals need to align.&lt;&#x2F;li&gt;
&lt;li&gt;clarify what to do when making a PR - minimize manual steps&lt;&#x2F;li&gt;
&lt;li&gt;thank people, recognition programs (in releases), create a warming community&lt;&#x2F;li&gt;
&lt;li&gt;get people on the contribution ladder. linkerd has a linkerd hero. define the ladder (gamifies the task).&lt;&#x2F;li&gt;
&lt;li&gt;maintainers value code and are biased towards that. need people that have other skills. need someone to help with docs?&lt;&#x2F;li&gt;
&lt;li&gt;they have a &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;cncf&#x2F;project-template&#x2F;blob&#x2F;main&#x2F;CONTRIBUTOR_LADDER.md&quot;&gt;contributor ladder&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;governance == membership. people want to belong to something. proves to them that they are treated equally, and htey have ownership.&lt;&#x2F;li&gt;
&lt;li&gt;corporate contributors are shown they won&#x27;t be railroaded. investment ~~ influence.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;design-up-front-socializing-ideas-with-enhancement-proposals&quot;&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=XfRmvW48PHw&quot;&gt;Design Up Front: Socializing Ideas with Enhancement Proposals&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;On enhancement proposals &#x2F; RFCs. key takeaways were good:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;taking time to communicate your ideas clearly and getting feedback &#x2F; responding to that feedback makes your ideas better and makes you grow as an engineer.&lt;&#x2F;li&gt;
&lt;li&gt;helps improve stability, but can be intimidating.&lt;&#x2F;li&gt;
&lt;li&gt;need to invest in it, and follow up on reviewers and contributors.&lt;&#x2F;li&gt;
&lt;li&gt;the system dies if you don&#x27;t.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;cncf-technical-oversight-at-scale&quot;&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=T_ebn2qK95E&quot;&gt;CNCF Technical Oversight at Scale&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;creates TAGS (technical advisory groups). help cncf projects incubate&#x2F;graduate.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;we might be in the runtime tag; https:&#x2F;&#x2F;github.com&#x2F;cncf&#x2F;tag-runtime&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;cncf project updates talk: crossplane&#x2F;keda&#x2F;cilium&#x2F;flux&#x2F;opentelemetry incubating&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;flux uses ss apply, drift detection, stable apis (although their &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=8RFxYooMc5A&quot;&gt;GA Roadmap talk&lt;&#x2F;a&gt; had just docs&#x2F;test&#x2F;standardisation stuff)&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;prometheus high res histograms&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;keda.sh&#x2F;&quot;&gt;keda&lt;&#x2F;a&gt;: &lt;strong&gt;e&lt;&#x2F;strong&gt;vent &lt;strong&gt;d&lt;&#x2F;strong&gt;riven &lt;strong&gt;a&lt;&#x2F;strong&gt;utoscaler: listens to eventing systems -&amp;gt; translates to metrics -&amp;gt; turns it into cpu&#x2F;memory metrics &quot;tricking the system&quot;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;technical-oversight-committee&quot;&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=6H6QIxAjVvU&quot;&gt;Technical Oversight Committee&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;a public meeting. interesting just to get an overview of its goals. good links and reasonable goals (discussion was ok):&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;https:&#x2F;&#x2F;github.com&#x2F;cncf&#x2F;toc&#x2F;blob&#x2F;main&#x2F;PRINCIPLES.md&lt;&#x2F;li&gt;
&lt;li&gt;https:&#x2F;&#x2F;github.com&#x2F;cncf&#x2F;toc&#x2F;blob&#x2F;main&#x2F;process&#x2F;sandbox.md&lt;&#x2F;li&gt;
&lt;li&gt;https:&#x2F;&#x2F;github.com&#x2F;cncf&#x2F;tag-runtime (our target TAG)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;cncf-tag-runtime&quot;&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=Fjytrt5M7jg&quot;&gt;CNCF Tag-Runtime&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;Useful because it&#x27;s the TAG that seems likely for kube-rs donation. dims is a liaison!&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Scope areas limited so far, but &quot;open to expanding&quot;.&lt;&#x2F;li&gt;
&lt;li&gt;Contains: &lt;code&gt;krustlet&lt;&#x2F;code&gt; + &lt;code&gt;Akri&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;kubernetes-sig-docs&quot;&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=GDfcBF5et3Q&quot;&gt;Kubernetes SIG Docs&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;....is apprently mostly hugo + netlify. they have a contributor role of a PR wrangler (and rotate that).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;miscellaneous-notes&quot;&gt;Miscellaneous Notes&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;kubernetes.io&#x2F;blog&#x2F;2021&#x2F;04&#x2F;06&#x2F;podsecuritypolicy-deprecation-past-present-and-future&#x2F;&quot;&gt;PSPs are going away&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&quot;webassembly; neither web nor assembly&quot;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;kustomize&lt;&#x2F;code&gt; still a thing.. now with generators + transformer pipelines via crds..&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sieve-project&#x2F;sieve&quot;&gt;sieve-project&lt;&#x2F;a&gt; (from talk on &lt;a href=&quot;https:&#x2F;&#x2F;clux.dev&#x2F;post&#x2F;2021-11-06-kubecon-la-log&#x2F;(https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=6JnhjgOaZVk)&quot;&gt;kubernetes controller testing&lt;&#x2F;a&gt;) is interesting, but kind of insane sounding - hope we can make this nicer in kube..&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=PKhQXjb6cB4&quot;&gt;people using linkerd&lt;&#x2F;a&gt; to solve the grpc load balancing problem&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Evolution of kube</title>
        <published>2021-02-28T00:00:00+00:00</published>
        <updated>2021-02-28T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://clux.dev/post/2021-02-28-kube-evolution/"/>
        <id>https://clux.dev/post/2021-02-28-kube-evolution/</id>
        
        <content type="html" xml:base="https://clux.dev/post/2021-02-28-kube-evolution/">&lt;p&gt;After a quarter year of extensive improvements to &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;kube-rs&quot;&gt;kube&lt;&#x2F;a&gt;, it&#x27;s time to take a birds-eye view of what we got, and showcase some of the recent improvements. After all, it&#x27;s been about &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;kube-rs&#x2F;releases&quot;&gt;40 kube releases&lt;&#x2F;a&gt;, one major version of &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;tokio.rs&#x2F;&quot;&gt;tokio&lt;&#x2F;a&gt;, one &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;kube-rs&#x2F;graphs&#x2F;contributors&quot;&gt;extremely prolific new contributor&lt;&#x2F;a&gt;, and one &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=JmwnRcc2m2A&quot;&gt;kubecon talk&lt;&#x2F;a&gt; since my (very outdated) &lt;a href=&quot;&#x2F;post&#x2F;2019-06-04-towards-a-generic-kube-client&quot;&gt;last blog post&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;crates&quot;&gt;Crates&lt;&#x2F;h2&gt;
&lt;p&gt;As of &lt;code&gt;0.51.0&lt;&#x2F;code&gt;, With modules and crates now delineated better, there&#x27;s now multiple crates in the repository:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;kube&lt;&#x2F;strong&gt;: &lt;code&gt;Api&lt;&#x2F;code&gt; types, and &lt;code&gt;Client&lt;&#x2F;code&gt; library with from a &lt;code&gt;Config&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;kube-derive&lt;&#x2F;strong&gt;: proc-macro to derive &lt;code&gt;CustomResource&lt;&#x2F;code&gt; necessities from a struct&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;kube-runtime&lt;&#x2F;strong&gt;: stream based controller runtime&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Today, we will focus on &lt;code&gt;kube&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;kube-api&quot;&gt;kube::Api&lt;&#x2F;h3&gt;
&lt;p&gt;Let&#x27;s start with the basic feature you&#x27;d expect from a client library, the &lt;strong&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;kube&#x2F;latest&#x2F;kube&#x2F;struct.Api.html&quot;&gt;Api&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Its goals:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;allow interaction with any kubernetes resource&lt;&#x2F;li&gt;
&lt;li&gt;stay compatible with any struct from &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;arnavion.github.io&#x2F;k8s-openapi&#x2F;v0.11.x&#x2F;k8s_openapi&#x2F;api&#x2F;index.html&quot;&gt;k8s-openapi&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;defer IO handling to the injected &lt;code&gt;Client&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;map &lt;code&gt;Client&lt;&#x2F;code&gt; output through &lt;code&gt;serde&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;We make this generic by making &lt;strong&gt;two assumptions about kubernetes&lt;&#x2F;strong&gt;:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;all objects have metadata from &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kubernetes&#x2F;apimachinery&#x2F;blob&#x2F;master&#x2F;pkg&#x2F;apis&#x2F;meta&#x2F;v1&#x2F;types.go&quot;&gt;apimachinery&#x2F;meta&#x2F;types&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;client-go&lt;&#x2F;code&gt; api generation is generics in disguise (&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kubernetes&#x2F;client-go&#x2F;tree&#x2F;6a251876df7908e387143b57eb15bcbd0d6886e0&#x2F;kubernetes&#x2F;typed&quot;&gt;generated api&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;We won&#x27;t cover this now, but you can watch the talk from &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=JmwnRcc2m2A&quot;&gt;KubeCon2020: The Hidden Generics in Kubernetes&#x27; API&lt;&#x2F;a&gt; (or &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;clux.github.io&#x2F;kubecon2020&quot;&gt;read the slides&lt;&#x2F;a&gt;).&lt;&#x2F;p&gt;
&lt;p&gt;Our &lt;code&gt;Api&lt;&#x2F;code&gt; has been remarkably stable over the past year, despite the internals being restructured heavily.&lt;&#x2F;p&gt;
&lt;p&gt;One improvement is to the ergonomics of patching, which now has a &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;kube&#x2F;0.51.0&#x2F;kube&#x2F;api&#x2F;enum.Patch.html&quot;&gt;typed Patch enum&lt;&#x2F;a&gt; for selecting the patch type.&lt;&#x2F;p&gt;
&lt;p&gt;Despite full support, we always advocate for &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;kubernetes.io&#x2F;blog&#x2F;2020&#x2F;04&#x2F;01&#x2F;kubernetes-1.18-feature-server-side-apply-beta-2&#x2F;&quot;&gt;server-side apply&lt;&#x2F;a&gt; everywhere as a lot of the awkward issues with local patching are generally &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kubernetes&#x2F;kubernetes&#x2F;issues&#x2F;58414&quot;&gt;swept under the rug&lt;&#x2F;a&gt; with the clearly superior patch mode present in newer versions of kubernetes.&lt;&#x2F;p&gt;
&lt;p&gt;Here&#x27;s how patching looks today:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;rust&quot; class=&quot;language-rust z-code&quot;&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-annotation z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-annotation z-rust&quot;&gt;#&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-annotation z-rust&quot;&gt;tokio&lt;&#x2F;span&gt;::&lt;span class=&quot;z-variable z-annotation z-rust&quot;&gt;main&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;async &lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-storage z-type z-function z-rust&quot;&gt;fn&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-function z-rust&quot;&gt;main&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt; &lt;span class=&quot;z-meta z-function z-return-type z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-path z-rust&quot;&gt;anyhow&lt;span class=&quot;z-punctuation z-accessor z-rust&quot;&gt;::&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-generic z-rust&quot;&gt;&lt;span class=&quot;z-support z-type z-rust&quot;&gt;Result&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-begin z-rust&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-end z-rust&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-rust&quot;&gt;{&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-storage z-type z-rust&quot;&gt;let&lt;&#x2F;span&gt; client &lt;span class=&quot;z-keyword z-operator z-assignment z-rust&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-path z-rust&quot;&gt;Client&lt;span class=&quot;z-punctuation z-accessor z-rust&quot;&gt;::&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;try_default&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-rust&quot;&gt;.&lt;&#x2F;span&gt;await&lt;span class=&quot;z-keyword z-operator z-rust&quot;&gt;?&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-rust&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-storage z-type z-rust&quot;&gt;let&lt;&#x2F;span&gt; foos&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-generic z-rust&quot;&gt;Api&lt;span class=&quot;z-punctuation z-definition z-generic z-begin z-rust&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;Foo&lt;span class=&quot;z-punctuation z-definition z-generic z-end z-rust&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-rust&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-path z-rust&quot;&gt;Api&lt;span class=&quot;z-punctuation z-accessor z-rust&quot;&gt;::&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;namespaced&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;client&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;default&lt;span class=&quot;z-punctuation z-definition z-string z-end z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-rust&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-storage z-type z-rust&quot;&gt;let&lt;&#x2F;span&gt; ss_apply &lt;span class=&quot;z-keyword z-operator z-assignment z-rust&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-path z-rust&quot;&gt;PatchParams&lt;span class=&quot;z-punctuation z-accessor z-rust&quot;&gt;::&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;apply&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;kube&lt;span class=&quot;z-punctuation z-definition z-string z-end z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-rust&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-function z-rust&quot;&gt;force&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-rust&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-storage z-type z-rust&quot;&gt;let&lt;&#x2F;span&gt; patch &lt;span class=&quot;z-keyword z-operator z-assignment z-rust&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-path z-rust&quot;&gt;serde_json&lt;span class=&quot;z-punctuation z-accessor z-rust&quot;&gt;::&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;json&lt;span class=&quot;z-keyword z-operator z-logical z-rust&quot;&gt;!&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-rust&quot;&gt;{&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;        &lt;span class=&quot;z-string z-quoted z-double z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;apiVersion&lt;span class=&quot;z-punctuation z-definition z-string z-end z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;clux.dev&#x2F;v1&lt;span class=&quot;z-punctuation z-definition z-string z-end z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;,&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;        &lt;span class=&quot;z-string z-quoted z-double z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;kind&lt;span class=&quot;z-punctuation z-definition z-string z-end z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;Foo&lt;span class=&quot;z-punctuation z-definition z-string z-end z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;,&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;        &lt;span class=&quot;z-string z-quoted z-double z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;spec&lt;span class=&quot;z-punctuation z-definition z-string z-end z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-rust&quot;&gt;{&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;            &lt;span class=&quot;z-string z-quoted z-double z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;name&lt;span class=&quot;z-punctuation z-definition z-string z-end z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;foo&lt;span class=&quot;z-punctuation z-definition z-string z-end z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;,&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;            &lt;span class=&quot;z-string z-quoted z-double z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;replicas&lt;span class=&quot;z-punctuation z-definition z-string z-end z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-rust&quot;&gt;2&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;        &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-rust&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-rust&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-rust&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    foos&lt;span class=&quot;z-punctuation z-accessor z-dot z-rust&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-function z-rust&quot;&gt;patch&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;myfoo&lt;span class=&quot;z-punctuation z-definition z-string z-end z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-bitwise z-rust&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;ss_apply&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-bitwise z-rust&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-path z-rust&quot;&gt;Patch&lt;span class=&quot;z-punctuation z-accessor z-rust&quot;&gt;::&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;Apply&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;patch&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-rust&quot;&gt;.&lt;&#x2F;span&gt;await&lt;span class=&quot;z-keyword z-operator z-rust&quot;&gt;?&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-rust&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-support z-type z-rust&quot;&gt;Ok&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-rust&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The biggest &lt;code&gt;Api&lt;&#x2F;code&gt; improvement recently was the inclusion of the most complicated &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;kube-rs&#x2F;blob&#x2F;master&#x2F;kube&#x2F;src&#x2F;api&#x2F;subresource.rs&quot;&gt;subresources&lt;&#x2F;a&gt;: &lt;code&gt;Api::exec&lt;&#x2F;code&gt; and &lt;code&gt;Api::attach&lt;&#x2F;code&gt;, and these actually uses a different protocol; &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;kube-rs&#x2F;issues&#x2F;229&quot;&gt;websockets&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Despite the complexities, these details have ended up being generally invisible to the user; you can hit &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;kube&#x2F;0.51.0&#x2F;kube&#x2F;struct.Api.html#method.exec&quot;&gt;Api::exec&lt;&#x2F;a&gt; like any other method, and you&#x27;ll get the expected streams you can pipe from and pipe to:&lt;&#x2F;p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;kube master: optional websocket support for exec&#x2F;attach with &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;tokio_rs?ref_src=twsrc%5Etfw&quot;&gt;@tokio_rs&lt;&#x2F;a&gt; 1.0. Pipe streams to&#x2F;from k8s pods. &lt;a href=&quot;https:&#x2F;&#x2F;t.co&#x2F;WhSFlPmm60&quot;&gt;pic.twitter.com&#x2F;WhSFlPmm60&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;&amp;mdash; eirik ᐸ&amp;#39;aᐳ (@sszynrae) &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;sszynrae&#x2F;status&#x2F;1346122892707319810?ref_src=twsrc%5Etfw&quot;&gt;January 4, 2021&lt;&#x2F;a&gt;&lt;&#x2F;blockquote&gt; &lt;script async src=&quot;https:&#x2F;&#x2F;platform.twitter.com&#x2F;widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;&#x2F;script&gt;
&lt;h3 id=&quot;kube-config&quot;&gt;kube::Config&lt;&#x2F;h3&gt;
&lt;p&gt;Not to be confused with the file in your home directory, our &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;kube&#x2F;latest&#x2F;kube&#x2F;struct.Config.html&quot;&gt;Config&lt;&#x2F;a&gt; is actually just the relevant parameters we extract from the &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;kube&#x2F;latest&#x2F;kube&#x2F;config&#x2F;struct.Kubeconfig.html&quot;&gt;kubeconfig file&lt;&#x2F;a&gt; (or &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;kube&#x2F;latest&#x2F;kube&#x2F;struct.Config.html#method.from_cluster_env&quot;&gt;cluster evars&lt;&#x2F;a&gt; when in-cluster), to help us create a &lt;code&gt;Client&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;You generally won&#x27;t need to instantiate any of these though, nor do you need a &lt;code&gt;Config&lt;&#x2F;code&gt; (as shown above), because &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;kube&#x2F;0.51.0&#x2F;kube&#x2F;struct.Client.html#method.try_default&quot;&gt;Client::try_default&lt;&#x2F;a&gt; will infer the correct one.&lt;&#x2F;p&gt;
&lt;p&gt;Recent updates to stay compatible with the different config variants which &lt;code&gt;kubectl&lt;&#x2F;code&gt; supports, means we now support &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;kube-rs&#x2F;issues&#x2F;132&quot;&gt;stacked kubeconfigs&lt;&#x2F;a&gt;, and &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;kube-rs&#x2F;issues&#x2F;440&quot;&gt;multi-document kubeconfigs&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;kube-client&quot;&gt;kube::Client&lt;&#x2F;h3&gt;
&lt;p&gt;One of the most updated parts of &lt;code&gt;kube&lt;&#x2F;code&gt; this year, the &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;kube&#x2F;latest&#x2F;kube&#x2F;struct.Client.html&quot;&gt;&lt;code&gt;Client&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; has undergone significant surgery.
It is now entirely concerned with the &lt;strong&gt;protocol&lt;&#x2F;strong&gt;, and handles the serialization plumbing between the &lt;code&gt;Api&lt;&#x2F;code&gt; and the apiserver.&lt;&#x2F;p&gt;
&lt;p&gt;Many improvements are only really appreciable internally;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;watch&lt;&#x2F;strong&gt; buffering is now using a &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;tokio-util&#x2F;0.6.3&#x2F;tokio_util&#x2F;codec&#x2F;index.html&quot;&gt;tokio codec&lt;&#x2F;a&gt; to give us a much more readable &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;kube&#x2F;0.51.0&#x2F;src&#x2F;kube&#x2F;client&#x2F;mod.rs.html#204-272&quot;&gt;streaming event parser&lt;&#x2F;a&gt;, while still returning a &lt;code&gt;TryStream&amp;lt;Item = Result&amp;lt;WatchEvent&amp;lt;T&amp;gt;&amp;gt;&amp;gt;&lt;&#x2F;code&gt; for &lt;code&gt;Api::watch&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;kube&#x2F;0.51.0&#x2F;kube&#x2F;struct.Client.html#method.connect&quot;&gt;Client::connect&lt;&#x2F;a&gt; added to give a way to &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;hyper&#x2F;0.14.4&#x2F;hyper&#x2F;upgrade&#x2F;index.html&quot;&gt;hyper::upgrade&lt;&#x2F;a&gt; an existing &lt;code&gt;http&lt;&#x2F;code&gt; connection (&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;developer.mozilla.org&#x2F;en-US&#x2F;docs&#x2F;Web&#x2F;HTTP&#x2F;Headers&#x2F;Upgrade&quot;&gt;wtf is upgrading?&lt;&#x2F;a&gt;) to grant a streaming websocket connection from the existing http library. This is the secret sauce behind &lt;code&gt;Api::exec&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Websockets is using &lt;code&gt;tokio-tungstenite&lt;&#x2F;code&gt;, a dependency so light-weight it&#x27;s &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;snapview&#x2F;tokio-tungstenite&#x2F;blob&#x2F;master&#x2F;Cargo.toml&quot;&gt;only pulling&lt;&#x2F;a&gt; in &lt;code&gt;tungstenite&lt;&#x2F;code&gt; without its &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;snapview&#x2F;tungstenite-rs&#x2F;blob&#x2F;master&#x2F;Cargo.toml&quot;&gt;default-features&lt;&#x2F;a&gt;. Crucially, this lets us avoid having yet another way to specify tls stacks and cause a corresponding explosion of features (&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;cargo&#x2F;issues&#x2F;8832&quot;&gt;weak-dep-features&lt;&#x2F;a&gt; plz).&lt;&#x2F;p&gt;
&lt;p&gt;Of course, supporting multiple protocols, tls stacks, and certs from kubeconfigs means that there&#x27;s considerable tls handling in kube. Fortunately, we have mostly managed to confine it to &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;kube-rs&#x2F;blob&#x2F;11f60c7c5e793a6badc6f8bf3792c0a4e80a500d&#x2F;kube&#x2F;src&#x2F;service&#x2F;tls.rs&quot;&gt;one cursed file&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;..And if websocket support was not enough:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Every api call now goes through &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;kube&#x2F;0.51.0&#x2F;src&#x2F;kube&#x2F;client&#x2F;mod.rs.html#70-91&quot;&gt;Client::send&lt;&#x2F;a&gt;&#x27;s new Service, rather than &lt;code&gt;reqwest::send&lt;&#x2F;code&gt;, and we no longer depend on &lt;code&gt;reqwest&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;kube-service&quot;&gt;kube::Service&lt;&#x2F;h3&gt;
&lt;p&gt;The new &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;kube&#x2F;0.51.0&#x2F;kube&#x2F;struct.Service.html&quot;&gt;Service&lt;&#x2F;a&gt; - injected into the &lt;code&gt;Client&lt;&#x2F;code&gt;, and constructed from an &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;kube&#x2F;0.51.0&#x2F;src&#x2F;kube&#x2F;config&#x2F;mod.rs.html#51-62&quot;&gt;arbitrary&lt;&#x2F;a&gt; &lt;code&gt;Config&lt;&#x2F;code&gt; - is what actually deals with the processing of the request call to turn it into a response.&lt;&#x2F;p&gt;
&lt;p&gt;The &lt;code&gt;Service&lt;&#x2F;code&gt; creates a series of ordered &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;kube&#x2F;0.51.0&#x2F;src&#x2F;kube&#x2F;service&#x2F;mod.rs.html#71-125&quot;&gt;&lt;strong&gt;layers&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt; to be executed for each request:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;Authentication (extracting tokens, possibly talking to auth providers)&lt;&#x2F;li&gt;
&lt;li&gt;Url + header mapping from Config to http request&lt;&#x2F;li&gt;
&lt;li&gt;Dealing with optional compression&lt;&#x2F;li&gt;
&lt;li&gt;Send it to a &lt;code&gt;HyperClient&lt;&#x2F;code&gt; configured with a &lt;code&gt;Connector&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;The connector for &lt;code&gt;hyper&lt;&#x2F;code&gt; deals with TLS stack selection + Timeouts + &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;kube-rs&#x2F;pull&#x2F;438&quot;&gt;proxying&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Why this abstraction?&lt;&#x2F;strong&gt; Well, primarily, less entangling business logic with IO (&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;sans-io.readthedocs.io&#x2F;&quot;&gt;Sans-IO&lt;&#x2F;a&gt; goals), and &lt;strong&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;tower-service&#x2F;0.3.1&#x2F;tower_service&#x2F;trait.Service.html&quot;&gt;tower&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt; provides a robust way to move in that direction.&lt;&#x2F;p&gt;
&lt;p&gt;There&#x27;s also code-reuse of &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;tower&#x2F;0.4.6&#x2F;tower&#x2F;#modules&quot;&gt;common service layers&lt;&#x2F;a&gt; (effectively middleware), as well as the ability to &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;tower-test&#x2F;0.4.0&#x2F;tower_test&#x2F;macro.assert_request_eq.html&quot;&gt;mock services out of the box&lt;&#x2F;a&gt;, something that will help create a &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;kube-rs&#x2F;issues&#x2F;429#issuecomment-782957601&quot;&gt;better mocking setup&lt;&#x2F;a&gt; down the line.&lt;&#x2F;p&gt;
&lt;p&gt;For now, however, the end result is a more light-weight http client: &lt;strong&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hyperium&#x2F;hyper#hyper&quot;&gt;hyper&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt; over &lt;code&gt;reqwest&lt;&#x2F;code&gt;, and without changing the core api boundaries (inserting &lt;code&gt;Service&lt;&#x2F;code&gt; between &lt;code&gt;Client&lt;&#x2F;code&gt; and &lt;code&gt;Config&lt;&#x2F;code&gt; will not affect the vast majority of users who use &lt;code&gt;Client::try_default&lt;&#x2F;code&gt; as the main start point).&lt;&#x2F;p&gt;
&lt;h3 id=&quot;credits&quot;&gt;Credits&lt;&#x2F;h3&gt;
&lt;p&gt;If you looked at the &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;kube-rs&#x2F;graphs&#x2F;contributors&quot;&gt;contributors graph&lt;&#x2F;a&gt;, you&#x27;ll see we have a new maintainer.&lt;&#x2F;p&gt;
&lt;p&gt;How did their contributions spike so quickly? Well, check out the prs for &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;kube-rs&#x2F;pull&#x2F;394&quot;&gt;tower + hyper rearchitecture&lt;&#x2F;a&gt;, and &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;kube-rs&#x2F;pull&#x2F;360&quot;&gt;websocket support&lt;&#x2F;a&gt;. Imagine landing those hugely ambitious beasts &lt;em&gt;so quickly&lt;&#x2F;em&gt;, and still managing to &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;kube-rs&#x2F;pulls?q=is%3Apr+is%3Aclosed+author%3Akazk&quot;&gt;merge 20+ more prs since january&lt;&#x2F;a&gt; 🤯&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;...So&lt;&#x2F;em&gt;, having mostly &lt;em&gt;project-managered&lt;&#x2F;em&gt; the ship the past &lt;strong&gt;two months&lt;&#x2F;strong&gt;, it&#x27;s important to give due &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;kube-rs&#x2F;pull&#x2F;411#issuecomment-777086158&quot;&gt;credit&lt;&#x2F;a&gt; while we appreciate how far we&#x27;ve come. Huge thanks to &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kazk&quot;&gt;kazk&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;In fact, from the &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kubernetes&#x2F;community&#x2F;blob&#x2F;master&#x2F;contributors&#x2F;design-proposals&#x2F;api-machinery&#x2F;csi-new-client-library-procedure.md#client-capabilities&quot;&gt;client capabilities document&lt;&#x2F;a&gt;, we are &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;kube-rs&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3Aclient-gold&quot;&gt;almost&lt;&#x2F;a&gt; at &lt;img style=&quot;display:inline&quot; alt=&quot;client gold&quot; src=&quot;https:&#x2F;&#x2F;img.shields.io&#x2F;badge&#x2F;Kubernetes%20client-Gold-blue.svg?style=plastic&amp;colorB=FFD700&amp;colorA=306CE8&quot;&#x2F;&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;end&quot;&gt;End&lt;&#x2F;h2&gt;
&lt;p&gt;TL;DR: A lot has happened. We have dissected parts of &lt;code&gt;kube&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;As a kind of &lt;strong&gt;conclusion&lt;&#x2F;strong&gt;, I would just like to note &lt;strong&gt;how much easier&lt;&#x2F;strong&gt; these complex problems are to tackle in rust now thanks to &lt;strong&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;tokio.rs&#x2F;#tk-lib-tokio&quot;&gt;tokio.rs&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt;. The ecosystem is fantastic now.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;future-addendum&quot;&gt;Future Addendum&lt;&#x2F;h2&gt;
&lt;p&gt;Some key kube related issues that I personally hope will be resolved in 2021:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;kube-rs&#x2F;issues&#x2F;428&quot;&gt;ergonomics &#x2F; utils&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;kube-rs&#x2F;issues&#x2F;429&quot;&gt;testing &#x2F; mocking&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;kube-rs&#x2F;discussions&#x2F;423&quot;&gt;tracing story&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;dyn api &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;kube-rs&#x2F;pull&#x2F;385&quot;&gt;improvements&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Arnavion&#x2F;k8s-openapi&#x2F;issues&#x2F;72&quot;&gt;less Options in generated types&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Without being able to give any guarantees. Volunteer work, you know.&lt;&#x2F;p&gt;
&lt;p&gt;Speaking of; &lt;strong&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;kube-rs&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22&quot;&gt;help&lt;&#x2F;a&gt; is instrumental&lt;&#x2F;strong&gt; for moving things forward, and always appreciated. Even if you are just fixing &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;kube&#x2F;latest&#x2F;kube&#x2F;&quot;&gt;docs&lt;&#x2F;a&gt; &#x2F; &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;kube-rs&#x2F;tree&#x2F;master&#x2F;examples&quot;&gt;examples&lt;&#x2F;a&gt; or asking questions.&lt;&#x2F;p&gt;
&lt;p&gt;Check our &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;kube-rs&#x2F;discussions&#x2F;422&quot;&gt;discussions&lt;&#x2F;a&gt;, the &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;tokio&quot;&gt;tokio discord&lt;&#x2F;a&gt;, or the &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;kube-rs&#x2F;issues&quot;&gt;issues&lt;&#x2F;a&gt; if interested. Take care ✨🤗&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Antimagic and Force Cubes</title>
        <published>2020-10-04T00:00:00+00:00</published>
        <updated>2020-10-04T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://clux.dev/post/2020-10-04-antimagic-revisited/"/>
        <id>https://clux.dev/post/2020-10-04-antimagic-revisited/</id>
        
        <content type="html" xml:base="https://clux.dev/post/2020-10-04-antimagic-revisited/">&lt;p&gt;In 2018, we introduced the explosive &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;roll20.net&#x2F;compendium&#x2F;dnd5e&#x2F;Cube%20of%20Force&quot;&gt;Cube of Force&lt;&#x2F;a&gt; into our home campaign. We really did not expect it to cause us&#x2F;me that much grief at the time, but despite long canonicalisation meetings, our interpretation was not even internally consistent.&lt;&#x2F;p&gt;
&lt;p&gt;At the time we dealt with this by nerfing Cube down into the ground gradually rolling out alternatives, but it&#x27;s time we dug into the concept of D&amp;amp;D &lt;code&gt;antimagic&lt;&#x2F;code&gt; properly.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;words-of-wording&quot;&gt;Words of wording&lt;&#x2F;h2&gt;
&lt;p&gt;Spell combinations are an inherently powerful thing in D&amp;amp;D, and so any spells that &quot;cancels out magic&quot; - potentially interacting with &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;5thsrd.org&#x2F;spellcasting&#x2F;spells&#x2F;dispel_magic&#x2F;&quot;&gt;Dispel Magic&lt;&#x2F;a&gt; - must be carefully worded. And while &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;company.wizards.com&#x2F;&quot;&gt;Wizards&lt;&#x2F;a&gt; does a good job with this, there are still ambiguities that end up at &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;JeremyECrawford&quot;&gt;JeremyECrawford&lt;&#x2F;a&gt;&#x27;s table:&lt;&#x2F;p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Have a D&amp;amp;D rules question? There&amp;#39;s a good chance I&amp;#39;ve answered it!&lt;br&gt;&lt;br&gt;1. Search the Sage Advice Compendium: &lt;a href=&quot;https:&#x2F;&#x2F;t.co&#x2F;nlIvbEC7D7&quot;&gt;https:&#x2F;&#x2F;t.co&#x2F;nlIvbEC7D7&lt;&#x2F;a&gt;.&lt;br&gt;2. Search Twitter, typing my handle (&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;JeremyECrawford?ref_src=twsrc%5Etfw&quot;&gt;@JeremyECrawford&lt;&#x2F;a&gt;) and a relevant term, like &amp;quot;Twinned Spell.&amp;quot;&lt;br&gt;3. Search &lt;a href=&quot;https:&#x2F;&#x2F;t.co&#x2F;5oYKuatgLB&quot;&gt;https:&#x2F;&#x2F;t.co&#x2F;5oYKuatgLB&lt;&#x2F;a&gt;. &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;hashtag&#x2F;DnD?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#DnD&lt;&#x2F;a&gt; &lt;a href=&quot;https:&#x2F;&#x2F;t.co&#x2F;JXtO9catjP&quot;&gt;pic.twitter.com&#x2F;JXtO9catjP&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;&amp;mdash; Jeremy Crawford (@JeremyECrawford) &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;JeremyECrawford&#x2F;status&#x2F;931742038474727424?ref_src=twsrc%5Etfw&quot;&gt;November 18, 2017&lt;&#x2F;a&gt;&lt;&#x2F;blockquote&gt; &lt;script async src=&quot;https:&#x2F;&#x2F;platform.twitter.com&#x2F;widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;&#x2F;script&gt;
&lt;!--shortcode fails on my hugo install..&lt; tweet 931742038474727424 &gt;--&gt;
&lt;p&gt;the referenced &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;dnd.wizards.com&#x2F;articles&#x2F;sage-advice&#x2F;sage-advice-compendium&quot;&gt;Sage Advice Compendium&lt;&#x2F;a&gt; contains 21 pages of Q&#x2F;A as well as links to erratas for published books.&lt;&#x2F;p&gt;
&lt;p&gt;We&#x27;ll focus on two spells that deal with antimagic, the philosophy and intent behind them, then we will tackle the Cube.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;forcecage&quot;&gt;ForceCage&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;roll20.net&#x2F;compendium&#x2F;dnd5e&#x2F;Forcecage&quot;&gt;ForceCage&lt;&#x2F;a&gt; (or &lt;code&gt;FC&lt;&#x2F;code&gt; for short) first; is a &lt;code&gt;7th level&lt;&#x2F;code&gt; mechanism to trap players while also limiting &lt;strong&gt;how&lt;&#x2F;strong&gt; spells can interact with trapped players:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;FC&lt;&#x2F;code&gt;; &quot;creating a solid barrier that prevents any matter from passing through it and blocking any Spells cast into or out of the area&quot;.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;This wording only mentions &lt;strong&gt;the casting&lt;&#x2F;strong&gt;; i.e. the &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.dndbeyond.com&#x2F;sources&#x2F;basic-rules&#x2F;spellcasting#Targets&quot;&gt;line from the caster to the point of origin&lt;&#x2F;a&gt;. &lt;code&gt;Fireball&lt;&#x2F;code&gt;&#x27;s blast would extend through, and any damaging concentration spell sitting in the middle before the cage comes down would also keep ticking &lt;strong&gt;every round&lt;&#x2F;strong&gt; without proper recourse.&lt;&#x2F;p&gt;
&lt;p&gt;It is a deadly combination when used with spells like &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.dnd-spells.com&#x2F;spell&#x2F;hunger-of-hadar&quot;&gt;Hunger of Hadar&lt;&#x2F;a&gt; (10 rounds), &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;roll20.net&#x2F;compendium&#x2F;dnd5e&#x2F;Cloudkill&quot;&gt;Cloudkill&lt;&#x2F;a&gt; (100 rounds), or &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;5thsrd.org&#x2F;spellcasting&#x2F;spells&#x2F;incendiary_cloud&#x2F;&quot;&gt;higher level clouds if available&lt;&#x2F;a&gt;. Oh, but we&#x27;ll just dispel..&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;FC&lt;&#x2F;code&gt;: This spell can&#x27;t be dispelled by Dispel Magic.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;imgs&#x2F;antimagic&#x2F;hadar.webp&quot; alt=&quot;hadar&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Scary prospect though it may be, you can wrangle yourself out of it with using; &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;roll20.net&#x2F;compendium&#x2F;dnd5e&#x2F;Plane%20Shift#content&quot;&gt;Plane Shift&lt;&#x2F;a&gt; &#x2F; &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;roll20.net&#x2F;compendium&#x2F;dnd5e&#x2F;Teleport#content&quot;&gt;Teleport&lt;&#x2F;a&gt; &#x2F; &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;roll20.net&#x2F;compendium&#x2F;dnd5e&#x2F;Misty%20Step#content&quot;&gt;Misty Step&lt;&#x2F;a&gt; &#x2F; &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;roll20.net&#x2F;compendium&#x2F;dnd5e&#x2F;Dimension%20Door#content&quot;&gt;Dimension Door&lt;&#x2F;a&gt; on a successful charisma check. All it takes is for one player to get outside and stop the mage from hurling spell effects through the boundary. It is also possible to &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;roll20.net&#x2F;compendium&#x2F;dnd5e&#x2F;Disintegrate&quot;&gt;Disintegrate&lt;&#x2F;a&gt; it.&lt;&#x2F;p&gt;
&lt;p&gt;Still it highlights a difference with other antimagic. The barrier is not perfect, and the &quot;effect&quot; of the spell &lt;em&gt;leeches through&lt;&#x2F;em&gt; the barrier of the cage, which is perhaps somewhat confusing when you can sometimes interpret the spell effect as &lt;em&gt;matter&lt;&#x2F;em&gt;. This is irrelevant as we&#x27;ll see later; while a spell caster is shaping the underlying magical fabric; the effect is a &lt;em&gt;magical energy&lt;&#x2F;em&gt;.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Tip: Try to catch yourself if you are trying to invoke special relativity or thermodynamics in D&amp;amp;D. Physics is not tied to linguistic constructs.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h2 id=&quot;antimagic-field&quot;&gt;Antimagic Field&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;roll20.net&#x2F;compendium&#x2F;dnd5e&#x2F;Antimagic%20Field&quot;&gt;Antimagic Field&lt;&#x2F;a&gt; (or &lt;code&gt;AMF&lt;&#x2F;code&gt; for short), is an &lt;code&gt;8th level&lt;&#x2F;code&gt; sphere that disallows spells cast in&#x2F;out &lt;strong&gt;as well as&lt;&#x2F;strong&gt; magical effects leeching through! The reason for the great increase in cancellation power is justified by its higher level, careful wording, and its lack of entrapment (people can walk out of it unlike &lt;code&gt;FC&lt;&#x2F;code&gt;).&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;AMF&lt;&#x2F;code&gt;: Any active spell or other magical Effect on a creature or an object in the Sphere is suppressed while the creature or object is in it.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;The blast of a fireball detonating outside an &lt;code&gt;AMF&lt;&#x2F;code&gt; simply disappears into nothing at the boundary of its sphere of influence.&lt;&#x2F;p&gt;
&lt;p&gt;But what happens if you throw a &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;roll20.net&#x2F;compendium&#x2F;dnd5e&#x2F;Delayed%20Blast%20Fireball&quot;&gt;Delayed Blast Fireball&lt;&#x2F;a&gt; inside an area, and put an &lt;code&gt;AMF&lt;&#x2F;code&gt; around the area, while powering up the fireball from the outside? This, really claws at the heart of the word &lt;strong&gt;&quot;suppressed&quot;&lt;&#x2F;strong&gt;; is the fireball bead still there? Will it keep working after the &lt;code&gt;AMF&lt;&#x2F;code&gt; disappears? Has it powered up in the mean time? Has the duration elapsed?&lt;&#x2F;p&gt;
&lt;p&gt;This is a harder corner-case, and requires some more guidance. And as far as corner-cases go, it&#x27;s not alone, just think about:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;class abilities like paladin&#x27;s smite, monk&#x27;s ki points, druid shapeshifting&lt;&#x2F;li&gt;
&lt;li&gt;monster abilities like dragon&#x27;s breath, beholder rays&lt;&#x2F;li&gt;
&lt;li&gt;summoned creatures&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;To answer whether these count as &lt;em&gt;magical&lt;&#x2F;em&gt;, we need some disambiguation.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;what-is-a-magical-effect&quot;&gt;What is a magical effect?&lt;&#x2F;h2&gt;
&lt;p&gt;The best source here come from the &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;dnd.wizards.com&#x2F;articles&#x2F;features&#x2F;tad-williams-storytelling&quot;&gt;interview with Crawford from 2017&lt;&#x2F;a&gt; about antimagic and what they mean by &lt;code&gt;suppressing&lt;&#x2F;code&gt; magic.&lt;&#x2F;p&gt;
&lt;p&gt;The short answer is that spells are &lt;strong&gt;not dispelled&lt;&#x2F;strong&gt;, they temporarily stop working, and the &lt;strong&gt;duration of spells keeps ticking&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;He justifies it by describing magic in the D&amp;amp;D world as always existing in the background; a loose weave. Magical effects is &lt;strong&gt;this fabric&lt;&#x2F;strong&gt; formed into a particular shape; &lt;strong&gt;background magic woven into an effect - using a formula&lt;&#x2F;strong&gt;. &quot;AMF introduces a [temporary] bug in this formula.&quot; Whereas &lt;code&gt;Dispel Magic&lt;&#x2F;code&gt; disperses that woven magic from a spell into background magic.&lt;&#x2F;p&gt;
&lt;p&gt;Because the world is inherently magical - and creatures like dragons and beholders would not make sense without it - &lt;code&gt;AMF&lt;&#x2F;code&gt; could not possibly cancel this type of magic (as this would undo the very nature of the multiverse). Neither could it cancel non-magical effects that were created through the means of past magic. However:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;AMF&lt;&#x2F;code&gt;: &quot;You will not see any effects of magic while inside this field. The area is divorced from the magical energy that suffuses the multiverse&quot;.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;This text establishes a need to distinguish those types of magic from the others. This is where we consult the &lt;strong&gt;heuristic&lt;&#x2F;strong&gt; test from the &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;media.wizards.com&#x2F;2020&#x2F;dnd&#x2F;downloads&#x2F;SA-Compendium.pdf&quot;&gt;Sage Advice Compendium&lt;&#x2F;a&gt; inlined below:&lt;&#x2F;p&gt;
&lt;h3 id=&quot;test-for-magical-effects&quot;&gt;Test for magical effects&lt;&#x2F;h3&gt;
&lt;p&gt;Answer &lt;code&gt;YES&lt;&#x2F;code&gt; to any of these to be classified as magical (and thus have &lt;code&gt;AMF&lt;&#x2F;code&gt; suppress its effect):&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Is it a &lt;strong&gt;magic item&lt;&#x2F;strong&gt;?&lt;&#x2F;li&gt;
&lt;li&gt;Is it a &lt;strong&gt;spell&lt;&#x2F;strong&gt;?&lt;&#x2F;li&gt;
&lt;li&gt;Is it a &lt;strong&gt;spell attack&lt;&#x2F;strong&gt;?&lt;&#x2F;li&gt;
&lt;li&gt;Is it creating the &lt;strong&gt;effects of a spell mentioned in its description&lt;&#x2F;strong&gt;?&lt;&#x2F;li&gt;
&lt;li&gt;Is it &lt;strong&gt;fueled by spell slots&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Does the words &lt;code&gt;magic&lt;&#x2F;code&gt; or &lt;code&gt;magical&lt;&#x2F;code&gt; &lt;strong&gt;appear in its description&lt;&#x2F;strong&gt;?&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;examples&quot;&gt;Examples&lt;&#x2F;h3&gt;
&lt;p&gt;While this seems like a well-thought-out heuristic, the results they mention are interesting:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Conjured creatures relying on concentration are magical&lt;&#x2F;li&gt;
&lt;li&gt;Summoned creatures with instant cast duration are &lt;strong&gt;NOT&lt;&#x2F;strong&gt; magical&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Because the summoning has already taken place in the latter case.&lt;&#x2F;p&gt;
&lt;p&gt;The corollary is that:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Conjured creatures (concentration-based) disappear&lt;&#x2F;li&gt;
&lt;li&gt;Conjured creatures reappear when the field disappear (unless concentration was lost)&lt;&#x2F;li&gt;
&lt;li&gt;Summoned creatures not concentration-based can traverse the field (they are not persisting because of a spell anymore)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;rpg.stackexchange.com&#x2F;questions&#x2F;93550&#x2F;is-a-concentration-spell-suppressed-when-the-caster-is-in-antimagic-field&quot;&gt;You still have to make concentration checks when hit&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Additionally, the following phenomenons (that at some point required magic to bring into existence) are &lt;strong&gt;not considered magical&lt;&#x2F;strong&gt;:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Fire created by &lt;code&gt;Prestidigitation&lt;&#x2F;code&gt; (if it has a reason to keep burning)&lt;&#x2F;li&gt;
&lt;li&gt;A &lt;code&gt;Dragon&lt;&#x2F;code&gt; and its breath weapon&lt;&#x2F;li&gt;
&lt;li&gt;A &lt;code&gt;Beholder&lt;&#x2F;code&gt; and its &lt;code&gt;Antimagic Cone&lt;&#x2F;code&gt; (though it functions like &lt;code&gt;AMF&lt;&#x2F;code&gt;)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;imgs&#x2F;antimagic&#x2F;beholder_ray.webp&quot; alt=&quot;beholder ray&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;artifacts&quot;&gt;Artifacts&lt;&#x2F;h3&gt;
&lt;p&gt;Finally, &lt;code&gt;Artifacts&lt;&#x2F;code&gt; - magic items either unavailable to mortals, or long forgotten - are also unaffected by &lt;code&gt;AMF&lt;&#x2F;code&gt; by a special flavour text (presumably to prevent you from destroying them):&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;AMF&lt;&#x2F;code&gt;: Spells and other magical Effects, &lt;strong&gt;except those created by an artifact or a deity&lt;&#x2F;strong&gt;, are suppressed in the Sphere and can&#x27;t protrude into it.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Thus, they probably have their full abilities unmodified completely - even if it can cast spells, like &lt;code&gt;Blackrazor&lt;&#x2F;code&gt;&#x27;s &lt;code&gt;Haste&lt;&#x2F;code&gt; ability. The magic of deities cannot be modified by mortals.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;interpretting-the-rest&quot;&gt;Interpretting the rest&lt;&#x2F;h3&gt;
&lt;p&gt;Spellcasters with an active &lt;code&gt;Find Familiar&lt;&#x2F;code&gt; leave a bunch of open ended questions on how you can interact with them, even though the familiar clearly lingers. &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;rpg.stackexchange.com&#x2F;questions&#x2F;133610&#x2F;which-features-of-a-wizards-familiar-if-any-are-considered-magical&quot;&gt;Telepathy is magical&lt;&#x2F;a&gt;, and if telepathy is magical, then so is sharing of senses between a familiar (at least that is my interpretation).&lt;&#x2F;p&gt;
&lt;p&gt;Additionally; a &lt;code&gt;warlock&lt;&#x2F;code&gt;&#x27;s &lt;code&gt;Pact Magic&lt;&#x2F;code&gt;, their &lt;code&gt;Eldritch Invocations&lt;&#x2F;code&gt;, blade pactweapons, and &lt;code&gt;Mystic Arcanum&lt;&#x2F;code&gt; are all magical by their wording.&lt;&#x2F;p&gt;
&lt;p&gt;Similarly, a &lt;code&gt;sorcerer&lt;&#x2F;code&gt; can&#x27;t use sorcery points, as they &quot;create [..] magical effects&quot;, nor can they use the clearly magical; &lt;code&gt;Metamagic&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The &lt;code&gt;PHB&lt;&#x2F;code&gt; mentions that the &lt;code&gt;monk&lt;&#x2F;code&gt;&#x27;s &lt;code&gt;ki&lt;&#x2F;code&gt; energy draws on magical energy, but this is apparently only meant to mean the &quot;background magic in the multiverse&quot; &lt;code&gt;Crawford&lt;&#x2F;code&gt; says in the interview, and goes on to say:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&quot;we only consider individual monk ability to be magical if we&#x27;ve put the word magic&#x2F;magical&#x2F;magically in that particular monk ability&quot;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;A quick &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;http:&#x2F;&#x2F;dnd5e.wikidot.com&#x2F;monk&quot;&gt;search through reference text&lt;&#x2F;a&gt; seem to only mention:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;KI-Empowered strikes&lt;&#x2F;li&gt;
&lt;li&gt;Fey Step&lt;&#x2F;li&gt;
&lt;li&gt;Blessing of the Raven Queen&lt;&#x2F;li&gt;
&lt;li&gt;Casting spells via &lt;code&gt;Way of the Four Elements&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;so Flurry&#x2F;Patient Defense or even &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;rpg.stackexchange.com&#x2F;questions&#x2F;76005&#x2F;does-ki-count-as-magic-for-the-purpose-of-an-antimagic-field-or-is-it-only-fluf&quot;&gt;Stunning Strike is not magical&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The &lt;code&gt;paladin&lt;&#x2F;code&gt; only has a few similar references:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Channel Divinity is magical&lt;&#x2F;li&gt;
&lt;li&gt;Sacred Weapon is magical (weapon no longer get the +1 if it got it)&lt;&#x2F;li&gt;
&lt;li&gt;Divine Health is magical (no longer immune to disease)&lt;&#x2F;li&gt;
&lt;li&gt;Divine Smite is not magical - but you can&#x27;t use it to expend spell slots!&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;The &lt;code&gt;druid&lt;&#x2F;code&gt;&#x27;s &lt;code&gt;Wild Shape&lt;&#x2F;code&gt; is magical and would temporarily drop within an &lt;code&gt;AMF&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The &lt;code&gt;ranger&lt;&#x2F;code&gt; is more straightforward. Only spells matter, and while &lt;code&gt;Hunter&#x27;s Mark&lt;&#x2F;code&gt; will linger, it does so under concentration, and its effect will be suppressed if either of you are inside of an &lt;code&gt;AMF&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;delayed-blast-fireball&quot;&gt;Delayed Blast Fireball&lt;&#x2F;h2&gt;
&lt;p&gt;This brings us to the curious case of &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;roll20.net&#x2F;compendium&#x2F;dnd5e&#x2F;Delayed%20Blast%20Fireball&quot;&gt;Delayed Blast Fireball&lt;&#x2F;a&gt;. Some &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.sageadvice.eu&#x2F;2015&#x2F;12&#x2F;09&#x2F;delayed-blast-fireball-inside-an-antimagic-field&#x2F;&quot;&gt;answers are provided by Crawford here&lt;&#x2F;a&gt;, though they still leave some wiggle room.&lt;&#x2F;p&gt;
&lt;p&gt;It&#x27;s clear that an active &lt;code&gt;DBF&lt;&#x2F;code&gt; should have its duration elapse inside an &lt;code&gt;AMF&lt;&#x2F;code&gt; from what &lt;code&gt;Crawford&lt;&#x2F;code&gt; says in the interview, but it is still a concentration spell that increases in damage every round because of concentration:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;DBF&lt;&#x2F;code&gt;: When the spell ends, either because your concentration is broken or because you decide to end it, the bead blossoms with a low roar into an explosion of flame that spreads around corners.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;The spell&#x27;s base damage is 12d6. If at the end of Your Turn the bead has not yet detonated, the damage increases by 1d6.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Your concentration is not broken by &lt;code&gt;AMF&lt;&#x2F;code&gt;, and there&#x27;s nothing explicitly indicating that a magical transference of energy occurs while concentrating. To take the spell at face value; the bead just needs the concentration to exist (it&#x27;s not explicitly doing anything magical each round), and it immediately detonates when the link is severed:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;If concentration is &lt;em&gt;broken&lt;&#x2F;em&gt; while the bead is inside an &lt;code&gt;AMF&lt;&#x2F;code&gt;, then bad luck. Nothing happens.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;If there is a surpressed bead inside an expiring &lt;code&gt;AMF&lt;&#x2F;code&gt;, then hey, surprise; the bead can glow once more; and more intensely than before. Concentration paid off.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;There&#x27;s plenty of arguments to be made about how counterintuitive this is, but we don&#x27;t really know anything about the nature of concentration. The &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;rpg.stackexchange.com&#x2F;questions&#x2F;136280&#x2F;what-happens-if-a-delayed-blast-fireball-detonates-inside-an-antimagic-field#:~:text=A%20Delayed%20Fireball%20in%20an%20Antimagic%20Field%20wouldn&amp;#x27;t%20detonate&amp;amp;text=While%20an%20effect%20is%20suppressed,is%20suppressed%2C%20meaning%20nothing%20happens.&quot;&gt;general consensus is that this works&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;imgs&#x2F;antimagic&#x2F;fireball.webp&quot; alt=&quot;fireball&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;This is probably a good thing, because a similar case can be made against &lt;code&gt;DBF&lt;&#x2F;code&gt; inside &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;roll20.net&#x2F;compendium&#x2F;dnd5e&#x2F;Time%20Stop#content&quot;&gt;Time Stop&lt;&#x2F;a&gt;; a &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.dndbeyond.com&#x2F;forums&#x2F;dungeons-dragons-discussion&#x2F;rules-game-mechanics&#x2F;10141-spells-time-stop-and-delayed-fireball-question&quot;&gt;tradition&lt;&#x2F;a&gt; that is &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;dndnext&#x2F;comments&#x2F;f8jb53&#x2F;how_would_time_stop_and_delayed_blast_fireball&#x2F;&quot;&gt;too cool&lt;&#x2F;a&gt; to &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;thinkdm.org&#x2F;2018&#x2F;02&#x2F;03&#x2F;can-you-cast-multiple-delayed-blast-fireballs-during-time-stop&#x2F;&quot;&gt;not work&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;antimagic-field-vs&quot;&gt;Antimagic Field vs...&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;1-forcecage&quot;&gt;1. ForceCage&lt;&#x2F;h3&gt;
&lt;p&gt;Let&#x27;s look at how cancellation texts interact; &lt;code&gt;ForceCage&lt;&#x2F;code&gt; does not prevent magic being cast inside as long as the point of origin does not cross the boundary; so &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.giantitp.com&#x2F;comics&#x2F;oots0627.html&quot;&gt;AMF suppresses FC&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The result being a 10ft sphere sphere partially protruding a 10x10ft `FC rectangle, allowing for some funny geometrical problems - if you are inclined to do some on-the-fly trig.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;AMF: If the Sphere overlaps an area of magic, the part of the area that is covered by the Sphere is suppressed.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Note that there&#x27;s no &lt;strong&gt;dynamic movement&lt;&#x2F;strong&gt; or &lt;strong&gt;dynamic extensions&lt;&#x2F;strong&gt; for spell effects (movement typically happen as a discrete point at the start of a casters turn); &lt;code&gt;AMF&lt;&#x2F;code&gt; would leave the &lt;code&gt;ForceCage&lt;&#x2F;code&gt; active, just partially disabled where the the caster&#x27;s sphere is covering it.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;2-self&quot;&gt;2. Self&lt;&#x2F;h3&gt;
&lt;p&gt;A final note of its uncancellability; two &lt;code&gt;AMF&lt;&#x2F;code&gt;s do not cancel out each other. Their &quot;sphere of influence&quot; simply become their union.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;AMF&lt;&#x2F;code&gt;: the spheres created by different antimagic field Spells don&#x27;t nullify each other.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;3-anything&quot;&gt;3. Anything&lt;&#x2F;h3&gt;
&lt;p&gt;By the heuristic magic test, I can&#x27;t think of anything short of a &lt;code&gt;Wish&lt;&#x2F;code&gt; that could aid in removing an active &lt;code&gt;AMF&lt;&#x2F;code&gt;, and that could still only work from the outside. Even spells like &lt;code&gt;Disintegrate&lt;&#x2F;code&gt; produce a magical effect.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;4-counterspell&quot;&gt;4. Counterspell&lt;&#x2F;h3&gt;
&lt;p&gt;You can however, target it at the casting time with &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.dndbeyond.com&#x2F;spells&#x2F;counterspell&quot;&gt;Counterspell&lt;&#x2F;a&gt;. It is clearly the lowest level spell that can work, though it has a hard DC, it requires you to have your reaction ready, and it requires the DM being very nice and letting you recognise what spell is being thrown at you (&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;rpg.stackexchange.com&#x2F;questions&#x2F;46830&#x2F;what-do-i-know-when-deciding-whether-to-cast-counterspell&quot;&gt;not always the case&lt;&#x2F;a&gt;).&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;I generally allow identification of the spell as it&#x27;s being cast (so players can decide whether to counterspell) on a successful &lt;code&gt;Arcana&lt;&#x2F;code&gt; check (DC set by how exposed they have been to the spell).&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;imgs&#x2F;antimagic&#x2F;counterspell.webp&quot; alt=&quot;counterspell&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;An sidenote; &lt;code&gt;Wild Shape&lt;&#x2F;code&gt; mentioned earlier, while magical (and &lt;code&gt;AMF&lt;&#x2F;code&gt;-cancellable), is not a spell. Therefore, you cannot target it with &lt;code&gt;Counterspell&lt;&#x2F;code&gt;. &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;dndnext&#x2F;comments&#x2F;e3c47t&#x2F;wait_are_archdruids_are_immune_to_counterspell&#x2F;&quot;&gt;Arch druids are fun&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;antimagic-field-concentration&quot;&gt;Antimagic Field Concentration&lt;&#x2F;h2&gt;
&lt;p&gt;Due to its hardline effect; &lt;code&gt;Crawford&lt;&#x2F;code&gt; notes that &lt;code&gt;AMF&lt;&#x2F;code&gt; is &lt;em&gt;intentionally a concentration spell that moves with you&lt;&#x2F;em&gt;, to give the players a chance to take out the mage. In conclusion; &lt;strong&gt;don&#x27;t put it on an item&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Funny you should mention that. We were just about ready to venture into silly-territory:&lt;&#x2F;p&gt;
&lt;h2 id=&quot;cube-of-force&quot;&gt;Cube of Force&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;roll20.net&#x2F;compendium&#x2F;dnd5e&#x2F;Cube%20of%20Force#content&quot;&gt;A cube with 36 fast-recharging charges&lt;&#x2F;a&gt;, and special effects for each face. Simplified flavour text:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;You can use an action to press one of the cube&#x27;s faces. Each face has a different Effect. A barrier of Invisible force springs into existence, forming &lt;code&gt;a cube 15 feet on a side&lt;&#x2F;code&gt;. The barrier is &lt;code&gt;centered on you&lt;&#x2F;code&gt;, moves with you, and &lt;code&gt;lasts for 1 minute&lt;&#x2F;code&gt;, until you use an action to press the cube&#x27;s sixth face, or the cube runs out of Charges.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;You can &lt;code&gt;change the barrier&#x27;s Effect by pressing a different face&lt;&#x2F;code&gt; of the cube and expending the requisite number of Charges, &lt;code&gt;resetting the Duration&lt;&#x2F;code&gt;. If your Movement causes the barrier to come into contact with a solid object that can&#x27;t pass through the cube, you can&#x27;t move any closer to that object as long as the barrier remains.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;imgs&#x2F;antimagic&#x2F;cubeofforce.webp&quot; alt=&quot;cube of force&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;face-effects&quot;&gt;Face Effects:&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;1&lt;&#x2F;strong&gt; Gases, wind, and fog can&#x27;t pass through the barrier.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;2&lt;&#x2F;strong&gt; Nonliving matter can&#x27;t pass through the barrier. Walls, floors, and ceilings can pass through at your discretion.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;3&lt;&#x2F;strong&gt; Living matter can&#x27;t pass through the barrier. (&lt;code&gt;FC--&lt;&#x2F;code&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;4&lt;&#x2F;strong&gt; Spell Effects can&#x27;t pass through the barrier. (&lt;code&gt;AMF--&lt;&#x2F;code&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;5&lt;&#x2F;strong&gt; Nothing can pass through the barrier. Walls, floors, and ceilings can pass through at your discretion. (&lt;code&gt;AMF--&lt;&#x2F;code&gt; + &lt;code&gt;FC--&lt;&#x2F;code&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;6&lt;&#x2F;strong&gt; The barrier deactivates.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;small&gt;There&#x27;s also a strange mechanic for number of chargers and a possibility of depleting it by hitting the barrier with certain high-levels spells, but this is not really relevant here.&lt;&#x2F;small&gt;&lt;&#x2F;p&gt;
&lt;p&gt;You&#x27;ll note how much more loosely worded this is. It leaves a lot of room for interpretation, it does &lt;em&gt;not&lt;&#x2F;em&gt; reference any spells it may mimic (unlike the Beholders Antimagic Cone), and thus these 8 word sentences are all we got. I noted what spells each face comes closest to in the list above, but a lot of questions ultimately arise:&lt;&#x2F;p&gt;
&lt;h3 id=&quot;questions&quot;&gt;Questions&lt;&#x2F;h3&gt;
&lt;h4 id=&quot;1-gas-as-in-state-of-matter&quot;&gt;1. Gas as in state of matter?&lt;&#x2F;h4&gt;
&lt;p&gt;Meaning you could toss in a brick of liquid nitrogen and let it sublimate. How much of physics is valid in D&amp;amp;D?&lt;&#x2F;p&gt;
&lt;p&gt;No new breathable air goes in, incidentally. This shouldn&#x27;t matter much other than if they spend more than an hour inside of the bubble; like spending an hour in a cramped, unventilated meeting room.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;1-is-cloudkill-a-gas&quot;&gt;1. Is cloudkill a gas?&lt;&#x2F;h4&gt;
&lt;p&gt;The &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;roll20.net&#x2F;compendium&#x2F;dnd5e&#x2F;Cloudkill&quot;&gt;Cloudkill&lt;&#x2F;a&gt; gas is a magical effect that drops with &lt;em&gt;Concentration&lt;&#x2F;em&gt;, so it&#x27;s not &lt;code&gt;matter&lt;&#x2F;code&gt; per se;&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;{living matter} ∪ {non-living matter} ≠ Multiverse&lt;&#x2F;code&gt;;
Magical effects are neither.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Thus, this wording wouldn&#x27;t be enough to stop the first example people think of.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;2-non-living-matter&quot;&gt;2. Non-living matter?&lt;&#x2F;h4&gt;
&lt;p&gt;This is probably meant as an &lt;code&gt;Undead&lt;&#x2F;code&gt; shield, but be careful; a dead body still has living parts on it like cells and bacteria. You probably wouldn&#x27;t want pass this barrier over the corpse of your friends if you want an easy resurrection.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;3-living-matter&quot;&gt;3. Living matter?&lt;&#x2F;h4&gt;
&lt;p&gt;This sounds like &lt;code&gt;ForceCage&lt;&#x2F;code&gt;, but without the spell protection. You can protect yourself against arrows and charging enemies, but you cannot shoot out. You might just be trapped inside while enemies outside could target you with spells (or teleport inside).&lt;&#x2F;p&gt;
&lt;h4 id=&quot;4-spell-effects-passing-through&quot;&gt;4. Spell effects passing through?&lt;&#x2F;h4&gt;
&lt;p&gt;This one is hard. The wording of &lt;code&gt;passing through&lt;&#x2F;code&gt; is strange - as D&amp;amp;D spell movement is discrete - but presumably any spell effects that crosses the boundary would probably fail to have that effect on the inside, kind of like &lt;code&gt;AMF&lt;&#x2F;code&gt; - but this does not specify that it functions like &lt;code&gt;AMF&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;In fact it only says the effect itself, it does not limit spells being cast inside, or targetting from the outside. In this case it&#x27;s actually the inverse of &lt;code&gt;FC&lt;&#x2F;code&gt;; spells can actually traverse the boundary, just effects can not. A caster could step 1ft out of the cube, cast fireball inside, remain undamaged while the inside would be a closed fire chamber.&lt;&#x2F;p&gt;
&lt;p&gt;This of course raises a lot more questions, but read on first.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;5-nothing&quot;&gt;5. Nothing?&lt;&#x2F;h4&gt;
&lt;p&gt;All matter, light, magical effects, spell effects, other forces. This is a real cage. You can&#x27;t hear or see anything from the outside, and can relax in your (very visible) Sensory Deprivation. Incidentally, it is &lt;em&gt;omniphobic&lt;&#x2F;em&gt;; bad guys could just move it with &lt;code&gt;Telekinesis&lt;&#x2F;code&gt;. Bring this cube into a lava pool, then just wait for it to expire. It&#x27;s not like anyone inside would know.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;this-is-dumb&quot;&gt;This is dumb&lt;&#x2F;h3&gt;
&lt;p&gt;This interpretation is clearly strange, but it&#x27;s the most consistent with the remainder of antimagic AFAIKT. The item is just too ambiguous; the wording does not match anything else in the otherwise pretty consistent spell list.&lt;&#x2F;p&gt;
&lt;p&gt;The way we judged this in 2018 looks nothing like the above list, but our original interpretation also did not work out with respect to game balance.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;Crawford&lt;&#x2F;code&gt; noted in the interview that he was actually recommending the removal of &lt;code&gt;AMF&lt;&#x2F;code&gt; for 5th edition, as it just has too many corner cases. Clearly, it was too iconic to remove and &lt;code&gt;Wizards&lt;&#x2F;code&gt; have done a reasonable job of tackling the ambiguities that follow from it, but for the &lt;code&gt;Cube of Force&lt;&#x2F;code&gt;? &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;search?q=JeremyECrawford%20%22cube%20of%20force%22&quot;&gt;The silence speaks volumes&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Just &lt;strong&gt;don&#x27;t use this item&lt;&#x2F;strong&gt;. If you want this type of Legendary power, homebrew something using existing spells, but equally, &lt;strong&gt;don&#x27;t relieve a mage of antimagic concentration&lt;&#x2F;strong&gt;. Here&#x27;s an alternative - yet still very poweful - homebrew item:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;imgs&#x2F;antimagic&#x2F;globe_invuln.webp&quot; alt=&quot;globe of invulnerability&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;umberlee-s-upheaval&quot;&gt;&lt;code&gt;Umberlee&#x27;s Upheaval&lt;&#x2F;code&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;A legendary spell casters focus. You can cast the following spells once per day from the following list of spells. The sphere will maintain concentration on one spell at a time, until it has been made to drop it via a command word or if the item is dropped;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;5thsrd.org&#x2F;spellcasting&#x2F;spells&#x2F;hallow&#x2F;&quot;&gt;Hallow&lt;&#x2F;a&gt; (centered on the focus)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;5thsrd.org&#x2F;spellcasting&#x2F;spells&#x2F;blade_barrier&#x2F;&quot;&gt;Blade Barrier&lt;&#x2F;a&gt; (ringed wall around focus)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.dndbeyond.com&#x2F;spells&#x2F;freedom-of-movement&quot;&gt;Freedom of Movement&lt;&#x2F;a&gt; (20ft sphere around focus affecting everyone inside)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;The focus is always the center of the spell. Attunement required by a &lt;code&gt;cleric&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;is-this-good&quot;&gt;Is this good?&lt;&#x2F;h4&gt;
&lt;p&gt;This is clearly very different; filled with largely protective&#x2F;utility spells, modified to work in AOE around the focus. They all have well-defined use cases, and are all sufficiently different that they are all worth using. While it&#x27;s still a bit half-baked on my end; compared to the &lt;code&gt;Cube of Force&lt;&#x2F;code&gt;? Easy substitute.&lt;&#x2F;p&gt;
&lt;!--
If you want a wizard&#x2F;sorcerer&#x2F;warlock based one, you could instead use the following spells:

- [Globe of Invulnerability](https:&#x2F;&#x2F;5thsrd.org&#x2F;spellcasting&#x2F;spells&#x2F;globe_of_invulnerability&#x2F;)
- [Resilient Sphere](https:&#x2F;&#x2F;5thsrd.org&#x2F;spellcasting&#x2F;spells&#x2F;resilient_sphere&#x2F;) (self only)

or a paladin based one:

- [Circle of Power](https:&#x2F;&#x2F;www.dndbeyond.com&#x2F;spells&#x2F;circle-of-power)
- [Aura of Purity](https:&#x2F;&#x2F;www.dndbeyond.com&#x2F;spells&#x2F;aura-of-purity)
- [Aura of Life](https:&#x2F;&#x2F;www.dndbeyond.com&#x2F;spells&#x2F;aura-of-life)
--&gt;
&lt;h3 id=&quot;ending-thoughs&quot;&gt;Ending thoughs&lt;&#x2F;h3&gt;
&lt;p&gt;If you&#x27;ve followed me through this rabbit hole in fantasy rule research, congratulations. Hope this has been interesting. At the very least, I will feel a little more confident in running high level games that may or may not contain liches.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Foaming Campaign Brain</title>
        <published>2020-09-27T00:00:00+00:00</published>
        <updated>2020-09-27T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://clux.dev/post/2020-09-27-second-brain/"/>
        <id>https://clux.dev/post/2020-09-27-second-brain/</id>
        
        <content type="html" xml:base="https://clux.dev/post/2020-09-27-second-brain/">&lt;p&gt;After 2 years of running a D&amp;amp;D campaign almost every week, my note taking setup reached several breaking points. If you&#x27;re using &lt;code&gt;OneNote&lt;&#x2F;code&gt; or another online managed system for tracking notes&#x2F;cities&#x2F;npcs&#x2F;pcs&#x2F;events, but know how to use programmers tools like &lt;code&gt;git&lt;&#x2F;code&gt; and &lt;code&gt;code&lt;&#x2F;code&gt;; boy are there a world of advantages available to you.&lt;&#x2F;p&gt;
&lt;p&gt;This is a story of my original note talking setup, a comparison between newer technologies, and how I am back to writing markdown in a folder.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;the-onenote-setup&quot;&gt;The OneNote Setup&lt;&#x2F;h2&gt;
&lt;p&gt;Early in 2018, we were starting to play weekly, and my various documents in google docs were not cutting it.&lt;&#x2F;p&gt;
&lt;p&gt;I watched a couple of videos detailing how to &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=SqhePj9ratI&quot;&gt;Manage a D&amp;amp;D campaign with OneNote&lt;&#x2F;a&gt;. The double categorisation setup where Sections contain many Pages was nice, the promise of links was promising, but unfortunately, the &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;SqhePj9ratI?t=1856&quot;&gt;difficulty of creating them&lt;&#x2F;a&gt; made them too slow to really be viable.&lt;&#x2F;p&gt;
&lt;p&gt;A year down the line, my OneNote looked like this:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;imgs&#x2F;foam&#x2F;onenote-campaign.png&quot; alt=&quot;one note campaign&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Still, image integration straight from a google search and into your document was great. Well, not &lt;code&gt;Google&lt;&#x2F;code&gt;, but &lt;code&gt;Bing&lt;&#x2F;code&gt;, I guess. In practice, I wasn&#x27;t always sure what I was going for, so I often ended up searching for images in my browser first via google, getting shunted to pinterest and find something promising there. Since &lt;code&gt;OneNote&lt;&#x2F;code&gt; returned completely different images, I generally had to &lt;strong&gt;save and upload&lt;&#x2F;strong&gt; my findings anyway.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;OneNote&lt;&#x2F;code&gt; did let you place random text fields anywhere on your page (like some kind of janky e-scrap book), and this did actually help get around one problem I was having:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;splitting the data is hard in a browser&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Why? You click on a link, the browser makes several HTTP requests, and after waiting 400ms you finally get to see the results (one drive is not super responsive), but this movement drops your place to the current page you needed to cross reference with. So now you either go back, and shift-click the reference so you now have two tabs that you can Shift-Tab between, or you prepare those tabs up in advance (typically before the session).&lt;&#x2F;p&gt;
&lt;p&gt;In practice I often ended up with a 30 tab browser window for every session, which generally, looked something like:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;imgs&#x2F;foam&#x2F;session-chrome.png&quot; alt=&quot;session chrome window&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;this type of tab&#x2F;icon chaos generally included:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;5 from OneNote (campaign brain)&lt;&#x2F;li&gt;
&lt;li&gt;2 from Kobold Fight Club (potential encounters)&lt;&#x2F;li&gt;
&lt;li&gt;6 from monsters &#x2F; items&lt;&#x2F;li&gt;
&lt;li&gt;2 youtube ambient music tabs&lt;&#x2F;li&gt;
&lt;li&gt;2 for random generators&lt;&#x2F;li&gt;
&lt;li&gt;5 from lore&#x2F;wikis related to the story or NPCs&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;and their multitude meant I needed to tab between them to find the right one, only to have to change them when players did something out of left field.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;DMs&lt;&#x2F;strong&gt;; does this happen to you?&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;So this system definitely had problems, but it was free, &lt;strong&gt;generally&lt;&#x2F;strong&gt; responsive, and the 400ms link opening time wasn&#x27;t too much of a drain on the improv. It was definitely noticable though, and it just took a slightly decreased &lt;code&gt;OneNote&lt;&#x2F;code&gt; &lt;strong&gt;QoS&lt;&#x2F;strong&gt;, or a few interrupted WIFI evenings, for it all to feel pointless.&lt;&#x2F;p&gt;
&lt;p&gt;..there was also a whole week where I was unable to save anything with no errors shown to me. I never get to the bottom of it, but it was the last straw.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;the-git-repository&quot;&gt;The Git Repository&lt;&#x2F;h2&gt;
&lt;p&gt;After these problems, I realised that there&#x27;s one thing I&#x27;m unwilling to compromise on:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;My notes must be available offline&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;If that means I have to do a full sync up front; &lt;strong&gt;fine&lt;&#x2F;strong&gt;. A folder of documents behind &lt;code&gt;git&lt;&#x2F;code&gt; solves this. This also solves the merge conflict resolution problem that &lt;code&gt;OneNote&lt;&#x2F;code&gt; was giving me due to the way it hid its synchronisation mechanism. Imagine arriving back at your desktop computer only to find that your laptop didn&#x27;t sync, so you either have to boot your laptop back up, or solve a merge conflict (with yourself) the next time you open your laptop (on an interface somehow worse than git). Not great.&lt;&#x2F;p&gt;
&lt;p&gt;Now I just &lt;code&gt;git commit&lt;&#x2F;code&gt; and &lt;code&gt;git push&lt;&#x2F;code&gt;, and never get a merge conflict.&lt;&#x2F;p&gt;
&lt;p&gt;That means that no matter how slick the following solutions look:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;World Anvil&lt;&#x2F;li&gt;
&lt;li&gt;Notion&lt;&#x2F;li&gt;
&lt;li&gt;Roam&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;These solutions are off the table for me. Even if some of them might be a reasonable abstraction.&lt;&#x2F;p&gt;
&lt;p&gt;With an offline document repo, it was immediately easy to get back the basic functionality needed; categorised text in sections (folders) and pages (markdown files within folder), and an offline way to access them (cloned repo).&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;imgs&#x2F;foam&#x2F;git-repo-campaign.png&quot; alt=&quot;git repo campaign&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;the-markdown&quot;&gt;The Markdown&lt;&#x2F;h2&gt;
&lt;p&gt;Using &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;guides.github.com&#x2F;features&#x2F;mastering-markdown&#x2F;&quot;&gt;Markdown&lt;&#x2F;a&gt; as the documention format is a no-brainer to me as a software engineer. This defacto documentation standard &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;gohugo.io&#x2F;content-management&#x2F;formats&#x2F;&quot;&gt;used&lt;&#x2F;a&gt; &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;community.atlassian.com&#x2F;t5&#x2F;Jira-questions&#x2F;Using-markdown-in-Jira&#x2F;qaq-p&#x2F;892041&quot;&gt;nearly&lt;&#x2F;a&gt; &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.github.com&#x2F;gfm&#x2F;&quot;&gt;everywhere&lt;&#x2F;a&gt;, supported by &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;code.visualstudio.com&#x2F;docs&#x2F;languages&#x2F;markdown&quot;&gt;every&lt;&#x2F;a&gt; &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;plasticboy&#x2F;vim-markdown&quot;&gt;major&lt;&#x2F;a&gt; &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;SublimeText-Markdown&#x2F;MarkdownEditing&quot;&gt;code&lt;&#x2F;a&gt; editor.&lt;&#x2F;p&gt;
&lt;p&gt;Still, many of the same problems I had with &lt;code&gt;OneNote&lt;&#x2F;code&gt; still manifested themselves:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;linking markdown files requires lookup and hard-coding of filesystem paths&lt;&#x2F;li&gt;
&lt;li&gt;tendency to store everything in one file because linking is annoying&lt;&#x2F;li&gt;
&lt;li&gt;guessing what tabs are needed in your editor before the session&lt;&#x2F;li&gt;
&lt;li&gt;embedding images is a bit of a pain&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Now, none of these in theory were unsolvable. But was this something where homegrowing my own content management markdown system was really a smart way forward? After all, surely people writing books or research papers need some kind of system to keep track of everything, right?&lt;&#x2F;p&gt;
&lt;h2 id=&quot;zettelkasten&quot;&gt;Zettelkasten&lt;&#x2F;h2&gt;
&lt;p&gt;There are probably millions of ways to organise your stuff and still be successful, just take a look at some famous writers&#x27; desks:&lt;&#x2F;p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Since it&amp;#39;s a Monday, let&amp;#39;s play which fantasy writer&amp;#39;s desk would you want to write at:&lt;br&gt;1. Ursula K. Le Guin&amp;#39;s&lt;br&gt;2. Neil Gaiman&amp;#39;s&lt;br&gt;3. J.R.R. Tolkien&amp;#39;s&lt;br&gt;4. Terry Pratchett&amp;#39;s &lt;a href=&quot;https:&#x2F;&#x2F;t.co&#x2F;hsMRgI0JEh&quot;&gt;pic.twitter.com&#x2F;hsMRgI0JEh&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;&amp;mdash; Into The Forest Dark (@ElliottBlackwe3) &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;ElliottBlackwe3&#x2F;status&#x2F;1308030597688971265?ref_src=twsrc%5Etfw&quot;&gt;September 21, 2020&lt;&#x2F;a&gt;&lt;&#x2F;blockquote&gt; &lt;script async src=&quot;https:&#x2F;&#x2F;platform.twitter.com&#x2F;widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;&#x2F;script&gt;
&lt;!--shortcode fails on my hugo install..&lt; tweet 1308030597688971265 &gt;--&gt;
&lt;p&gt;Individualism notwithstanding, some methods are more refined than others. For instance, this &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;writingcooperative.com&#x2F;zettelkasten-how-one-german-scholar-was-so-freakishly-productive-997e4e0ca125&quot;&gt;article on sociologist Niklas Luhmann and his Zettelkasten system&lt;&#x2F;a&gt; talks about one refined system. &lt;strong&gt;Do at least skim&lt;&#x2F;strong&gt; that article for why that solution is so powerful. It brings up some very important data modelling problem inherent to note taking:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;do we categorise notes by &lt;strong&gt;folders&lt;&#x2F;strong&gt;?&lt;&#x2F;li&gt;
&lt;li&gt;do we categorise notes by &lt;strong&gt;tags&lt;&#x2F;strong&gt;?&lt;&#x2F;li&gt;
&lt;li&gt;do we categorise notes by &lt;strong&gt;links&lt;&#x2F;strong&gt;?&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;All these methods on their own cause data to get lost, but using all of them at the same time gives you a stronger, self-reinforcing system. If &lt;code&gt;Luhmann&lt;&#x2F;code&gt; could achieve this with a simple &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Zettelkasten#&#x2F;media&#x2F;File:Zettelkasten_(514941699).jpg&quot;&gt;slip box system of index cards&lt;&#x2F;a&gt;, then making &lt;strong&gt;your&lt;&#x2F;strong&gt; editor do it should be childs play.&lt;&#x2F;p&gt;
&lt;p&gt;Though, why this system? Well, for one it&#x27;s an organic extension of what you already are doing. You don&#x27;t need to follow it entirely, but the benifits of links and connection notes are huge. From the principles listed in that article. Number 3 in particular:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Always link your notes&lt;&#x2F;strong&gt;
Whenever you add a note, make sure to link it to already existing notes. Avoid notes that are disconnected from other notes. As Luhmann himself put it, &quot;each note is just an element that derives its quality from the network of links in the system. A note that is not connected to the network will be lost, will be forgotten by the Zettelkasten&quot;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;This feels like good D&amp;amp;D advice as well. An NPC already known by a player can be a lot easier and more sensible to re-instate, rather than fabricate a slightly different version of &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;old.reddit.com&#x2F;r&#x2F;dndmemes&#x2F;comments&#x2F;iuajhd&#x2F;im_basically_a_voice_actor&#x2F;&quot;&gt;one of your 10 existing characters&lt;&#x2F;a&gt;. Need a &quot;dark city&quot;, but drawing a blank? Make a shadowfell version of of the same city and link them. Easier to remember for everybody. A campaign quickly accumulates a lot of information. No need to make this harder than it already is.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;considered-choices&quot;&gt;Considered Choices&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;1-sublime-zk&quot;&gt;1. Sublime ZK&lt;&#x2F;h3&gt;
&lt;p&gt;There is a &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;renerocksai&#x2F;sublime_zk&quot;&gt;zettelkasten plugin for sublime&lt;&#x2F;a&gt;, but it looks pretty &lt;strong&gt;abandoned&lt;&#x2F;strong&gt; at the moment. It also does not seem to let you build a graph of your links (one of the main selling points of Obsidian).&lt;&#x2F;p&gt;
&lt;h3 id=&quot;2-obsidian&quot;&gt;2. Obsidian&lt;&#x2F;h3&gt;
&lt;p&gt;The article by &lt;a href=&quot;https:&#x2F;&#x2F;clux.dev&#x2F;post&#x2F;2020-09-27-second-brain&#x2F;joshwin.imprint.to&quot;&gt;joshwin&lt;&#x2F;a&gt; on how he &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;joshwin.imprint.to&#x2F;post&#x2F;how-i-use-obsidian-to-manage-my-goals-tasks-notes-and-software-development-knowledge-base&quot;&gt;uses obsidian to manage goals, tasks, notes, and more&lt;&#x2F;a&gt; is interesting. A pre-configured all-in-one application that is flexible and powerful enough to let you handle all these different categories. Well worth &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;obsidian.md&#x2F;&quot;&gt;looking into&lt;&#x2F;a&gt; &lt;strong&gt;if&lt;&#x2F;strong&gt; you don&#x27;t have a good editor already. Their &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;obsidian.md&#x2F;features&quot;&gt;feature list&lt;&#x2F;a&gt; is decent.&lt;&#x2F;p&gt;
&lt;p&gt;Personally, though, there are &lt;strong&gt;reasons why I&#x27;m not going for this&lt;&#x2F;strong&gt;:&lt;&#x2F;p&gt;
&lt;h4 id=&quot;custom-editor&quot;&gt;Custom Editor&lt;&#x2F;h4&gt;
&lt;p&gt;While it looks like you &lt;strong&gt;can&lt;&#x2F;strong&gt; customize this scope-limited editor close to what you fancy, it does mean that you will need to do go through all that yet another time. Having battled with Vim&#x2F;Sublime&#x2F;VSCode and various editors over the course of my life, there was a point where I have started feeling &lt;strong&gt;satisfied&lt;&#x2F;strong&gt; with what &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;dotfiles&quot;&gt;past-clux had already configured&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;custom-install&quot;&gt;Custom Install&lt;&#x2F;h4&gt;
&lt;p&gt;The only provided &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;obsidian.md&#x2F;&quot;&gt;linux install&lt;&#x2F;a&gt; a single &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;snapcraft.io&#x2F;&quot;&gt;snap package&lt;&#x2F;a&gt;. While snap &lt;strong&gt;might become&lt;&#x2F;strong&gt; a successful and perhaps the most prominent packaging distribution system on linux, it&#x27;s nowhere near that tipping point yet; especially on &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.archlinux.org&#x2F;&quot;&gt;Arch&lt;&#x2F;a&gt;. There&#x27;s no need for me to introduce an &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;wiki.archlinux.org&#x2F;index.php&#x2F;Snap&quot;&gt;extra daemon&lt;&#x2F;a&gt; to auto-upgrade packages when there&#x27;s already &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;wiki.archlinux.org&#x2F;index.php&#x2F;pacman&quot;&gt;a solid system&lt;&#x2F;a&gt; on Arch that lets me do this.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;custom-formats&quot;&gt;Custom Formats&lt;&#x2F;h4&gt;
&lt;p&gt;As with any another system bundling some pinned &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.electronjs.org&#x2F;&quot;&gt;electron&lt;&#x2F;a&gt; version, you now have yet another piece of software that will have security patches neglected as if development suddenly stops.&lt;&#x2F;p&gt;
&lt;p&gt;Sure, you can keep your data because you can store it wherever, but if they control the system that defines the format then it would be super annoying to have to do a migration to something else.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;vendor-locked-plugins&quot;&gt;Vendor locked plugins&lt;&#x2F;h4&gt;
&lt;p&gt;One way out of this would be to have custom plugins, but their plugin API is not exposed (though on their &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;trello.com&#x2F;c&#x2F;Z7qqKVXd&#x2F;19-public-plugin-api-v10&quot;&gt;roadmap&lt;&#x2F;a&gt;).&lt;&#x2F;p&gt;
&lt;p&gt;Ultimately, even if this eventually did get solved, I&#x27;d still rather go with a plugin system in a code editor I already know how to use, and backup, than to get locked in to something forked off electron where the development may stop at any time.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;3-orgmode-with-roam&quot;&gt;3. Orgmode with Roam&lt;&#x2F;h3&gt;
&lt;p&gt;Another all-emcompassing standard that hasn&#x27;t really caught on as widely; &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;orgmode.org&#x2F;&quot;&gt;orgmode&lt;&#x2F;a&gt;. Looks a bit like markdown, but has a lot more support for things I don&#x27;t see an immediate need for. It seems kind of coupled with the &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.gnu.org&#x2F;software&#x2F;emacs&#x2F;&quot;&gt;emacs&lt;&#x2F;a&gt;&#x2F;&lt;code&gt;lisp&lt;&#x2F;code&gt; ecosystem, so if that&#x27;s your preference; check out &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;org-roam&#x2F;org-roam&quot;&gt;org-roam&lt;&#x2F;a&gt;. For me, this is a bit &lt;strong&gt;too off the beaten path&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;4-foam&quot;&gt;4. Foam&lt;&#x2F;h3&gt;
&lt;p&gt;We close with &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;foambubble.github.io&#x2F;foam&#x2F;&quot;&gt;foam&lt;&#x2F;a&gt;, the system we ended up using. Inspired by Roam (a system I neglected to talk about because of sync&#x2F;offline problems, and it&#x27;s also not cheap).&lt;&#x2F;p&gt;
&lt;p&gt;While it does seem somewhat early stage, the selling point here is that &lt;code&gt;Foam&lt;&#x2F;code&gt; is really just a collection of &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;microsoft&#x2F;vscode&quot;&gt;VS Code&lt;&#x2F;a&gt; extensions around markdown, that you can &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;code.visualstudio.com&#x2F;docs&#x2F;editor&#x2F;extension-gallery#_recommended-extensions&quot;&gt;default-recommend&lt;&#x2F;a&gt; at the &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;foambubble&#x2F;foam-template&#x2F;blob&#x2F;master&#x2F;.vscode&#x2F;extensions.json&quot;&gt;repo level&lt;&#x2F;a&gt; and configure how you want.&lt;&#x2F;p&gt;
&lt;p&gt;The main ones here are:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;marketplace.visualstudio.com&#x2F;items?itemName=foam.foam-vscode&quot;&gt;foam.foam-vscode&lt;&#x2F;a&gt; - foam&#x27;s own extension&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;marketplace.visualstudio.com&#x2F;items?itemName=kortina.vscode-markdown-notes&quot;&gt;kortina.vscode-markdown-notes&lt;&#x2F;a&gt; - markdown &lt;code&gt;[[wiki-links]]&lt;&#x2F;code&gt; and backlinking&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;marketplace.visualstudio.com&#x2F;items?itemName=tchayen.markdown-links&quot;&gt;tchayen.markdown-links&lt;&#x2F;a&gt; - graphs markdown linked notes&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;marketplace.visualstudio.com&#x2F;items?itemName=yzhang.markdown-all-in-one&quot;&gt;yzhang.markdown-all-in-one&lt;&#x2F;a&gt; - markdown writing helpers&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;marketplace.visualstudio.com&#x2F;items?itemName=esbenp.prettier-vscode&quot;&gt;esbenp.prettier-vscode&lt;&#x2F;a&gt; - an auto-formatter&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;marketplace.visualstudio.com&#x2F;items?itemName=eamodio.gitlens&quot;&gt;eamodio.gitlens&lt;&#x2F;a&gt; - online git history&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;All of which are very popular, standard extensions, with the sole exception of the &lt;code&gt;foam&lt;&#x2F;code&gt;; a &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;foambubble&#x2F;foam&#x2F;tree&#x2F;master&#x2F;packages&#x2F;foam-vscode&quot;&gt;smaller looking&lt;&#x2F;a&gt; extension that helps manage the wiki links. Frankly, it&#x27;s somewhat strange to me that they list the off-putting &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;foambubble&#x2F;foam&#x2F;tree&#x2F;master&#x2F;packages&#x2F;foam-vscode#requirements&quot;&gt;&lt;code&gt;tolerance for alpha software&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; as a requirement when most of their logic resides outside their codebase.&lt;&#x2F;p&gt;
&lt;p&gt;If you&#x27;ve dealt with a code editors plugin ecosystem before, this is a lot more welcoming than obsidian to me. Bug in the system? Well, probably one of the extensions. You&#x27;ve got options for dealing with it: report &amp;amp; wait, fork + fix, try other replacement extensions.&lt;&#x2F;p&gt;
&lt;p&gt;Oh, and I can we can swap out the &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;marketplace.visualstudio.com&#x2F;items?itemName=philipbe.theme-gray-matter&quot;&gt;default provided dark theme&lt;&#x2F;a&gt; for one you like, e.g. &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;marketplace.visualstudio.com&#x2F;items?itemName=tnaseem.theme-seti&quot;&gt;Seti&lt;&#x2F;a&gt;:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;imgs&#x2F;foam&#x2F;foam-backlinks.png&quot; alt=&quot;foam backlinks seti&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Finally, if you need extra functionality, you now have the whole &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;marketplace.visualstudio.com&#x2F;&quot;&gt;wealth of the VS Code ecosystem&lt;&#x2F;a&gt; at your fingertips.&lt;&#x2F;p&gt;
&lt;p&gt;So far, these have been useful addons for providing extra functionality:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;marketplace.visualstudio.com&#x2F;items?itemName=mushan.vscode-paste-image&quot;&gt;mushan.vscode-paste-image&lt;&#x2F;a&gt; - paste image from clipboard functionality&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;result&quot;&gt;Result&lt;&#x2F;h2&gt;
&lt;p&gt;So that was a lot of information about comparison of note taking technology. How does my system actually end up looking? Depends on whether I am editing or running a game. Here is a 3-way split between editing and showing the graph update live.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;imgs&#x2F;foam&#x2F;3-split-irae.png&quot; alt=&quot;foam 3-way split&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tchayen&#x2F;markdown-links&#x2F;issues&#x2F;58&quot;&gt;graphs sometimes overlaps&lt;&#x2F;a&gt; and &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tchayen&#x2F;markdown-links&#x2F;issues&#x2F;64&quot;&gt;rebalances awkwardly&lt;&#x2F;a&gt; (&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;foambubble&#x2F;call-for-visualization&quot;&gt;help seems to be requested&lt;&#x2F;a&gt;), but the naive implementation still help out a whole lot.&lt;&#x2F;p&gt;
&lt;p&gt;Here is a subset from our sea adventures aboard the &lt;code&gt;Artemis&lt;&#x2F;code&gt;:
&lt;img src=&quot;&#x2F;imgs&#x2F;foam&#x2F;graph-sea-campaign.png&quot; alt=&quot;foam graph around artemis&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Most of the time I just straight up edit markdown in two groups. Sometimes with a preview or graph instead on the right or below, depending on what type of work needs focus. The &lt;strong&gt;flexibility&lt;&#x2F;strong&gt; of this system is equivalent to that of a popular professional code editor by inheritance.&lt;&#x2F;p&gt;
&lt;p&gt;Even if some of these plugins don&#x27;t evolve much, I see this as a pretty future proof setup (the &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;foambubble&#x2F;foam&#x2F;issues&#x2F;88&quot;&gt;why foam issue&lt;&#x2F;a&gt; is also refreshingly honest). The investment in new tech is small, and migration cost away from said tech ought to be minimal.&lt;&#x2F;p&gt;
&lt;p&gt;From a RPG perspective, being able to immediately jump to anything through a responsive fuzzy search helps trim down on those &lt;code&gt;&quot;hang on one second&quot;&lt;&#x2F;code&gt; moments, and when you are planning by yourself, you have a whole linked &lt;strong&gt;compendium of knowledge&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The hope with all this is that the amount of hard-to-navigate &quot;running the game tabs&quot; should be significantly reduced with this setup, and my world should feel more integrated thanks to the extensive Zettelkasten style linking. Well. Fingers crossed anyway.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Trying out LXDE</title>
        <published>2019-07-28T00:00:00+00:00</published>
        <updated>2019-07-28T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://clux.dev/post/2019-07-28-lxde-experiment/"/>
        <id>https://clux.dev/post/2019-07-28-lxde-experiment/</id>
        
        <content type="html" xml:base="https://clux.dev/post/2019-07-28-lxde-experiment/">&lt;p&gt;Despite having been a lazy Cinnamon customer since the Linux Mint days, recently some &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;old.reddit.com&#x2F;r&#x2F;linux_gaming&#x2F;comments&#x2F;cii545&#x2F;linux_input_lag_analysis_v26des_windows_10_1809&#x2F;&quot;&gt;interesting&lt;&#x2F;a&gt; benchmarks started &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;linux_gaming&#x2F;comments&#x2F;c0ly6b&#x2F;linux_input_lag_analysis7des_tested_windows&#x2F;&quot;&gt;surfacing&lt;&#x2F;a&gt; about input lag in various Window Mangagers, and this made me want to experiment a little.&lt;&#x2F;p&gt;
&lt;p&gt;This is a log of stuff I needed to tweak to get &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;wiki.archlinux.org&#x2F;index.php&#x2F;LXDE&quot;&gt;LXDE&lt;&#x2F;a&gt; working well.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;lxde&quot;&gt;LXDE&lt;&#x2F;h1&gt;
&lt;blockquote&gt;
&lt;p&gt;LXDE is a free desktop environment with comparatively low resource requirements. This makes it especially suitable for use on older or resource-constrained personal computers such as netbooks or system on a chip computers.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Alrighty. A &lt;code&gt;C&lt;&#x2F;code&gt; based WM using &lt;code&gt;GTK+ 2&lt;&#x2F;code&gt;. Not used this since Gnome 2, back in the 2012 days.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;installation&quot;&gt;Installation&lt;&#x2F;h2&gt;
&lt;p&gt;Already had Arch Linux running &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;wiki.archlinux.org&#x2F;index.php&#x2F;LightDM&quot;&gt;LightDM&lt;&#x2F;a&gt; as my Display Manager, so only needed the base install:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; class=&quot;language-sh z-code&quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; sudo pacman&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;S&lt;&#x2F;span&gt; lxde&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;Packages&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; (24&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;&#x2F;span&gt;) &lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;libfm-1.3.1-1&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt;  libfm-extra-1.3.1-1  libfm-gtk2-1.3.1-1  libwnck-2.31.0-2&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;              &lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;lxmenu-data-0.1.5-2&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt;  menu-cache-1.1.0-1  xmms2-0.8DrO_o.949.gca15e830-18&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;              &lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;gpicview-0.2.5-4&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; lxappearance-0.6.3-2  lxappearance-obconf-0.2.3-2&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;              &lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;lxde-common-0.99.2-2&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt;  lxde-icon-theme-0.5.1-4  lxdm-0.5.3-6  lxhotkey-0.1.0-2&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;              &lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;lxinput-0.3.5-2&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt;  lxlauncher-0.2.5-3 lxmusic-0.4.7-2  lxpanel-0.10.0-1&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;              &lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;lxrandr-0.3.2-1&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; xsession-1:0.5.4-1  lxtask-0.1.9-1  lxterminal-0.3.2-1&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;              &lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;openbox-3.6.1-4&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt;  pcmanfm-1.3.1-1&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Then, logged out of &lt;code&gt;cinnamon&lt;&#x2F;code&gt;, and switched WM from the login screen to &lt;code&gt;LXDE&lt;&#x2F;code&gt;. Easy.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;input-lag&quot;&gt;Input Lag&lt;&#x2F;h2&gt;
&lt;p&gt;Tested this out immediately to see if it felt better. Funnily enough, I can only tell in certain games that require a bunch of precise inputs. Most of my other currently installed games felt the same. But they aren&#x27;t really twitchy enough to tell.&lt;&#x2F;p&gt;
&lt;p&gt;That said, &lt;code&gt;Necrodancer&lt;&#x2F;code&gt; definitely felt better. No longer any recogonizable input lag when playing &lt;code&gt;Bolt&lt;&#x2F;code&gt; or &lt;code&gt;Coda&lt;&#x2F;code&gt;, and had issues with those before on &lt;code&gt;cinnamon&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;quirks&quot;&gt;Quirks&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;keyboard-bindings&quot;&gt;Keyboard bindings&lt;&#x2F;h3&gt;
&lt;p&gt;To be able to use this at all, I need some keyboard shortcuts to move windows between monitors. I tend to use &lt;code&gt;Super+Left&lt;&#x2F;code&gt; and &lt;code&gt;Super+Right&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;It was quite akward to set this up with &lt;code&gt;lxhotkey&lt;&#x2F;code&gt;. The magical incantation (which took almost an hour to figure out) was:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&quot;MoveResizeTo&quot;: &quot;monitor:prev&quot; : &amp;lt;Super&amp;gt;Left&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;&quot;MoveResizeTo&quot;: &quot;monitor:next&quot; : &amp;lt;Super&amp;gt;Right&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Interestingly, &lt;code&gt;lxhotkey&lt;&#x2F;code&gt; is a &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;lxde&#x2F;lxhotkey&#x2F;blob&#x2F;master&#x2F;src&#x2F;lxhotkey.c&quot;&gt;700 line .c file&lt;&#x2F;a&gt; last touched 3 years ago.&lt;&#x2F;p&gt;
&lt;p&gt;No way to bind &lt;code&gt;Super&lt;&#x2F;code&gt; to open the main menu AFAIKT, and man, that was hard to unlearn. Not that it matters, because there&#x27;s no fuzzy start and type on the main menu anyway. Amazing how tied you get to that. Not sure I can deal with not having that now. Maybe there&#x27;s some kind of &lt;code&gt;fzf&lt;&#x2F;code&gt; panel type thing I can install?&lt;&#x2F;p&gt;
&lt;h2 id=&quot;missing-out-of-the-box&quot;&gt;Missing out of the box&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;screen-locker&quot;&gt;Screen locker&lt;&#x2F;h3&gt;
&lt;p&gt;Screensaver button kept spinning, timing out. Turns out &lt;code&gt;xscreensaver&lt;&#x2F;code&gt; was not installed. Installing it fixed it, but it also pulled in like 15 perl packages, and looked absolutely awful.&lt;&#x2F;p&gt;
&lt;p&gt;Ended up installing &lt;code&gt;slock&lt;&#x2F;code&gt; straight from pacman instead. No dependencies there, and &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;git.suckless.org&#x2F;slock&#x2F;file&#x2F;slock.c.html&quot;&gt;it&#x27;s one c file&lt;&#x2F;a&gt;. No user input. Just a tree color screen. Black when locked, blue while typing, red on wrong password.&lt;&#x2F;p&gt;
&lt;p&gt;Didn&#x27;t have to actually write &lt;code&gt;slock&lt;&#x2F;code&gt; anywhere. It just worked after installing it (&lt;code&gt;lxlock&lt;&#x2F;code&gt; apparently figures this out). I had taken out the broken &lt;code&gt;xscreensaver&lt;&#x2F;code&gt; ref in &lt;code&gt;~&#x2F;.config&#x2F;lxsession&#x2F;LXDE&#x2F;autostart&lt;&#x2F;code&gt; anyway though.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;transparency&quot;&gt;Transparency&lt;&#x2F;h3&gt;
&lt;p&gt;This is kind of necessary for me for any terminals as I frequently overlay them on code with ~70% opacity. Installing &lt;code&gt;xcompmgr&lt;&#x2F;code&gt; straight from pacman and adding &lt;code&gt;xcompmgr &amp;amp;&lt;&#x2F;code&gt; to &lt;code&gt;~&#x2F;.config&#x2F;lxsession&#x2F;LXDE&#x2F;autostart&lt;&#x2F;code&gt; fixed it.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;look-and-feel&quot;&gt;Look and feel&lt;&#x2F;h2&gt;
&lt;h2 id=&quot;main-panel&quot;&gt;Main panel&lt;&#x2F;h2&gt;
&lt;p&gt;Needed about 15 minutes of configuration, and it ended up being stored in a 129 line file in &lt;code&gt;~&#x2F;.config&#x2F;lxpanel&#x2F;LXDE&#x2F;panels&#x2F;panel&lt;&#x2F;code&gt; But ended up looking very nice. Transparency on the bar itself was a nice touch.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;imgs&#x2F;wms&#x2F;lxde2-transparency.webp&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Though you can see that it gets confused if you have set a different background on each monitor, which is something you can do for some reason.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;imgs&#x2F;wms&#x2F;lxde2-dual-bg.webp&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;file-manager&quot;&gt;File manager&lt;&#x2F;h2&gt;
&lt;p&gt;Fine, could make it look like &lt;code&gt;nemo&lt;&#x2F;code&gt; in 5 minutes. You can see it in the background above. Had it&#x27;s config in a tiny: &lt;code&gt;~&#x2F;.config&#x2F;pcmanfm&#x2F;LXDE&#x2F;pcmanfm.conf&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;general-theme&quot;&gt;General Theme&lt;&#x2F;h2&gt;
&lt;p&gt;Default theme is quite ugly due to the overly glossy black panel, so you probably have to that transparent anyway. Everything kind of only fits the dark theme IMO. Went for the only decent one: &lt;code&gt;Adwaita-dark&lt;&#x2F;code&gt;, but put on &lt;code&gt;Mikachu&lt;&#x2F;code&gt; window borders. Nothing amazing, but completely fine.&lt;&#x2F;p&gt;
&lt;p&gt;Tiny file in &lt;code&gt;~&#x2F;.config&#x2F;lxsession&#x2F;LXDE&#x2F;desktop.conf&lt;&#x2F;code&gt; controls this.&lt;&#x2F;p&gt;
&lt;p&gt;Articles &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.addictivetips.com&#x2F;ubuntu-linux-tips&#x2F;lxde-themes&#x2F;&quot;&gt;exist&lt;&#x2F;a&gt; online on how to install themes for it, but that&#x27;s probably the gtk3 version. The few I tried didn&#x27;t work.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;verdict&quot;&gt;Verdict&lt;&#x2F;h1&gt;
&lt;p&gt;The most awkward thing is the lack of a launcher bar so far. Performance is great. Keybindings are mostly workeable. If some better tiling-like commands can be set up maybe you can make do with &lt;code&gt;alacritty&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Seems completely useable. Most configs &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;dotfiles&#x2F;pull&#x2F;31&#x2F;files&quot;&gt;stashed in this PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>A generic kubernetes client</title>
        <published>2019-06-04T00:00:00+00:00</published>
        <updated>2019-06-04T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://clux.dev/post/2019-06-04-towards-a-generic-kube-client/"/>
        <id>https://clux.dev/post/2019-06-04-towards-a-generic-kube-client/</id>
        
        <content type="html" xml:base="https://clux.dev/post/2019-06-04-towards-a-generic-kube-client/">&lt;p&gt;It&#x27;s been about a month since we released &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;kube-rs&quot;&gt;&lt;code&gt;kube&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;, a new rust client library for kubernetes. We &lt;a href=&quot;&#x2F;post&#x2F;2019-04-29-rust-on-kubernetes&quot;&gt;covered&lt;&#x2F;a&gt; the initial release, but it was full of naive optimism and uncertainty. Would the generic setup work with native objects? How far would it extend? Non-standard objects? Patch handling? Event handling? Surely, it&#x27;d be a fools errand to write an entire client library?&lt;&#x2F;p&gt;
&lt;p&gt;With the last &lt;code&gt;0.10.0&lt;&#x2F;code&gt; release, it&#x27;s now clear that the generic setup extends quite far. Unfortunately, this yak is hairy, even by yak standards.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;update-from-2021&quot;&gt;Update from 2021&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;strong&gt;This post is old and many details herein are severely outdated&lt;&#x2F;strong&gt;.
A few &lt;code&gt;EDIT:&lt;&#x2F;code&gt; markers have been highlighted to point out the biggest changes, but the rest of the post is left unedited for historical reasons.
Consider checking for a more recent &lt;a href=&quot;&#x2F;tags&#x2F;kubernetes&#x2F;&quot;&gt;#kubernetes&lt;&#x2F;a&gt; post.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;overview&quot;&gt;Overview&lt;&#x2F;h2&gt;
&lt;p&gt;The reason this library even works at all, is the amount of homebrew generics present in the kubernetes API.&lt;&#x2F;p&gt;
&lt;p&gt;Thanks to the hard work of many kubernetes engineers, &lt;strong&gt;most&lt;&#x2F;strong&gt; API returns can be serialized into some wrapper around this struct:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;rust&quot; class=&quot;language-rust z-code&quot;&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-annotation z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-annotation z-rust&quot;&gt;#&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-annotation z-rust&quot;&gt;derive&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-annotation z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-annotation z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;Deserialize&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;,&lt;&#x2F;span&gt; Serialize&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;,&lt;&#x2F;span&gt; Clone&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-annotation z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;span class=&quot;z-storage z-modifier z-rust&quot;&gt;pub&lt;&#x2F;span&gt; &lt;span class=&quot;z-storage z-type z-struct z-rust&quot;&gt;struct&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;span class=&quot;z-meta z-generic z-rust&quot;&gt;&lt;span class=&quot;z-entity z-name z-struct z-rust&quot;&gt;Object&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-generic z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-begin z-rust&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;T, U&lt;span class=&quot;z-punctuation z-definition z-generic z-end z-rust&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt; where T: Clone, U: Clone
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-rust&quot;&gt;{&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-meta z-annotation z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-annotation z-rust&quot;&gt;#&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-annotation z-rust&quot;&gt;serde&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-annotation z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-annotation z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;flatten&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-annotation z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-storage z-modifier z-rust&quot;&gt;pub&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-member z-rust&quot;&gt;types&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-type z-rust&quot;&gt;:&lt;&#x2F;span&gt; TypeMeta,
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-storage z-modifier z-rust&quot;&gt;pub&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-member z-rust&quot;&gt;metadata&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-type z-rust&quot;&gt;:&lt;&#x2F;span&gt; ObjectMeta,
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-storage z-modifier z-rust&quot;&gt;pub&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-member z-rust&quot;&gt;spec&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-type z-rust&quot;&gt;:&lt;&#x2F;span&gt; T,
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-meta z-annotation z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-annotation z-rust&quot;&gt;#&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-annotation z-rust&quot;&gt;serde&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-annotation z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-annotation z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;default&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;,&lt;&#x2F;span&gt; skip_serializing_if &lt;span class=&quot;z-keyword z-operator z-rust&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;Option::is_none&lt;span class=&quot;z-punctuation z-definition z-string z-end z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-annotation z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-storage z-modifier z-rust&quot;&gt;pub&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-member z-rust&quot;&gt;status&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-type z-rust&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-generic z-rust&quot;&gt;&lt;span class=&quot;z-support z-type z-rust&quot;&gt;Option&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-begin z-rust&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;U&lt;span class=&quot;z-punctuation z-definition z-generic z-end z-rust&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;,
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-rust&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;You can infer a lot of the inner api workings by looking at &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kubernetes&#x2F;apimachinery&#x2F;blob&#x2F;master&#x2F;pkg&#x2F;apis&#x2F;meta&#x2F;v1&#x2F;types.go&quot;&gt;apimachinery&#x2F;meta&#x2F;types.go&lt;&#x2F;a&gt;. Kris Nova&#x27;s 2019 FOSDEM talk on [the internal clusterfuck of kubernetes]
(https:&#x2F;&#x2F;fosdem.org&#x2F;2019&#x2F;schedule&#x2F;event&#x2F;kubernetesclusterfuck&#x2F;) also provides a much welcome, rant-flavoured context.&lt;&#x2F;p&gt;
&lt;p&gt;By taking advantage of this, we can provide a much simpler interface to what the generated openapi bindings can provide. But it requires some other abstractions:&lt;&#x2F;p&gt;
&lt;h2 id=&quot;more-object-patterns&quot;&gt;More object patterns&lt;&#x2F;h2&gt;
&lt;p&gt;Let&#x27;s compare some openapi generated structs:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;k8s-openapi&#x2F;0.4.0&#x2F;k8s_openapi&#x2F;api&#x2F;core&#x2F;v1&#x2F;struct.PodList.html&quot;&gt;PodList&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;k8s-openapi&#x2F;0.4.0&#x2F;k8s_openapi&#x2F;api&#x2F;core&#x2F;v1&#x2F;struct.NodeList.html&quot;&gt;NodeList&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;k8s-openapi&#x2F;0.4.0&#x2F;k8s_openapi&#x2F;api&#x2F;apps&#x2F;v1&#x2F;struct.DeploymentList.html&quot;&gt;DeploymentList&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;All with identical contents. You could just define this generic struct:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;rust&quot; class=&quot;language-rust z-code&quot;&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-annotation z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-annotation z-rust&quot;&gt;#&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-annotation z-rust&quot;&gt;derive&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-annotation z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-annotation z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;Deserialize&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-annotation z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;span class=&quot;z-storage z-modifier z-rust&quot;&gt;pub&lt;&#x2F;span&gt; &lt;span class=&quot;z-storage z-type z-struct z-rust&quot;&gt;struct&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;span class=&quot;z-meta z-generic z-rust&quot;&gt;&lt;span class=&quot;z-entity z-name z-struct z-rust&quot;&gt;ObjectList&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-generic z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-begin z-rust&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;T&lt;span class=&quot;z-punctuation z-definition z-generic z-end z-rust&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt; where
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;  T: Clone
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-rust&quot;&gt;{&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-storage z-modifier z-rust&quot;&gt;pub&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-member z-rust&quot;&gt;metadata&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-type z-rust&quot;&gt;:&lt;&#x2F;span&gt; ListMeta,
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-meta z-annotation z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-annotation z-rust&quot;&gt;#&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-annotation z-rust&quot;&gt;serde&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-annotation z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-annotation z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-rust&quot;&gt;&lt;span class=&quot;z-variable z-function z-rust&quot;&gt;bound&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-rust&quot;&gt;deserialize &lt;span class=&quot;z-keyword z-operator z-rust&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;Vec&amp;lt;T&amp;gt;: Deserialize&amp;lt;&amp;#39;de&amp;gt;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-rust&quot;&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-annotation z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-storage z-modifier z-rust&quot;&gt;pub&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-member z-rust&quot;&gt;items&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-type z-rust&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-generic z-rust&quot;&gt;&lt;span class=&quot;z-support z-type z-rust&quot;&gt;Vec&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-begin z-rust&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;T&lt;span class=&quot;z-punctuation z-definition z-generic z-end z-rust&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;,
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-rust&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Similarly, the query parameters optionals structs:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;k8s-openapi&#x2F;0.4.0&#x2F;k8s_openapi&#x2F;api&#x2F;core&#x2F;v1&#x2F;struct.ListNodeOptional.html&quot;&gt;ListNodeOptional&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;k8s-openapi&#x2F;0.4.0&#x2F;k8s_openapi&#x2F;api&#x2F;core&#x2F;v1&#x2F;struct.ListPodForAllNamespacesOptional.html&quot;&gt;ListPodForAllNamespacesOptional&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;k8s-openapi&#x2F;0.4.0&#x2F;k8s_openapi&#x2F;api&#x2F;apps&#x2F;v1&#x2F;struct.ListDeploymentForAllNamespacesOptional.html&quot;&gt;ListDeploymentForAllNamespacesOptional&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;These are a mouthful. And again, almost all of them have the same fields. Not going to go through the whole setup here, because the TL;DR is that once you build everything with the &lt;code&gt;types.go&lt;&#x2F;code&gt; assumptions in mind, a lot just falls into place and we can write our own generic api machinery.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;api-machinery&quot;&gt;Api machinery&lt;&#x2F;h2&gt;
&lt;p&gt;If you follow this rabbit hole, you can end up with the following type signatures:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;rust&quot; class=&quot;language-rust z-code&quot;&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-impl z-rust&quot;&gt;&lt;span class=&quot;z-storage z-type z-impl z-rust&quot;&gt;impl&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-impl z-rust&quot;&gt;&lt;span class=&quot;z-meta z-generic z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-begin z-rust&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;K&lt;span class=&quot;z-punctuation z-definition z-generic z-end z-rust&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-impl z-rust&quot;&gt; &lt;span class=&quot;z-entity z-name z-impl z-rust&quot;&gt;Api&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-generic z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-begin z-rust&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;K&lt;span class=&quot;z-punctuation z-definition z-generic z-end z-rust&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-impl z-rust&quot;&gt;&lt;span class=&quot;z-keyword z-other z-rust&quot;&gt;where&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-impl z-rust&quot;&gt;    K&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;:&lt;&#x2F;span&gt; Clone + DeserializeOwned + KubeObject
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-impl z-rust&quot;&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-impl z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-rust&quot;&gt;{&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-impl z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-storage z-type z-function z-rust&quot;&gt;fn&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-function z-rust&quot;&gt;get&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-rust&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-parameter z-rust&quot;&gt;self&lt;&#x2F;span&gt;, &lt;span class=&quot;z-variable z-parameter z-rust&quot;&gt;name&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-rust&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span class=&quot;z-storage z-type z-rust&quot;&gt;str&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt; &lt;span class=&quot;z-meta z-function z-return-type z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-generic z-rust&quot;&gt;&lt;span class=&quot;z-support z-type z-rust&quot;&gt;Result&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-begin z-rust&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;K&lt;span class=&quot;z-punctuation z-definition z-generic z-end z-rust&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-rust&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-impl z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-storage z-type z-function z-rust&quot;&gt;fn&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-function z-rust&quot;&gt;create&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-rust&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-parameter z-rust&quot;&gt;self&lt;&#x2F;span&gt;, &lt;span class=&quot;z-variable z-parameter z-rust&quot;&gt;pp&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-rust&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;PostParams, &lt;span class=&quot;z-variable z-parameter z-rust&quot;&gt;data&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-generic z-rust&quot;&gt;&lt;span class=&quot;z-support z-type z-rust&quot;&gt;Vec&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-begin z-rust&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-storage z-type z-rust&quot;&gt;u8&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-end z-rust&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt; &lt;span class=&quot;z-meta z-function z-return-type z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-generic z-rust&quot;&gt;&lt;span class=&quot;z-support z-type z-rust&quot;&gt;Result&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-begin z-rust&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;K&lt;span class=&quot;z-punctuation z-definition z-generic z-end z-rust&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-rust&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-impl z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-storage z-type z-function z-rust&quot;&gt;fn&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-function z-rust&quot;&gt;patch&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-rust&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-parameter z-rust&quot;&gt;self&lt;&#x2F;span&gt;, &lt;span class=&quot;z-variable z-parameter z-rust&quot;&gt;name&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-rust&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span class=&quot;z-storage z-type z-rust&quot;&gt;str&lt;&#x2F;span&gt;, &lt;span class=&quot;z-variable z-parameter z-rust&quot;&gt;pp&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-rust&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;PostParams, &lt;span class=&quot;z-variable z-parameter z-rust&quot;&gt;patch&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-generic z-rust&quot;&gt;&lt;span class=&quot;z-support z-type z-rust&quot;&gt;Vec&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-begin z-rust&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-storage z-type z-rust&quot;&gt;u8&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-end z-rust&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt; &lt;span class=&quot;z-meta z-function z-return-type z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-generic z-rust&quot;&gt;&lt;span class=&quot;z-support z-type z-rust&quot;&gt;Result&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-begin z-rust&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;K&lt;span class=&quot;z-punctuation z-definition z-generic z-end z-rust&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-rust&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-impl z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-storage z-type z-function z-rust&quot;&gt;fn&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-function z-rust&quot;&gt;replace&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-rust&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-parameter z-rust&quot;&gt;self&lt;&#x2F;span&gt;, &lt;span class=&quot;z-variable z-parameter z-rust&quot;&gt;name&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-rust&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span class=&quot;z-storage z-type z-rust&quot;&gt;str&lt;&#x2F;span&gt;, &lt;span class=&quot;z-variable z-parameter z-rust&quot;&gt;pp&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-rust&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;PostParams, &lt;span class=&quot;z-variable z-parameter z-rust&quot;&gt;data&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-generic z-rust&quot;&gt;&lt;span class=&quot;z-support z-type z-rust&quot;&gt;Vec&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-begin z-rust&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-storage z-type z-rust&quot;&gt;u8&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-end z-rust&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt; &lt;span class=&quot;z-meta z-function z-return-type z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-generic z-rust&quot;&gt;&lt;span class=&quot;z-support z-type z-rust&quot;&gt;Result&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-begin z-rust&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;K&lt;span class=&quot;z-punctuation z-definition z-generic z-end z-rust&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-rust&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-impl z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-storage z-type z-function z-rust&quot;&gt;fn&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-function z-rust&quot;&gt;watch&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-rust&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-parameter z-rust&quot;&gt;self&lt;&#x2F;span&gt;, &lt;span class=&quot;z-variable z-parameter z-rust&quot;&gt;lp&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-rust&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;ListParams, &lt;span class=&quot;z-variable z-parameter z-rust&quot;&gt;version&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-rust&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span class=&quot;z-storage z-type z-rust&quot;&gt;str&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt; &lt;span class=&quot;z-meta z-function z-return-type z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-generic z-rust&quot;&gt;&lt;span class=&quot;z-support z-type z-rust&quot;&gt;Result&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-begin z-rust&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-generic z-rust&quot;&gt;&lt;span class=&quot;z-support z-type z-rust&quot;&gt;Vec&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-begin z-rust&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-generic z-rust&quot;&gt;WatchEvent&lt;span class=&quot;z-punctuation z-definition z-generic z-begin z-rust&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;P, U&lt;span class=&quot;z-punctuation z-definition z-generic z-end z-rust&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-end z-rust&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-end z-rust&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-rust&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-impl z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-storage z-type z-function z-rust&quot;&gt;fn&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-function z-rust&quot;&gt;list&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-rust&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-parameter z-rust&quot;&gt;self&lt;&#x2F;span&gt;, &lt;span class=&quot;z-variable z-parameter z-rust&quot;&gt;lp&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-rust&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;ListParams&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt; &lt;span class=&quot;z-meta z-function z-return-type z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-generic z-rust&quot;&gt;&lt;span class=&quot;z-support z-type z-rust&quot;&gt;Result&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-begin z-rust&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-generic z-rust&quot;&gt;ObjectList&lt;span class=&quot;z-punctuation z-definition z-generic z-begin z-rust&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;K&lt;span class=&quot;z-punctuation z-definition z-generic z-end z-rust&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-end z-rust&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-rust&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-impl z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-storage z-type z-function z-rust&quot;&gt;fn&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-function z-rust&quot;&gt;delete_collection&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-rust&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-parameter z-rust&quot;&gt;self&lt;&#x2F;span&gt;, &lt;span class=&quot;z-variable z-parameter z-rust&quot;&gt;lp&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-rust&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;ListParams&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt; &lt;span class=&quot;z-meta z-function z-return-type z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-generic z-rust&quot;&gt;&lt;span class=&quot;z-support z-type z-rust&quot;&gt;Result&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-begin z-rust&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-generic z-rust&quot;&gt;Either&lt;span class=&quot;z-punctuation z-definition z-generic z-begin z-rust&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-generic z-rust&quot;&gt;ObjectList&lt;span class=&quot;z-punctuation z-definition z-generic z-begin z-rust&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;K&lt;span class=&quot;z-punctuation z-definition z-generic z-end z-rust&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;, Status&lt;span class=&quot;z-punctuation z-definition z-generic z-end z-rust&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-end z-rust&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-rust&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-impl z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-storage z-type z-function z-rust&quot;&gt;fn&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-function z-rust&quot;&gt;delete&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-rust&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-parameter z-rust&quot;&gt;self&lt;&#x2F;span&gt;, &lt;span class=&quot;z-variable z-parameter z-rust&quot;&gt;name&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-rust&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span class=&quot;z-storage z-type z-rust&quot;&gt;str&lt;&#x2F;span&gt;, &lt;span class=&quot;z-variable z-parameter z-rust&quot;&gt;dp&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-rust&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;DeleteParams&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt; &lt;span class=&quot;z-meta z-function z-return-type z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-generic z-rust&quot;&gt;&lt;span class=&quot;z-support z-type z-rust&quot;&gt;Result&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-begin z-rust&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-generic z-rust&quot;&gt;Either&lt;span class=&quot;z-punctuation z-definition z-generic z-begin z-rust&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;K, Status&lt;span class=&quot;z-punctuation z-definition z-generic z-end z-rust&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-end z-rust&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-rust&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-impl z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-impl z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-storage z-type z-function z-rust&quot;&gt;fn&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-function z-rust&quot;&gt;get_status&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-rust&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-parameter z-rust&quot;&gt;self&lt;&#x2F;span&gt;, &lt;span class=&quot;z-variable z-parameter z-rust&quot;&gt;name&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-rust&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span class=&quot;z-storage z-type z-rust&quot;&gt;str&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt; &lt;span class=&quot;z-meta z-function z-return-type z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-generic z-rust&quot;&gt;&lt;span class=&quot;z-support z-type z-rust&quot;&gt;Result&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-begin z-rust&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;K&lt;span class=&quot;z-punctuation z-definition z-generic z-end z-rust&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-rust&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-impl z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-storage z-type z-function z-rust&quot;&gt;fn&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-function z-rust&quot;&gt;patch_status&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-rust&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-parameter z-rust&quot;&gt;self&lt;&#x2F;span&gt;, &lt;span class=&quot;z-variable z-parameter z-rust&quot;&gt;name&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-rust&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span class=&quot;z-storage z-type z-rust&quot;&gt;str&lt;&#x2F;span&gt;, &lt;span class=&quot;z-variable z-parameter z-rust&quot;&gt;pp&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-rust&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;PostParams, &lt;span class=&quot;z-variable z-parameter z-rust&quot;&gt;patch&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-generic z-rust&quot;&gt;&lt;span class=&quot;z-support z-type z-rust&quot;&gt;Vec&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-begin z-rust&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-storage z-type z-rust&quot;&gt;u8&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-end z-rust&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt; &lt;span class=&quot;z-meta z-function z-return-type z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-generic z-rust&quot;&gt;&lt;span class=&quot;z-support z-type z-rust&quot;&gt;Result&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-begin z-rust&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;K&lt;span class=&quot;z-punctuation z-definition z-generic z-end z-rust&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-rust&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-impl z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-storage z-type z-function z-rust&quot;&gt;fn&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-function z-rust&quot;&gt;replace_status&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-rust&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-parameter z-rust&quot;&gt;self&lt;&#x2F;span&gt;, &lt;span class=&quot;z-variable z-parameter z-rust&quot;&gt;name&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-rust&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span class=&quot;z-storage z-type z-rust&quot;&gt;str&lt;&#x2F;span&gt;, &lt;span class=&quot;z-variable z-parameter z-rust&quot;&gt;pp&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-rust&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;PostParams, &lt;span class=&quot;z-variable z-parameter z-rust&quot;&gt;data&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-generic z-rust&quot;&gt;&lt;span class=&quot;z-support z-type z-rust&quot;&gt;Vec&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-begin z-rust&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-storage z-type z-rust&quot;&gt;u8&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-end z-rust&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt; &lt;span class=&quot;z-meta z-function z-return-type z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-generic z-rust&quot;&gt;&lt;span class=&quot;z-support z-type z-rust&quot;&gt;Result&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-begin z-rust&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;K&lt;span class=&quot;z-punctuation z-definition z-generic z-end z-rust&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-rust&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-impl z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-rust&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;These are the &lt;em&gt;main&lt;&#x2F;em&gt; query methods on our core &lt;code&gt;Api&lt;&#x2F;code&gt; (&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;clux.github.io&#x2F;kube-rs&#x2F;kube&#x2F;api&#x2F;struct.Api.html&quot;&gt;docs&lt;&#x2F;a&gt; &#x2F; &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;kube-rs&#x2F;blob&#x2F;master&#x2F;src&#x2F;api&#x2F;typed.rs&quot;&gt;src&lt;&#x2F;a&gt;). Observe that similar types of requests take the same &lt;code&gt;*Params&lt;&#x2F;code&gt; objects to configure queries. Return types have clear patterns, and serialization happens before entering the &lt;code&gt;Api&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;There&#x27;s is no hidden de-multiplexing on the parsing side. When calling &lt;code&gt;list&lt;&#x2F;code&gt;, we just &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;turbo.fish&#x2F;&quot;&gt;turbofish&lt;&#x2F;a&gt; that type in for &lt;code&gt;serde&lt;&#x2F;code&gt; to deal with internally:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;rust&quot; class=&quot;language-rust z-code&quot;&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-variable z-language z-rust&quot;&gt;self&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-rust&quot;&gt;.&lt;&#x2F;span&gt;client&lt;span class=&quot;z-punctuation z-accessor z-dot z-rust&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-path z-rust&quot;&gt;request&lt;span class=&quot;z-punctuation z-accessor z-rust&quot;&gt;::&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-generic z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-begin z-rust&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-generic z-rust&quot;&gt;ObjectList&lt;span class=&quot;z-punctuation z-definition z-generic z-begin z-rust&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;K&lt;span class=&quot;z-punctuation z-definition z-generic z-end z-rust&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-end z-rust&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;req&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Where, typically &lt;code&gt;K = Object&amp;lt;P, U&amp;gt;&lt;&#x2F;code&gt;, but actually; &lt;code&gt;K&lt;&#x2F;code&gt; is something implementing a &lt;code&gt;KubeObject&lt;&#x2F;code&gt; trait. This is our one required trait, and you shouldn&#x27;t don&#x27;t have to deal with it because of an automatic blanket implementation for &lt;code&gt;K = Object&amp;lt;P, U&amp;gt;&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;client-go-semantics&quot;&gt;client-go semantics&lt;&#x2F;h3&gt;
&lt;p&gt;While it might not seem like it with all this talk about generics; we are actually trying to model things a little closer to &lt;code&gt;client-go&lt;&#x2F;code&gt; and internal kube &lt;code&gt;apimachinery&lt;&#x2F;code&gt; (insofar as it makes sense).&lt;&#x2F;p&gt;
&lt;p&gt;Just have a look at how &lt;code&gt;client-go&lt;&#x2F;code&gt; presents &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kubernetes&#x2F;client-go&#x2F;blob&#x2F;7b18d6600f6b0022e31c46b46875beffd85cc71a&#x2F;kubernetes&#x2F;typed&#x2F;core&#x2F;v1&#x2F;pod.go#L39-L50&quot;&gt;Pod objects&lt;&#x2F;a&gt; or &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kubernetes&#x2F;client-go&#x2F;blob&#x2F;e65ca70987a6941be583f205696e0b1b7da82002&#x2F;kubernetes&#x2F;typed&#x2F;extensions&#x2F;v1beta1&#x2F;deployment.go#L39-L53&quot;&gt;Deployment objects&lt;&#x2F;a&gt;. There&#x27;s already a pretty clear overlap with the above signatures.&lt;&#x2F;p&gt;
&lt;p&gt;Maybe you are in the camp with &lt;code&gt;Bryan Liles&lt;&#x2F;code&gt;, who said that &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;Rbe0eNXqCoA?t=563&quot;&gt;&quot;client-go is not for mortals&quot;&lt;&#x2F;a&gt; during his kubecon 2019 keynote. It&#x27;s certainly a large library (sitting at ~80k lines of mostly go), but amongst the &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;godoc.org&#x2F;k8s.io&#x2F;client-go&#x2F;tools&#x2F;cache&quot;&gt;somewhat cruft-filled chunks&lt;&#x2F;a&gt;, it does embed some &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;godoc.org&#x2F;k8s.io&#x2F;client-go&#x2F;util&#x2F;retry#RetryOnConflict&quot;&gt;really interesting patterns&lt;&#x2F;a&gt; to consider.&lt;&#x2F;p&gt;
&lt;p&gt;The terminology in this library should therefore be a lot more familiar now. Not only are using ideas from &lt;code&gt;client-go&lt;&#x2F;code&gt;, our core assumptions come from &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;kubernetes.io&#x2F;docs&#x2F;reference&#x2F;using-api&#x2F;api-concepts&#x2F;&quot;&gt;api-concepts&lt;&#x2F;a&gt;, and we otherwise try to take inspiration from frameworks such as &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;book.kubebuilder.io&#x2F;&quot;&gt;kubebuilder&lt;&#x2F;a&gt;. That said, we are inevitably going to hit some walls when kubernetes isn&#x27;t as generic as we inadvertently promised it to be.&lt;&#x2F;p&gt;
&lt;p&gt;But delay that tale; let&#x27;s first look at how to use the &lt;code&gt;Api&lt;&#x2F;code&gt;:&lt;&#x2F;p&gt;
&lt;h2 id=&quot;api-usage&quot;&gt;Api Usage&lt;&#x2F;h2&gt;
&lt;p&gt;Using the &lt;code&gt;Api&lt;&#x2F;code&gt; now amounts to choosing one of the constructors for the native &#x2F; custom type(s) you want and use with the verbs listed above.&lt;&#x2F;p&gt;
&lt;p&gt;For &lt;code&gt;Pod&lt;&#x2F;code&gt; objects, you can construct and use such an object like:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;rust&quot; class=&quot;language-rust z-code&quot;&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-storage z-type z-rust&quot;&gt;let&lt;&#x2F;span&gt; pods &lt;span class=&quot;z-keyword z-operator z-assignment z-rust&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-path z-rust&quot;&gt;Api&lt;span class=&quot;z-punctuation z-accessor z-rust&quot;&gt;::&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;v1Pod&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;client&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-rust&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-function z-rust&quot;&gt;within&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;kube-system&lt;span class=&quot;z-punctuation z-definition z-string z-end z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-rust&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-keyword z-control z-rust&quot;&gt;for&lt;&#x2F;span&gt; p &lt;span class=&quot;z-keyword z-operator z-rust&quot;&gt;in&lt;&#x2F;span&gt; pods&lt;span class=&quot;z-punctuation z-accessor z-dot z-rust&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-function z-rust&quot;&gt;list&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-bitwise z-rust&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-path z-rust&quot;&gt;ListParams&lt;span class=&quot;z-punctuation z-accessor z-rust&quot;&gt;::&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;default&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-rust&quot;&gt;?&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-rust&quot;&gt;.&lt;&#x2F;span&gt;items &lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-rust&quot;&gt;{&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-support z-macro z-rust&quot;&gt;println!&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;Got Pod: &lt;span class=&quot;z-constant z-other z-placeholder z-rust&quot;&gt;{}&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;,&lt;&#x2F;span&gt; p&lt;span class=&quot;z-punctuation z-accessor z-dot z-rust&quot;&gt;.&lt;&#x2F;span&gt;metadata&lt;span class=&quot;z-punctuation z-accessor z-dot z-rust&quot;&gt;.&lt;&#x2F;span&gt;name&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-rust&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-rust&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Here the &lt;code&gt;p&lt;&#x2F;code&gt; is an &lt;code&gt;Object&amp;lt;PodSpec, PodStatus&amp;gt;&lt;&#x2F;code&gt;. This leverages &lt;code&gt;k8s-openapi&lt;&#x2F;code&gt; for &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;k8s-openapi&#x2F;0.4.0&#x2F;k8s_openapi&#x2F;api&#x2F;core&#x2F;v1&#x2F;struct.PodSpec.html&quot;&gt;PodSpec&lt;&#x2F;a&gt; and &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;k8s-openapi&#x2F;0.4.0&#x2F;k8s_openapi&#x2F;api&#x2F;core&#x2F;v1&#x2F;struct.PodStatus.html&quot;&gt;PodStatus&lt;&#x2F;a&gt; as the source of these large types.&lt;&#x2F;p&gt;
&lt;p&gt;If needed, you &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;kube-rs#raw-api&quot;&gt;can define these structs yourself&lt;&#x2F;a&gt;, but as an example, let&#x27;s show how that plays in with &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;kubernetes.io&#x2F;docs&#x2F;tasks&#x2F;access-kubernetes-api&#x2F;custom-resources&#x2F;custom-resource-definitions&#x2F;&quot;&gt;CRDs&lt;&#x2F;a&gt;; because custom resources require you to define everything about them anyway.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;rust&quot; class=&quot;language-rust z-code&quot;&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-annotation z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-annotation z-rust&quot;&gt;#&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-annotation z-rust&quot;&gt;derive&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-annotation z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-annotation z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;Deserialize&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;,&lt;&#x2F;span&gt; Serialize&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;,&lt;&#x2F;span&gt; Clone&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-annotation z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;span class=&quot;z-storage z-modifier z-rust&quot;&gt;pub&lt;&#x2F;span&gt; &lt;span class=&quot;z-storage z-type z-struct z-rust&quot;&gt;struct&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;span class=&quot;z-entity z-name z-struct z-rust&quot;&gt;FooSpec&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-rust&quot;&gt;{&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-variable z-other z-member z-rust&quot;&gt;name&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-type z-rust&quot;&gt;:&lt;&#x2F;span&gt; String,
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-variable z-other z-member z-rust&quot;&gt;info&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-type z-rust&quot;&gt;:&lt;&#x2F;span&gt; String,
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-rust&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-annotation z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-annotation z-rust&quot;&gt;#&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-annotation z-rust&quot;&gt;derive&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-annotation z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-annotation z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;Deserialize&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;,&lt;&#x2F;span&gt; Serialize&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;,&lt;&#x2F;span&gt; Clone&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;,&lt;&#x2F;span&gt; Debug&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;,&lt;&#x2F;span&gt; Default&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-annotation z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;span class=&quot;z-storage z-modifier z-rust&quot;&gt;pub&lt;&#x2F;span&gt; &lt;span class=&quot;z-storage z-type z-struct z-rust&quot;&gt;struct&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;span class=&quot;z-entity z-name z-struct z-rust&quot;&gt;FooStatus&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-rust&quot;&gt;{&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-variable z-other z-member z-rust&quot;&gt;isBad&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-type z-rust&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-storage z-type z-rust&quot;&gt;bool&lt;&#x2F;span&gt;,
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-rust&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-storage z-type z-type z-rust&quot;&gt;type&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-type z-rust&quot;&gt;Foo&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-rust&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-generic z-rust&quot;&gt;Object&lt;span class=&quot;z-punctuation z-definition z-generic z-begin z-rust&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;FooSpec, FooStatus&lt;span class=&quot;z-punctuation z-definition z-generic z-end z-rust&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-rust&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;This is all you need to get your &quot;code generation&quot;. No external tools to shell out to; &lt;code&gt;cargo build&lt;&#x2F;code&gt; gives you your json serialization&#x2F;deserialization, and the generic &lt;code&gt;Api&lt;&#x2F;code&gt; gives you your api machinery.&lt;&#x2F;p&gt;
&lt;p&gt;You can therefore interact with your &lt;code&gt;customResource&lt;&#x2F;code&gt; as follows:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;rust&quot; class=&quot;language-rust z-code&quot;&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-storage z-type z-rust&quot;&gt;let&lt;&#x2F;span&gt; foos &lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-generic z-rust&quot;&gt;Api&lt;span class=&quot;z-punctuation z-definition z-generic z-begin z-rust&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;Foo&lt;span class=&quot;z-punctuation z-definition z-generic z-end z-rust&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-rust&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-path z-rust&quot;&gt;Api&lt;span class=&quot;z-punctuation z-accessor z-rust&quot;&gt;::&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;customResource&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;client&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;foos&lt;span class=&quot;z-punctuation z-definition z-string z-end z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;    &lt;span class=&quot;z-punctuation z-accessor z-dot z-rust&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-function z-rust&quot;&gt;version&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;v1&lt;span class=&quot;z-punctuation z-definition z-string z-end z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;    &lt;span class=&quot;z-punctuation z-accessor z-dot z-rust&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-function z-rust&quot;&gt;group&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;clux.dev&lt;span class=&quot;z-punctuation z-definition z-string z-end z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;    &lt;span class=&quot;z-punctuation z-accessor z-dot z-rust&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-function z-rust&quot;&gt;within&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;default&lt;span class=&quot;z-punctuation z-definition z-string z-end z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-rust&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-storage z-type z-rust&quot;&gt;let&lt;&#x2F;span&gt; baz &lt;span class=&quot;z-keyword z-operator z-assignment z-rust&quot;&gt;=&lt;&#x2F;span&gt; foos&lt;span class=&quot;z-punctuation z-accessor z-dot z-rust&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-function z-rust&quot;&gt;get&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;baz&lt;span class=&quot;z-punctuation z-definition z-string z-end z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-rust&quot;&gt;?&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-rust&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-support z-macro z-rust&quot;&gt;assert_eq!&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;baz&lt;span class=&quot;z-punctuation z-accessor z-dot z-rust&quot;&gt;.&lt;&#x2F;span&gt;spec&lt;span class=&quot;z-punctuation z-accessor z-dot z-rust&quot;&gt;.&lt;&#x2F;span&gt;info&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;baz info&lt;span class=&quot;z-punctuation z-definition z-string z-end z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-rust&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Here we are fetching and parsing straight into the &lt;code&gt;Foo&lt;&#x2F;code&gt; object on &lt;code&gt;.get()&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;So what about posting and patching? For brevity, let&#x27;s use the &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;docs.serde.rs&#x2F;serde_json&#x2F;macro.json.html&quot;&gt;serde_json macro&lt;&#x2F;a&gt;:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;rust&quot; class=&quot;language-rust z-code&quot;&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-storage z-type z-rust&quot;&gt;let&lt;&#x2F;span&gt; f &lt;span class=&quot;z-keyword z-operator z-assignment z-rust&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-macro z-rust&quot;&gt;json!&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-rust&quot;&gt;{&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-string z-quoted z-double z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;apiVersion&lt;span class=&quot;z-punctuation z-definition z-string z-end z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;clux.dev&#x2F;v1&lt;span class=&quot;z-punctuation z-definition z-string z-end z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;,&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-string z-quoted z-double z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;kind&lt;span class=&quot;z-punctuation z-definition z-string z-end z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;Foo&lt;span class=&quot;z-punctuation z-definition z-string z-end z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;,&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-string z-quoted z-double z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;metadata&lt;span class=&quot;z-punctuation z-definition z-string z-end z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-rust&quot;&gt;{&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;name&lt;span class=&quot;z-punctuation z-definition z-string z-end z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;baz&lt;span class=&quot;z-punctuation z-definition z-string z-end z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-rust&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;,&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-string z-quoted z-double z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;spec&lt;span class=&quot;z-punctuation z-definition z-string z-end z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-rust&quot;&gt;{&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;name&lt;span class=&quot;z-punctuation z-definition z-string z-end z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;baz&lt;span class=&quot;z-punctuation z-definition z-string z-end z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;info&lt;span class=&quot;z-punctuation z-definition z-string z-end z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;baz info&lt;span class=&quot;z-punctuation z-definition z-string z-end z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-rust&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;,&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-rust&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-rust&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-storage z-type z-rust&quot;&gt;let&lt;&#x2F;span&gt; o &lt;span class=&quot;z-keyword z-operator z-assignment z-rust&quot;&gt;=&lt;&#x2F;span&gt; foos&lt;span class=&quot;z-punctuation z-accessor z-dot z-rust&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-function z-rust&quot;&gt;create&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-bitwise z-rust&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;pp&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-path z-rust&quot;&gt;serde_json&lt;span class=&quot;z-punctuation z-accessor z-rust&quot;&gt;::&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;to_vec&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-bitwise z-rust&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;f&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-rust&quot;&gt;?&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-rust&quot;&gt;?&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-rust&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-support z-macro z-rust&quot;&gt;assert_eq!&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;f&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;metadata&lt;span class=&quot;z-punctuation z-definition z-string z-end z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;name&lt;span class=&quot;z-punctuation z-definition z-string z-end z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;,&lt;&#x2F;span&gt; o&lt;span class=&quot;z-punctuation z-accessor z-dot z-rust&quot;&gt;.&lt;&#x2F;span&gt;metadata&lt;span class=&quot;z-punctuation z-accessor z-dot z-rust&quot;&gt;.&lt;&#x2F;span&gt;name&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Easy enough, if &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;kube-rs&#x2F;issues&#x2F;31&quot;&gt;a tad verbose&lt;&#x2F;a&gt;. What about a &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;kubernetes.io&#x2F;docs&#x2F;tasks&#x2F;run-application&#x2F;update-api-object-kubectl-patch&#x2F;#alternate-forms-of-the-kubectl-patch-command&quot;&gt;patch&lt;&#x2F;a&gt;?&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;rust&quot; class=&quot;language-rust z-code&quot;&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-storage z-type z-rust&quot;&gt;let&lt;&#x2F;span&gt; patch &lt;span class=&quot;z-keyword z-operator z-assignment z-rust&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-macro z-rust&quot;&gt;json!&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-rust&quot;&gt;{&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-string z-quoted z-double z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;spec&lt;span class=&quot;z-punctuation z-definition z-string z-end z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-rust&quot;&gt;{&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;info&lt;span class=&quot;z-punctuation z-definition z-string z-end z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;patched baz&lt;span class=&quot;z-punctuation z-definition z-string z-end z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-rust&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-rust&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-rust&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-storage z-type z-rust&quot;&gt;let&lt;&#x2F;span&gt; o &lt;span class=&quot;z-keyword z-operator z-assignment z-rust&quot;&gt;=&lt;&#x2F;span&gt; foos&lt;span class=&quot;z-punctuation z-accessor z-dot z-rust&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-function z-rust&quot;&gt;patch&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;baz&lt;span class=&quot;z-punctuation z-definition z-string z-end z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-bitwise z-rust&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;pp&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-path z-rust&quot;&gt;serde_json&lt;span class=&quot;z-punctuation z-accessor z-rust&quot;&gt;::&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;to_vec&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-bitwise z-rust&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;patch&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-rust&quot;&gt;?&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-rust&quot;&gt;?&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-rust&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-support z-macro z-rust&quot;&gt;assert_eq!&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;o&lt;span class=&quot;z-punctuation z-accessor z-dot z-rust&quot;&gt;.&lt;&#x2F;span&gt;spec&lt;span class=&quot;z-punctuation z-accessor z-dot z-rust&quot;&gt;.&lt;&#x2F;span&gt;info&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;patched baz&lt;span class=&quot;z-punctuation z-definition z-string z-end z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-rust&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Here &lt;code&gt;json!&lt;&#x2F;code&gt; really shines. The macro is actually also so context-aware, that you can reference variables, and even &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;kube-rs&#x2F;blob&#x2F;0b0ed4d2f035cf9e455f1ad8ae346cf87fc20cac&#x2F;examples&#x2F;crd_openapi.rs#L140-L146&quot;&gt;attach structs to keys&lt;&#x2F;a&gt; within.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;higher-level-abstractions&quot;&gt;Higher level abstractions&lt;&#x2F;h2&gt;
&lt;p&gt;With the core api abstractions in place, an easy abstraction is &lt;code&gt;Reflector&amp;lt;K&amp;gt;&lt;&#x2F;code&gt;: an automatic resource cache for a &lt;code&gt;K&lt;&#x2F;code&gt; which - through sustained &lt;code&gt;watch&lt;&#x2F;code&gt; calls - ensures its cache reflect the &lt;code&gt;etcd&lt;&#x2F;code&gt; state. We have &lt;a href=&quot;&#x2F;post&#x2F;2019-04-29-rust-on-kubernetes&quot;&gt;talked about Reflectors earlier&lt;&#x2F;a&gt;; so let&#x27;s cover Informers.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;EDIT&lt;&#x2F;strong&gt;: Informers and Reflectors were deprecated as of 2020 in  favour of the &lt;code&gt;kube-runtime&lt;&#x2F;code&gt; crate.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;informers&quot;&gt;Informers&lt;&#x2F;h3&gt;
&lt;p&gt;An informer for a resource is an event notifier for that resource. It calls &lt;code&gt;watch&lt;&#x2F;code&gt; when you ask it to, and it informs you of new events. In go, you &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;engineering.bitnami.com&#x2F;articles&#x2F;a-deep-dive-into-kubernetes-controllers.html&quot;&gt;attach event handler functions&lt;&#x2F;a&gt; to it. In rust, we just pattern match our &lt;code&gt;WatchEvent&lt;&#x2F;code&gt; enum directly for a similar effect:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;rust&quot; class=&quot;language-rust z-code&quot;&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-storage z-type z-function z-rust&quot;&gt;fn&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-function z-rust&quot;&gt;handle_nodes&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-parameter z-rust&quot;&gt;ev&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-generic z-rust&quot;&gt;WatchEvent&lt;span class=&quot;z-punctuation z-definition z-generic z-begin z-rust&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;Node&lt;span class=&quot;z-punctuation z-definition z-generic z-end z-rust&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt; &lt;span class=&quot;z-meta z-function z-return-type z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-generic z-rust&quot;&gt;&lt;span class=&quot;z-support z-type z-rust&quot;&gt;Result&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-begin z-rust&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;, &lt;span class=&quot;z-meta z-path z-rust&quot;&gt;failure&lt;span class=&quot;z-punctuation z-accessor z-rust&quot;&gt;::&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;Error&lt;span class=&quot;z-punctuation z-definition z-generic z-end z-rust&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-rust&quot;&gt;{&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-keyword z-control z-rust&quot;&gt;match&lt;&#x2F;span&gt; ev &lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-rust&quot;&gt;{&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;        &lt;span class=&quot;z-meta z-path z-rust&quot;&gt;WatchEvent&lt;span class=&quot;z-punctuation z-accessor z-rust&quot;&gt;::&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;Added&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;o&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-rust&quot;&gt;=&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-rust&quot;&gt;{&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-rust&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;,&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;        &lt;span class=&quot;z-meta z-path z-rust&quot;&gt;WatchEvent&lt;span class=&quot;z-punctuation z-accessor z-rust&quot;&gt;::&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;Modified&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;o&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-rust&quot;&gt;=&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-rust&quot;&gt;{&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-rust&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;,&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;        &lt;span class=&quot;z-meta z-path z-rust&quot;&gt;WatchEvent&lt;span class=&quot;z-punctuation z-accessor z-rust&quot;&gt;::&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;Deleted&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;o&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-rust&quot;&gt;=&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-rust&quot;&gt;{&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-rust&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;,&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;        &lt;span class=&quot;z-meta z-path z-rust&quot;&gt;WatchEvent&lt;span class=&quot;z-punctuation z-accessor z-rust&quot;&gt;::&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;Error&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;e&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-rust&quot;&gt;=&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-rust&quot;&gt;{&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-rust&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-rust&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-support z-type z-rust&quot;&gt;Ok&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-rust&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The &lt;code&gt;o&lt;&#x2F;code&gt; being destructured here is an &lt;code&gt;Object&amp;lt;NodeSpec, NodeStatus&amp;gt;&lt;&#x2F;code&gt;. See &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;kube-rs&#x2F;blob&#x2F;master&#x2F;examples&#x2F;&quot;&gt;informer examples&lt;&#x2F;a&gt; for doing something with the objects.&lt;&#x2F;p&gt;
&lt;p&gt;To actually initialize and drive a node informer, you can do something like this:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;rust&quot; class=&quot;language-rust z-code&quot;&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-storage z-type z-function z-rust&quot;&gt;fn&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-function z-rust&quot;&gt;main&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt; &lt;span class=&quot;z-meta z-function z-return-type z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-generic z-rust&quot;&gt;&lt;span class=&quot;z-support z-type z-rust&quot;&gt;Result&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-begin z-rust&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;, &lt;span class=&quot;z-meta z-path z-rust&quot;&gt;failure&lt;span class=&quot;z-punctuation z-accessor z-rust&quot;&gt;::&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;Error&lt;span class=&quot;z-punctuation z-definition z-generic z-end z-rust&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-rust&quot;&gt;{&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-storage z-type z-rust&quot;&gt;let&lt;&#x2F;span&gt; config &lt;span class=&quot;z-keyword z-operator z-assignment z-rust&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-path z-rust&quot;&gt;config&lt;span class=&quot;z-punctuation z-accessor z-rust&quot;&gt;::&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;load_kube_config&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-rust&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-function z-rust&quot;&gt;expect&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;failed to load kubeconfig&lt;span class=&quot;z-punctuation z-definition z-string z-end z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-rust&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-storage z-type z-rust&quot;&gt;let&lt;&#x2F;span&gt; client &lt;span class=&quot;z-keyword z-operator z-assignment z-rust&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-path z-rust&quot;&gt;APIClient&lt;span class=&quot;z-punctuation z-accessor z-rust&quot;&gt;::&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;new&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;config&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-rust&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-storage z-type z-rust&quot;&gt;let&lt;&#x2F;span&gt; nodes &lt;span class=&quot;z-keyword z-operator z-assignment z-rust&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-path z-rust&quot;&gt;Api&lt;span class=&quot;z-punctuation z-accessor z-rust&quot;&gt;::&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;v1Node&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;client&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-rust&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-storage z-type z-rust&quot;&gt;let&lt;&#x2F;span&gt; ni &lt;span class=&quot;z-keyword z-operator z-assignment z-rust&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-path z-rust&quot;&gt;Informer&lt;span class=&quot;z-punctuation z-accessor z-rust&quot;&gt;::&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;new&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;nodes&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;        &lt;span class=&quot;z-punctuation z-accessor z-dot z-rust&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-function z-rust&quot;&gt;labels&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;role=worker&lt;span class=&quot;z-punctuation z-definition z-string z-end z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;        &lt;span class=&quot;z-punctuation z-accessor z-dot z-rust&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-function z-rust&quot;&gt;init&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-rust&quot;&gt;?&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-rust&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-keyword z-control z-rust&quot;&gt;loop&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-rust&quot;&gt;{&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;        ni&lt;span class=&quot;z-punctuation z-accessor z-dot z-rust&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-function z-rust&quot;&gt;poll&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-rust&quot;&gt;?&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-rust&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;        &lt;span class=&quot;z-keyword z-control z-rust&quot;&gt;while&lt;&#x2F;span&gt; &lt;span class=&quot;z-storage z-type z-rust&quot;&gt;let&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-type z-rust&quot;&gt;Some&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;event&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-rust&quot;&gt;=&lt;&#x2F;span&gt; ni&lt;span class=&quot;z-punctuation z-accessor z-dot z-rust&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-function z-rust&quot;&gt;pop&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-rust&quot;&gt;{&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;            &lt;span class=&quot;z-support z-function z-rust&quot;&gt;handle_nodes&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;event&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-rust&quot;&gt;?&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-rust&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;        &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-rust&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-rust&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-rust&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The harder parts typically come if you need a separate threads; like one to handle polling, one for handling events async, perhaps you are interacting with a set of threads in an tokio&#x2F;actix runtime.&lt;&#x2F;p&gt;
&lt;p&gt;You &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;cloud.google.com&#x2F;blog&#x2F;products&#x2F;containers-kubernetes&#x2F;best-practices-for-building-kubernetes-operators-and-stateful-apps&quot;&gt;should handle these cases&lt;&#x2F;a&gt;, but it&#x27;s thankfully, not hard. You can just give out a &lt;code&gt;clone&lt;&#x2F;code&gt; of your &lt;code&gt;Informer&lt;&#x2F;code&gt; to the runtime. The &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;controller-rs&quot;&gt;controller-rs&lt;&#x2F;a&gt; example shows how trivial it is &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;controller-rs&#x2F;blob&#x2F;master&#x2F;src&#x2F;state.rs&quot;&gt;to encapsulate an informer&lt;&#x2F;a&gt; and drive it &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;controller-rs&#x2F;blob&#x2F;5db6caca13f4a33d168c1abe7c94a02559d4f46e&#x2F;src&#x2F;main.rs#L20-L51&quot;&gt;along actix&lt;&#x2F;a&gt; (using the 1.0.0 rc). The result is a complete example controller in a &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;controller-rs&#x2F;blob&#x2F;master&#x2F;Dockerfile&quot;&gt;tiny alpine image&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;informer-internals&quot;&gt;Informer Internals&lt;&#x2F;h3&gt;
&lt;p&gt;Informers are just wrappers around a &lt;code&gt;watch&lt;&#x2F;code&gt; call that keeps track of &lt;code&gt;resouceVersion&lt;&#x2F;code&gt;. There&#x27;s very little inside of it:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;rust&quot; class=&quot;language-rust z-code&quot;&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-storage z-type z-type z-rust&quot;&gt;type&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-type z-rust&quot;&gt;WatchQueue&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-comparison z-rust&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;K&lt;span class=&quot;z-keyword z-operator z-comparison z-rust&quot;&gt;&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-rust&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-generic z-rust&quot;&gt;VecDeque&lt;span class=&quot;z-punctuation z-definition z-generic z-begin z-rust&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-generic z-rust&quot;&gt;WatchEvent&lt;span class=&quot;z-punctuation z-definition z-generic z-begin z-rust&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;K&lt;span class=&quot;z-punctuation z-definition z-generic z-end z-rust&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-end z-rust&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-rust&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-annotation z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-annotation z-rust&quot;&gt;#&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-annotation z-rust&quot;&gt;derive&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-annotation z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-annotation z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;Clone&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-annotation z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;span class=&quot;z-storage z-modifier z-rust&quot;&gt;pub&lt;&#x2F;span&gt; &lt;span class=&quot;z-storage z-type z-struct z-rust&quot;&gt;struct&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;span class=&quot;z-meta z-generic z-rust&quot;&gt;&lt;span class=&quot;z-entity z-name z-struct z-rust&quot;&gt;Informer&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-generic z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-begin z-rust&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;K&lt;span class=&quot;z-punctuation z-definition z-generic z-end z-rust&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt; where
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;    K: Clone + DeserializeOwned + KubeObject
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-rust&quot;&gt;{&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-variable z-other z-member z-rust&quot;&gt;events&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-type z-rust&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-generic z-rust&quot;&gt;Arc&lt;span class=&quot;z-punctuation z-definition z-generic z-begin z-rust&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-generic z-rust&quot;&gt;RwLock&lt;span class=&quot;z-punctuation z-definition z-generic z-begin z-rust&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-generic z-rust&quot;&gt;WatchQueue&lt;span class=&quot;z-punctuation z-definition z-generic z-begin z-rust&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;K&lt;span class=&quot;z-punctuation z-definition z-generic z-end z-rust&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-end z-rust&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-end z-rust&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;,
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-variable z-other z-member z-rust&quot;&gt;version&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-type z-rust&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-generic z-rust&quot;&gt;Arc&lt;span class=&quot;z-punctuation z-definition z-generic z-begin z-rust&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-generic z-rust&quot;&gt;RwLock&lt;span class=&quot;z-punctuation z-definition z-generic z-begin z-rust&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-type z-rust&quot;&gt;String&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-end z-rust&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-end z-rust&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;,
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-variable z-other z-member z-rust&quot;&gt;client&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-type z-rust&quot;&gt;:&lt;&#x2F;span&gt; APIClient,
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-variable z-other z-member z-rust&quot;&gt;resource&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-type z-rust&quot;&gt;:&lt;&#x2F;span&gt; RawApi,
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-variable z-other z-member z-rust&quot;&gt;params&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-type z-rust&quot;&gt;:&lt;&#x2F;span&gt; ListParams,
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-rust&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;If it wasn&#x27;t for the extra internal event queue (that users are meant to consume), we could easily have built &lt;code&gt;Reflector&lt;&#x2F;code&gt; on top of &lt;code&gt;Informer&lt;&#x2F;code&gt;. The only main difference is that a &lt;code&gt;Reflector&lt;&#x2F;code&gt; uses the events to maintain an up-to-date &lt;code&gt;BTreeMap&lt;&#x2F;code&gt; rather than handing the events out.&lt;&#x2F;p&gt;
&lt;p&gt;As with &lt;code&gt;Reflector&lt;&#x2F;code&gt;, we rely on this foundational enum (now public) to encapsulate events:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;rust&quot; class=&quot;language-rust z-code&quot;&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-annotation z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-annotation z-rust&quot;&gt;#&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-annotation z-rust&quot;&gt;derive&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-annotation z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-annotation z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;Deserialize&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;,&lt;&#x2F;span&gt; Serialize&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;,&lt;&#x2F;span&gt; Clone&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-annotation z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-annotation z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-annotation z-rust&quot;&gt;#&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-annotation z-rust&quot;&gt;serde&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-annotation z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-annotation z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;tag &lt;span class=&quot;z-keyword z-operator z-rust&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;type&lt;span class=&quot;z-punctuation z-definition z-string z-end z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;,&lt;&#x2F;span&gt; content &lt;span class=&quot;z-keyword z-operator z-rust&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;object&lt;span class=&quot;z-punctuation z-definition z-string z-end z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;,&lt;&#x2F;span&gt; rename_all &lt;span class=&quot;z-keyword z-operator z-rust&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;UPPERCASE&lt;span class=&quot;z-punctuation z-definition z-string z-end z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-annotation z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-enum z-rust&quot;&gt;&lt;span class=&quot;z-storage z-modifier z-rust&quot;&gt;pub&lt;&#x2F;span&gt; &lt;span class=&quot;z-storage z-type z-enum z-rust&quot;&gt;enum&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-enum z-rust&quot;&gt;WatchEvent&lt;&#x2F;span&gt;&amp;lt;K&amp;gt; where
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-enum z-rust&quot;&gt;    K: Clone + KubeObject
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-enum z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-rust&quot;&gt;{&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-enum z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    Added&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;K&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;,&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-enum z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    Modified&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;K&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;,&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-enum z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    Deleted&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;K&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;,&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-enum z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    Error&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;ApiError&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;,&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-enum z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-rust&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;You can compare with &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kubernetes&#x2F;apimachinery&#x2F;blob&#x2F;594fc14b6f143d963ea2c8132e09e73fe244b6c9&#x2F;pkg&#x2F;apis&#x2F;meta&#x2F;v1&#x2F;watch.go&quot;&gt;client-go&#x27;s WatchEvent&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;drawbacks&quot;&gt;Drawbacks&lt;&#x2F;h2&gt;
&lt;p&gt;So. What&#x27;s awful?&lt;&#x2F;p&gt;
&lt;h3 id=&quot;everything-is-camelcase&quot;&gt;Everything is camelCase!&lt;&#x2F;h3&gt;
&lt;p&gt;Yeah.. &lt;code&gt;#![allow(non_snake_case)]&lt;&#x2F;code&gt;. It&#x27;s arguably more helpful to be able to easily cross reference values with the &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;kubernetes.io&#x2F;docs&#x2F;reference&#x2F;generated&#x2F;kubernetes-api&#x2F;v1.14&quot;&gt;main API docs using Go conventions&lt;&#x2F;a&gt;, than to map them to rust&#x27;s snake_case preference.&lt;&#x2F;p&gt;
&lt;p&gt;That said, we currently rely on &lt;code&gt;k8s-openapi&lt;&#x2F;code&gt; (and that crate maps cases..). Do people have strong feelings about this?&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;EDIT&lt;&#x2F;strong&gt;: This stopped being true in 2020.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;delete-returns-an-either&quot;&gt;Delete returns an Either&lt;&#x2F;h3&gt;
&lt;p&gt;The &lt;code&gt;delete&lt;&#x2F;code&gt; verb akwardly gives you a &lt;code&gt;Status&lt;&#x2F;code&gt; object (sometimes..), so we have to maintain logic to conditionally parse those &lt;code&gt;kind&lt;&#x2F;code&gt; values (where we expect them) into an &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;either&#x2F;1.5.2&#x2F;either&#x2F;enum.Either.html&quot;&gt;Either enum&lt;&#x2F;a&gt;. This means users have to &lt;code&gt;map_left&lt;&#x2F;code&gt; to deal with the &quot;it&#x27;s not done yet&quot; case, or &lt;code&gt;map_right&lt;&#x2F;code&gt; for the &quot;it&#x27;s done&quot; case (&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;kube-rs&#x2F;blob&#x2F;3d1562d5f3e1d06dc599b05cbf6dc44176d710e0&#x2F;examples&#x2F;crd_openapi.rs#L40-L52&quot;&gt;crd example&lt;&#x2F;a&gt;). Maybe there&#x27;s a better way to do this. Maybe we need a more semantically correct enum.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;some-resources-are-true-snowflakes&quot;&gt;Some resources are true snowflakes&lt;&#x2F;h3&gt;
&lt;p&gt;While we do handle the &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;kubernetes.io&#x2F;docs&#x2F;tasks&#x2F;access-kubernetes-api&#x2F;custom-resources&#x2F;custom-resource-definitions&#x2F;#subresources&quot;&gt;generic subresources&lt;&#x2F;a&gt; like &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;kube-rs&#x2F;blob&#x2F;c14ef965af7d68d37e6acb343d02ef5841c5bf37&#x2F;src&#x2F;api&#x2F;typed.rs#L126-L142&quot;&gt;Scale&lt;&#x2F;a&gt;, some objects has a bunch of special subresources associated with them.&lt;&#x2F;p&gt;
&lt;p&gt;The most common example is &lt;code&gt;v1Pod&lt;&#x2F;code&gt;, which has &lt;code&gt;pods&#x2F;attach&lt;&#x2F;code&gt;, &lt;code&gt;pods&#x2F;portforward&lt;&#x2F;code&gt;, &lt;code&gt;pods&#x2F;eviction&lt;&#x2F;code&gt;, &lt;code&gt;pods&#x2F;exec&lt;&#x2F;code&gt;, &lt;code&gt;pods&#x2F;log&lt;&#x2F;code&gt;, to name a few. Similarly, we can &lt;code&gt;drain&lt;&#x2F;code&gt; or &lt;code&gt;cordon&lt;&#x2F;code&gt; a &lt;code&gt;v1Node&lt;&#x2F;code&gt;. So we clearly have non-standard verbs and non-standard nouns.&lt;&#x2F;p&gt;
&lt;p&gt;This is probably solveable with some blunt &lt;code&gt;generic_verb_noun&lt;&#x2F;code&gt; hammer on &lt;code&gt;RawApi&lt;&#x2F;code&gt; (&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;kube-rs&#x2F;issues&#x2F;30&quot;&gt;see #30&lt;&#x2F;a&gt;) for our supported apis.&lt;&#x2F;p&gt;
&lt;p&gt;It clearly breaks the generic model somewhat, but thankfully only in the areas you&#x27;d expect it to break.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;EDIT&lt;&#x2F;strong&gt;: This stopped being a problem in 2020.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;not-everything-follows-the-spec-status-model&quot;&gt;Not everything follows the Spec + Status model&lt;&#x2F;h3&gt;
&lt;p&gt;You might think these exceptions make up a short and insignificant list of legacy objects, but look at this subset:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;kubernetes.io&#x2F;docs&#x2F;reference&#x2F;generated&#x2F;kubernetes-api&#x2F;v1.14&#x2F;#rolebinding-v1-rbac-authorization-k8s-io&quot;&gt;RoleBinding&lt;&#x2F;a&gt; with &lt;code&gt;subjects&lt;&#x2F;code&gt; + &lt;code&gt;roleRef&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;kubernetes.io&#x2F;docs&#x2F;reference&#x2F;generated&#x2F;kubernetes-api&#x2F;v1.14&#x2F;#role-v1-rbac-authorization-k8s-io&quot;&gt;Role&lt;&#x2F;a&gt; with a &lt;code&gt;rules&lt;&#x2F;code&gt; vec&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;kubernetes.io&#x2F;docs&#x2F;reference&#x2F;generated&#x2F;kubernetes-api&#x2F;v1.14&#x2F;#configmap-v1-core&quot;&gt;ConfigMap&lt;&#x2F;a&gt; - with &lt;code&gt;data&lt;&#x2F;code&gt; + &lt;code&gt;binaryData&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;kubernetes.io&#x2F;docs&#x2F;reference&#x2F;generated&#x2F;kubernetes-api&#x2F;v1.14&#x2F;#endpoints-v1-core&quot;&gt;Endpoints&lt;&#x2F;a&gt; - with a &lt;code&gt;subsets&lt;&#x2F;code&gt; vector&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;kubernetes.io&#x2F;docs&#x2F;reference&#x2F;generated&#x2F;kubernetes-api&#x2F;v1.14&#x2F;#event-v1-core&quot;&gt;Event&lt;&#x2F;a&gt; - with 17 random fields!&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;kubernetes.io&#x2F;docs&#x2F;reference&#x2F;generated&#x2F;kubernetes-api&#x2F;v1.14&#x2F;#serviceaccount-v1-core&quot;&gt;ServiceAccount&lt;&#x2F;a&gt; - &lt;code&gt;secrets&lt;&#x2F;code&gt; vector + misc fields&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;And that was only like 20 minutes in the API docs. Long story short, &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;kube-rs&#x2F;issues&#x2F;35&quot;&gt;we eventually&lt;&#x2F;a&gt; stopped relying on &lt;code&gt;Object&amp;lt;P, U&amp;gt;&lt;&#x2F;code&gt; everywhere in favour of &lt;code&gt;KubeObject&lt;&#x2F;code&gt;. This meant we could deal with these special objects in &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;kube-rs&#x2F;blob&#x2F;0b0ed4d2f035cf9e455f1ad8ae346cf87fc20cac&#x2F;src&#x2F;api&#x2F;snowflake.rs#L15-L62&quot;&gt;mod snowflake&lt;&#x2F;a&gt;, without feeling too dirty about it..&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;EDIT&lt;&#x2F;strong&gt;: This stopped being a problem in 2020.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;remaining-toil&quot;&gt;Remaining toil&lt;&#x2F;h3&gt;
&lt;p&gt;While many of the remaining tasks are not too difficult, there are quite a few of them:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;kube-rs&#x2F;issues&#x2F;25&quot;&gt;integrating all the remaining native objects&lt;&#x2F;a&gt; (can be done one-by-one)&lt;&#x2F;li&gt;
&lt;li&gt;support more than &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;kube-rs&#x2F;issues&#x2F;24&quot;&gt;&lt;code&gt;patch --type=merge&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;backoff&#x2F;0.1.5&#x2F;backoff&#x2F;&quot;&gt;backoff crate&lt;&#x2F;a&gt; use for &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;kube-rs&#x2F;issues&#x2F;34&quot;&gt;exponential backoff&lt;&#x2F;a&gt; =&amp;gt; less cascady network failures&lt;&#x2F;li&gt;
&lt;li&gt;support &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;kube-rs&#x2F;issues&#x2F;19&quot;&gt;local kubeconfig auth providers&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;The last one is a huge faff, with differences across providers, all in the name of avoiding &lt;a href=&quot;&#x2F;post&#x2F;2019-03-31-impersonating-kube-accounts&quot;&gt;impersonating a service accounts when developing locally&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;help&quot;&gt;Help&lt;&#x2F;h2&gt;
&lt;p&gt;The foundation is now there, in the sense that we feel like we&#x27;re covering most of the theoretical bases (..that we could think of).&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;kube-rs&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22&quot;&gt;Help with examples&#x2F;object support&#x2F;stuff listed above&lt;&#x2F;a&gt; would be greatly appreciated at this point. Hopefully, this library will end up being useful to some. With some familiarity with rust, the generated &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;clux.github.io&#x2F;kube-rs&#x2F;kube&#x2F;api&#x2F;index.html&quot;&gt;docs&lt;&#x2F;a&gt; + &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;kube-rs&#x2F;tree&#x2F;master&#x2F;examples&quot;&gt;examples&lt;&#x2F;a&gt; should get you started.&lt;&#x2F;p&gt;
&lt;p&gt;Anyway, if you do end up using this, and you work in the open, &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;kube-rs&#x2F;issues&#x2F;12&quot;&gt;please let us link to your controllers for examples&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&amp;lt;&#x2F;🐂💈&amp;gt;&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Kubernetes operators in rust</title>
        <published>2019-04-29T00:00:00+00:00</published>
        <updated>2019-04-29T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://clux.dev/post/2019-04-29-rust-on-kubernetes/"/>
        <id>https://clux.dev/post/2019-04-29-rust-on-kubernetes/</id>
        
        <content type="html" xml:base="https://clux.dev/post/2019-04-29-rust-on-kubernetes/">&lt;p&gt;When interacting with kubernetes it&#x27;s generally been standard practice to use either &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kubernetes&#x2F;client-go&quot;&gt;client-go&lt;&#x2F;a&gt; via go, or &lt;code&gt;kubectl&lt;&#x2F;code&gt; via shell.&lt;&#x2F;p&gt;
&lt;p&gt;While these are good, non-controversial choices, the advancement of client libraries, and smarter openapi bindings, combined with the generics and procedural macros of &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.rust-lang.org&#x2F;&quot;&gt;rust-lang&lt;&#x2F;a&gt;, it&#x27;s now quite possible to write fully fledged kube operators, using slim rust kube clients.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;update-from-2021&quot;&gt;Update from 2021&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;strong&gt;This post is old and many details herein are severely outdated&lt;&#x2F;strong&gt;. Please see a more recent &lt;a href=&quot;&#x2F;tags&#x2F;kubernetes&#x2F;&quot;&gt;#kubernetes&lt;&#x2F;a&gt; post.
The rest of the post is left unedited for historical reasons.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;couldn-t-we-have-done-this-for-ages&quot;&gt;..couldn&#x27;t we have done this for ages?&lt;&#x2F;h2&gt;
&lt;p&gt;Yes, but you&#x27;d have to set up all the watch machinery yourself and decide on a strategy for tracking the state.&lt;&#x2F;p&gt;
&lt;p&gt;The most painstaking part of this is dealing with watch events and its &lt;code&gt;resourceVersion&lt;&#x2F;code&gt; properties directly (metadata returned by kube so you can keep calling &lt;code&gt;watch&lt;&#x2F;code&gt; without getting duplicate events). The events themselves are also returned as newline delimited json, each a wrapped struct of either what you want, or a wrapped error type.&lt;&#x2F;p&gt;
&lt;p&gt;In &lt;code&gt;client-go&lt;&#x2F;code&gt;, a lot of this logic is wrapped up in something they call a &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kubernetes&#x2F;client-go&#x2F;blob&#x2F;master&#x2F;tools&#x2F;cache&#x2F;reflector.go&quot;&gt;reflector&lt;&#x2F;a&gt;; a local cache responsible for updating itself and making sure its internal state reflects the state of &lt;code&gt;etcd&lt;&#x2F;code&gt; for the resource it&#x27;s watching.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;the-land-of-kube-clients&quot;&gt;The land of kube clients&lt;&#x2F;h2&gt;
&lt;p&gt;First off, there are several good crates availble for kubernetes usage already. We have &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Arnavion&#x2F;k8s-openapi&quot;&gt;k8s-openapi&lt;&#x2F;a&gt;; the &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Arnavion&#x2F;k8s-openapi&#x2F;releases&quot;&gt;increasingly clever&lt;&#x2F;a&gt; set of rust bindings from the openapi spec. There&#x27;s &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ynqa&#x2F;kubernetes-rust&quot;&gt;kubernetes&lt;&#x2F;a&gt;; a is a very sensible convenience wrapper around &lt;code&gt;reqwest&lt;&#x2F;code&gt; + &lt;code&gt;k8s-openapi&lt;&#x2F;code&gt;, but it lacks quite a bit of error handling.&lt;&#x2F;p&gt;
&lt;p&gt;In a perfect world, we should all use &lt;code&gt;k8s-openapi&lt;&#x2F;code&gt; because it operates on the &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;sans-io.readthedocs.io&#x2F;&quot;&gt;sans-io principle&lt;&#x2F;a&gt; where you can just plug in any client. However, it&#x27;s &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Arnavion&#x2F;k8s-openapi&#x2F;blob&#x2F;22d6a71d39104ec6147b7df94e4a0810ef898fbe&#x2F;k8s-openapi-tests&#x2F;src&#x2F;lib.rs#L251-L306&quot;&gt;awkward when dealing with multiple values&lt;&#x2F;a&gt;, and it &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Arnavion&#x2F;k8s-openapi&#x2F;issues&#x2F;39&quot;&gt;doesn&#x27;t really support CRDs well yet&lt;&#x2F;a&gt; and this is the main thing we wanted to use a kube client for.&lt;&#x2F;p&gt;
&lt;p&gt;So to tackle the CRD use case, we started out with an older version of the &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ynqa&#x2F;kubernetes-rust&quot;&gt;kubernetes crate&lt;&#x2F;a&gt;, before &lt;code&gt;k8s-openapi&lt;&#x2F;code&gt; was added as a dependency, and added error handling.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;stealing-reflectors&quot;&gt;Stealing Reflectors&lt;&#x2F;h3&gt;
&lt;p&gt;So we&#x27;ve got an unnecessary fork of a kube client. Let&#x27;s do something interesting with it. A &lt;code&gt;Reflector&amp;lt;T&amp;gt;&lt;&#x2F;code&gt; is a &lt;code&gt;Sync&lt;&#x2F;code&gt; + &lt;code&gt;Send&lt;&#x2F;code&gt; cache of some &lt;code&gt;T&lt;&#x2F;code&gt; with everything it needs to keep itself up to date:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;rust&quot; class=&quot;language-rust z-code&quot;&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-annotation z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-annotation z-rust&quot;&gt;#&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-annotation z-rust&quot;&gt;derive&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-annotation z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-annotation z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;Clone&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-annotation z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;span class=&quot;z-storage z-modifier z-rust&quot;&gt;pub&lt;&#x2F;span&gt; &lt;span class=&quot;z-storage z-type z-struct z-rust&quot;&gt;struct&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;span class=&quot;z-meta z-generic z-rust&quot;&gt;&lt;span class=&quot;z-entity z-name z-struct z-rust&quot;&gt;Reflector&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-generic z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-begin z-rust&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;T&lt;span class=&quot;z-punctuation z-definition z-generic z-end z-rust&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt; where
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;  T: Debug + Clone + Named + DeserializeOwned
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-rust&quot;&gt;{&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-variable z-other z-member z-rust&quot;&gt;data&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-type z-rust&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-generic z-rust&quot;&gt;Arc&lt;span class=&quot;z-punctuation z-definition z-generic z-begin z-rust&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-generic z-rust&quot;&gt;RwLock&lt;span class=&quot;z-punctuation z-definition z-generic z-begin z-rust&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-generic z-rust&quot;&gt;Cache&lt;span class=&quot;z-punctuation z-definition z-generic z-begin z-rust&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;T&lt;span class=&quot;z-punctuation z-definition z-generic z-end z-rust&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-end z-rust&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-end z-rust&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;,
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-variable z-other z-member z-rust&quot;&gt;client&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-type z-rust&quot;&gt;:&lt;&#x2F;span&gt; APIClient,
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-variable z-other z-member z-rust&quot;&gt;resource&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-type z-rust&quot;&gt;:&lt;&#x2F;span&gt; ApiResource,
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-rust&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Here, &lt;code&gt;T&lt;&#x2F;code&gt; is meant to be the deserializable struct you own that represents the &lt;code&gt;.spec&lt;&#x2F;code&gt; portion of a CRD. This is wrapped up in several containers, first &lt;code&gt;Arc&lt;&#x2F;code&gt; + &lt;code&gt;RwLock&lt;&#x2F;code&gt; for thread safety (this data needs to be readable across workers in &lt;code&gt;actix&lt;&#x2F;code&gt; at the very least). The Reflector implements methods for the &lt;code&gt;write()&lt;&#x2F;code&gt; part of &lt;code&gt;RwLock&lt;&#x2F;code&gt; while consumers can &lt;code&gt;read()&lt;&#x2F;code&gt; continuously.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;Cache&amp;lt;T&amp;gt;&lt;&#x2F;code&gt; is the state + bookkeeping markers. Ultimately, you are able to extract a &lt;code&gt;BTreeMap&amp;lt;String, T&amp;gt;&lt;&#x2F;code&gt; out of it (aliased to &lt;code&gt;ResourceMap&amp;lt;T&amp;gt;&lt;&#x2F;code&gt;). The key is &lt;code&gt;Named&lt;&#x2F;code&gt; how you like (probably using the &lt;code&gt;.name&lt;&#x2F;code&gt; key of the CRD).&lt;&#x2F;p&gt;
&lt;p&gt;By calling the provided &lt;code&gt;.poll()&lt;&#x2F;code&gt; methods as frequently as you&#x27;d like, you&#x27;ll be able to read the up-to-date &lt;code&gt;ResourceMap&lt;&#x2F;code&gt; from &lt;code&gt;.read()&lt;&#x2F;code&gt; and use the &lt;code&gt;Reflector&amp;lt;T&amp;gt;&lt;&#x2F;code&gt; as a cache.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;new-crate-kube&quot;&gt;New crate: &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;kube-rs&quot;&gt;&lt;code&gt;kube&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;Once the &lt;code&gt;Reflector&lt;&#x2F;code&gt; was added and working in our fork, we decided to release it and see how useable it would be directly. The &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;kube-rs&quot;&gt;kube&lt;&#x2F;a&gt; crate is available at version &lt;code&gt;0.2.0&lt;&#x2F;code&gt; at the moment:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;toml&quot; class=&quot;language-toml z-code&quot;&gt;&lt;code class=&quot;language-toml&quot; data-lang=&quot;toml&quot;&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-table z-begin z-toml&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-tag z-table z-toml&quot;&gt;&lt;span class=&quot;z-entity z-name z-table z-toml&quot;&gt;dependencies&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-table z-end z-toml&quot;&gt;]&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;&lt;span class=&quot;z-meta z-tag z-key z-toml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-toml&quot;&gt;kube&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-definition z-key-value z-toml&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-basic z-toml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-toml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;0.2.0&lt;span class=&quot;z-punctuation z-definition z-string z-end z-toml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;It should behave like the &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ynqa&#x2F;kubernetes-rust&quot;&gt;kubernetes crate&lt;&#x2F;a&gt;, but with more error handling, and various generic structs including reflectors.&lt;&#x2F;p&gt;
&lt;p&gt;Whether this fork will stick around depends. We were hoping this would serve as, if not a source of inspiration, then a source of ridicule.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;how-would-you-actually-use-this&quot;&gt;How would you actually use this?&lt;&#x2F;h2&gt;
&lt;p&gt;Easy. You&#x27;ll have a struct that defines your CRD:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;rust&quot; class=&quot;language-rust z-code&quot;&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-annotation z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-annotation z-rust&quot;&gt;#&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-annotation z-rust&quot;&gt;derive&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-annotation z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-annotation z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;Debug&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;,&lt;&#x2F;span&gt; Deserialize&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;,&lt;&#x2F;span&gt; Serialize&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;,&lt;&#x2F;span&gt; Clone&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-annotation z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;span class=&quot;z-storage z-modifier z-rust&quot;&gt;pub&lt;&#x2F;span&gt; &lt;span class=&quot;z-storage z-type z-struct z-rust&quot;&gt;struct&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;span class=&quot;z-entity z-name z-struct z-rust&quot;&gt;FooResource&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-rust&quot;&gt;{&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;  &lt;span class=&quot;z-variable z-other z-member z-rust&quot;&gt;name&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-type z-rust&quot;&gt;:&lt;&#x2F;span&gt; String,
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;  &lt;span class=&quot;z-variable z-other z-member z-rust&quot;&gt;info&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-type z-rust&quot;&gt;:&lt;&#x2F;span&gt; String,
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-rust&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Make it nameable for quick cache access:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;rust&quot; class=&quot;language-rust z-code&quot;&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-impl z-rust&quot;&gt;&lt;span class=&quot;z-storage z-type z-impl z-rust&quot;&gt;impl&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-impl z-rust&quot;&gt;Named &lt;span class=&quot;z-keyword z-other z-rust&quot;&gt;for&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-impl z-rust&quot;&gt; &lt;span class=&quot;z-entity z-name z-impl z-rust&quot;&gt;FooResource&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-impl z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-rust&quot;&gt;{&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-impl z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-comment z-line z-double-slash z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-rust&quot;&gt;&#x2F;&#x2F;&lt;&#x2F;span&gt; we want Foo identified by self.name in the cache
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-impl z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-storage z-type z-function z-rust&quot;&gt;fn&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-function z-rust&quot;&gt;name&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-rust&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-parameter z-rust&quot;&gt;self&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt; &lt;span class=&quot;z-meta z-function z-return-type z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt; String&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-rust&quot;&gt;{&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-impl z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;        &lt;span class=&quot;z-variable z-language z-rust&quot;&gt;self&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-rust&quot;&gt;.&lt;&#x2F;span&gt;name&lt;span class=&quot;z-punctuation z-accessor z-dot z-rust&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-function z-rust&quot;&gt;clone&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-impl z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-rust&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-impl z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-rust&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;create your state container with an instance of &lt;code&gt;Reflector&amp;lt;FooResource&amp;gt;&lt;&#x2F;code&gt;:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;rust&quot; class=&quot;language-rust z-code&quot;&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-annotation z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-annotation z-rust&quot;&gt;#&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-annotation z-rust&quot;&gt;derive&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-annotation z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-annotation z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;Clone&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-annotation z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;span class=&quot;z-storage z-modifier z-rust&quot;&gt;pub&lt;&#x2F;span&gt; &lt;span class=&quot;z-storage z-type z-struct z-rust&quot;&gt;struct&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;span class=&quot;z-entity z-name z-struct z-rust&quot;&gt;State&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-rust&quot;&gt;{&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-variable z-other z-member z-rust&quot;&gt;foos&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-type z-rust&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-generic z-rust&quot;&gt;Reflector&lt;span class=&quot;z-punctuation z-definition z-generic z-begin z-rust&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;FooResource&lt;span class=&quot;z-punctuation z-definition z-generic z-end z-rust&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;,
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-rust&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;This is useable, but it won&#x27;t update without you driving it. Let&#x27;s make a nice constructor with some methods on it, since it&#x27;ll be the interface you&#x27;ll use from your application (and maybe you&#x27;ll need more resources):&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;rust&quot; class=&quot;language-rust z-code&quot;&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-impl z-rust&quot;&gt;&lt;span class=&quot;z-storage z-type z-impl z-rust&quot;&gt;impl&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-impl z-rust&quot;&gt;&lt;span class=&quot;z-entity z-name z-impl z-rust&quot;&gt;State&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-impl z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-rust&quot;&gt;{&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-impl z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-storage z-type z-function z-rust&quot;&gt;fn&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-function z-rust&quot;&gt;new&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-parameter z-rust&quot;&gt;client&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;:&lt;&#x2F;span&gt; APIClient&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt; &lt;span class=&quot;z-meta z-function z-return-type z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-generic z-rust&quot;&gt;&lt;span class=&quot;z-support z-type z-rust&quot;&gt;Result&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-begin z-rust&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-storage z-type z-rust&quot;&gt;Self&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-end z-rust&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-rust&quot;&gt;{&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-impl z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;        &lt;span class=&quot;z-storage z-type z-rust&quot;&gt;let&lt;&#x2F;span&gt; namespace &lt;span class=&quot;z-keyword z-operator z-assignment z-rust&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-path z-rust&quot;&gt;env&lt;span class=&quot;z-punctuation z-accessor z-rust&quot;&gt;::&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;var&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;NAMESPACE&lt;span class=&quot;z-punctuation z-definition z-string z-end z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-rust&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-function z-rust&quot;&gt;unwrap_or&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;kube-system&lt;span class=&quot;z-punctuation z-definition z-string z-end z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-rust&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-function z-rust&quot;&gt;into&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-rust&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-impl z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;        &lt;span class=&quot;z-storage z-type z-rust&quot;&gt;let&lt;&#x2F;span&gt; fooresource &lt;span class=&quot;z-keyword z-operator z-assignment z-rust&quot;&gt;=&lt;&#x2F;span&gt; ApiResource &lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-rust&quot;&gt;{&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-impl z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;            group&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;clux.dev&lt;span class=&quot;z-punctuation z-definition z-string z-end z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-rust&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-function z-rust&quot;&gt;into&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;,&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-impl z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;            resource&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;foos&lt;span class=&quot;z-punctuation z-definition z-string z-end z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-rust&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-function z-rust&quot;&gt;into&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;,&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-impl z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;            namespace&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;:&lt;&#x2F;span&gt; namespace&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;,&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-impl z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;        &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-rust&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-rust&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-impl z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;        &lt;span class=&quot;z-storage z-type z-rust&quot;&gt;let&lt;&#x2F;span&gt; foos &lt;span class=&quot;z-keyword z-operator z-assignment z-rust&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-path z-rust&quot;&gt;Reflector&lt;span class=&quot;z-punctuation z-accessor z-rust&quot;&gt;::&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;new&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;client&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;,&lt;&#x2F;span&gt; fooresource&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-rust&quot;&gt;?&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-rust&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-impl z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;        &lt;span class=&quot;z-support z-type z-rust&quot;&gt;Ok&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;State &lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-rust&quot;&gt;{&lt;&#x2F;span&gt; foos &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-rust&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-impl z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-rust&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-impl z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-comment z-line z-documentation z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-rust&quot;&gt;&#x2F;&#x2F;&#x2F;&lt;&#x2F;span&gt; Internal poll for internal thread
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-impl z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-storage z-type z-function z-rust&quot;&gt;fn&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-function z-rust&quot;&gt;poll&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-rust&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-parameter z-rust&quot;&gt;self&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt; &lt;span class=&quot;z-meta z-function z-return-type z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-generic z-rust&quot;&gt;&lt;span class=&quot;z-support z-type z-rust&quot;&gt;Result&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-begin z-rust&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-end z-rust&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-rust&quot;&gt;{&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-impl z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;        &lt;span class=&quot;z-variable z-language z-rust&quot;&gt;self&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-rust&quot;&gt;.&lt;&#x2F;span&gt;foos&lt;span class=&quot;z-punctuation z-accessor z-dot z-rust&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-function z-rust&quot;&gt;poll&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-impl z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-rust&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-impl z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-comment z-line z-documentation z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-rust&quot;&gt;&#x2F;&#x2F;&#x2F;&lt;&#x2F;span&gt; Exposed refresh button for use by app
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-impl z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-storage z-modifier z-rust&quot;&gt;pub&lt;&#x2F;span&gt; &lt;span class=&quot;z-storage z-type z-function z-rust&quot;&gt;fn&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-function z-rust&quot;&gt;refresh&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-rust&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-parameter z-rust&quot;&gt;self&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt; &lt;span class=&quot;z-meta z-function z-return-type z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-generic z-rust&quot;&gt;&lt;span class=&quot;z-support z-type z-rust&quot;&gt;Result&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-begin z-rust&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-end z-rust&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-rust&quot;&gt;{&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-impl z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;        &lt;span class=&quot;z-variable z-language z-rust&quot;&gt;self&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-rust&quot;&gt;.&lt;&#x2F;span&gt;foos&lt;span class=&quot;z-punctuation z-accessor z-dot z-rust&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-function z-rust&quot;&gt;refresh&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-impl z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-rust&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-impl z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-comment z-line z-documentation z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-rust&quot;&gt;&#x2F;&#x2F;&#x2F;&lt;&#x2F;span&gt; Exposed getter for read access to state for app
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-impl z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-storage z-modifier z-rust&quot;&gt;pub&lt;&#x2F;span&gt; &lt;span class=&quot;z-storage z-type z-function z-rust&quot;&gt;fn&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-function z-rust&quot;&gt;foos&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-rust&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-parameter z-rust&quot;&gt;self&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt; &lt;span class=&quot;z-meta z-function z-return-type z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-generic z-rust&quot;&gt;&lt;span class=&quot;z-support z-type z-rust&quot;&gt;Result&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-begin z-rust&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-generic z-rust&quot;&gt;ResourceMap&lt;span class=&quot;z-punctuation z-definition z-generic z-begin z-rust&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;FooResource&lt;span class=&quot;z-punctuation z-definition z-generic z-end z-rust&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-end z-rust&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-rust&quot;&gt;{&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-impl z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;        &lt;span class=&quot;z-variable z-language z-rust&quot;&gt;self&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-rust&quot;&gt;.&lt;&#x2F;span&gt;foos&lt;span class=&quot;z-punctuation z-accessor z-dot z-rust&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-function z-rust&quot;&gt;read&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-impl z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-rust&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-impl z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-rust&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;with that set up, we can set up a simple system that runs the reflector, by making sure &lt;code&gt;Reflector::poll&lt;&#x2F;code&gt; is called continuously. Here we illustrate it by using a simple thread, that polls every &lt;code&gt;10&lt;&#x2F;code&gt; seconds (the same as kube&#x27;s internal timeout for watch calls):&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;rust&quot; class=&quot;language-rust z-code&quot;&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-storage z-modifier z-rust&quot;&gt;pub&lt;&#x2F;span&gt; &lt;span class=&quot;z-storage z-type z-function z-rust&quot;&gt;fn&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-function z-rust&quot;&gt;init&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-parameter z-rust&quot;&gt;cfg&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;:&lt;&#x2F;span&gt; Configuration&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt; &lt;span class=&quot;z-meta z-function z-return-type z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-generic z-rust&quot;&gt;&lt;span class=&quot;z-support z-type z-rust&quot;&gt;Result&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-begin z-rust&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;State&lt;span class=&quot;z-punctuation z-definition z-generic z-end z-rust&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-rust&quot;&gt;{&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-storage z-type z-rust&quot;&gt;let&lt;&#x2F;span&gt; state &lt;span class=&quot;z-keyword z-operator z-assignment z-rust&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-path z-rust&quot;&gt;State&lt;span class=&quot;z-punctuation z-accessor z-rust&quot;&gt;::&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;new&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-path z-rust&quot;&gt;APIClient&lt;span class=&quot;z-punctuation z-accessor z-rust&quot;&gt;::&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;new&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;cfg&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-rust&quot;&gt;?&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-rust&quot;&gt;;&lt;&#x2F;span&gt; &lt;span class=&quot;z-comment z-line z-double-slash z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-rust&quot;&gt;&#x2F;&#x2F;&lt;&#x2F;span&gt; for app to read
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-storage z-type z-rust&quot;&gt;let&lt;&#x2F;span&gt; state_clone &lt;span class=&quot;z-keyword z-operator z-assignment z-rust&quot;&gt;=&lt;&#x2F;span&gt; state&lt;span class=&quot;z-punctuation z-accessor z-dot z-rust&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-function z-rust&quot;&gt;clone&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-rust&quot;&gt;;&lt;&#x2F;span&gt; &lt;span class=&quot;z-comment z-line z-double-slash z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-rust&quot;&gt;&#x2F;&#x2F;&lt;&#x2F;span&gt; clone for internal thread
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-meta z-path z-rust&quot;&gt;std&lt;span class=&quot;z-punctuation z-accessor z-rust&quot;&gt;::&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-path z-rust&quot;&gt;thread&lt;span class=&quot;z-punctuation z-accessor z-rust&quot;&gt;::&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;spawn&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-storage z-modifier z-rust&quot;&gt;move&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-logical z-rust&quot;&gt;||&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-rust&quot;&gt;{&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;        &lt;span class=&quot;z-keyword z-control z-rust&quot;&gt;loop&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-rust&quot;&gt;{&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;            &lt;span class=&quot;z-meta z-path z-rust&quot;&gt;std&lt;span class=&quot;z-punctuation z-accessor z-rust&quot;&gt;::&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-path z-rust&quot;&gt;thread&lt;span class=&quot;z-punctuation z-accessor z-rust&quot;&gt;::&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;sleep&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-path z-rust&quot;&gt;Duration&lt;span class=&quot;z-punctuation z-accessor z-rust&quot;&gt;::&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;from_secs&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-rust&quot;&gt;10&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-rust&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;            &lt;span class=&quot;z-keyword z-control z-rust&quot;&gt;match&lt;&#x2F;span&gt; state_clone&lt;span class=&quot;z-punctuation z-accessor z-dot z-rust&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-function z-rust&quot;&gt;poll&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-rust&quot;&gt;{&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;                &lt;span class=&quot;z-support z-type z-rust&quot;&gt;Ok&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-rust&quot;&gt;_&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-rust&quot;&gt;=&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-macro z-rust&quot;&gt;trace!&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;State refreshed&lt;span class=&quot;z-punctuation z-definition z-string z-end z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-comment z-line z-double-slash z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-rust&quot;&gt;&#x2F;&#x2F;&lt;&#x2F;span&gt; normal case
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;                &lt;span class=&quot;z-support z-type z-rust&quot;&gt;Err&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;e&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-rust&quot;&gt;=&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-rust&quot;&gt;{&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;                    &lt;span class=&quot;z-comment z-line z-double-slash z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-rust&quot;&gt;&#x2F;&#x2F;&lt;&#x2F;span&gt; Can&amp;#39;t recover: boot as much as kubernetes&amp;#39; backoff allows
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;                    &lt;span class=&quot;z-support z-macro z-rust&quot;&gt;error!&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;Failed to refesh cache &amp;#39;{}&amp;#39; - rebooting&lt;span class=&quot;z-punctuation z-definition z-string z-end z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;,&lt;&#x2F;span&gt; e&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-rust&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;                    &lt;span class=&quot;z-meta z-path z-rust&quot;&gt;std&lt;span class=&quot;z-punctuation z-accessor z-rust&quot;&gt;::&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-path z-rust&quot;&gt;process&lt;span class=&quot;z-punctuation z-accessor z-rust&quot;&gt;::&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;exit&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-rust&quot;&gt;1&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-rust&quot;&gt;;&lt;&#x2F;span&gt; &lt;span class=&quot;z-comment z-line z-double-slash z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-rust&quot;&gt;&#x2F;&#x2F;&lt;&#x2F;span&gt; boot might fix it if network is failing
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;                &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-rust&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;            &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-rust&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;        &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-rust&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-rust&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-rust&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-support z-type z-rust&quot;&gt;Ok&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;state&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-rust&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The &lt;code&gt;.poll()&lt;&#x2F;code&gt; call watch for events since the last internal &lt;code&gt;resourceVersion&lt;&#x2F;code&gt; and modify the &lt;code&gt;Cache&lt;&#x2F;code&gt; according to the &lt;code&gt;WatchEvent&lt;&#x2F;code&gt; returned by kubernetes. If for some reason we&#x27;ve desynced and the &lt;code&gt;resourceVersion&lt;&#x2F;code&gt; is too old (happens occasionally) then the &lt;code&gt;Reflector&lt;&#x2F;code&gt; will attempt to &lt;code&gt;refresh&lt;&#x2F;code&gt; the full state internally.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;exposing-it-from-actix&quot;&gt;Exposing it from actix&lt;&#x2F;h2&gt;
&lt;p&gt;To wrap this up and use it in an &lt;code&gt;actix-web&lt;&#x2F;code&gt; application, create your &lt;code&gt;kube::config&lt;&#x2F;code&gt;, pass it to &lt;code&gt;init&lt;&#x2F;code&gt; to start and initialize your &lt;code&gt;State&lt;&#x2F;code&gt;. The state can be embedded straight onto &lt;code&gt;App::data&lt;&#x2F;code&gt;:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;rust&quot; class=&quot;language-rust z-code&quot;&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-storage z-type z-rust&quot;&gt;let&lt;&#x2F;span&gt; kubecfg &lt;span class=&quot;z-keyword z-operator z-assignment z-rust&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-control z-rust&quot;&gt;match&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-path z-rust&quot;&gt;env&lt;span class=&quot;z-punctuation z-accessor z-rust&quot;&gt;::&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;var&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;HOME&lt;span class=&quot;z-punctuation z-definition z-string z-end z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-rust&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-function z-rust&quot;&gt;expect&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;have HOME dir&lt;span class=&quot;z-punctuation z-definition z-string z-end z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-rust&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-function z-rust&quot;&gt;as_ref&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-rust&quot;&gt;{&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-string z-quoted z-double z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&#x2F;root&lt;span class=&quot;z-punctuation z-definition z-string z-end z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-rust&quot;&gt;=&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-path z-rust&quot;&gt;kube&lt;span class=&quot;z-punctuation z-accessor z-rust&quot;&gt;::&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-path z-rust&quot;&gt;config&lt;span class=&quot;z-punctuation z-accessor z-rust&quot;&gt;::&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;incluster_config&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;,&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-keyword z-operator z-rust&quot;&gt;_&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-rust&quot;&gt;=&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-path z-rust&quot;&gt;kube&lt;span class=&quot;z-punctuation z-accessor z-rust&quot;&gt;::&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-path z-rust&quot;&gt;config&lt;span class=&quot;z-punctuation z-accessor z-rust&quot;&gt;::&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;load_kube_config&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;,&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-rust&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-rust&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-function z-rust&quot;&gt;expect&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;Failed to load kube config&lt;span class=&quot;z-punctuation z-definition z-string z-end z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-rust&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-storage z-type z-rust&quot;&gt;let&lt;&#x2F;span&gt; state &lt;span class=&quot;z-keyword z-operator z-assignment z-rust&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-function z-rust&quot;&gt;init&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;kubecfg&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-rust&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-function z-rust&quot;&gt;expect&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;Failed to initialize reflectors&lt;span class=&quot;z-punctuation z-definition z-string z-end z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-rust&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-path z-rust&quot;&gt;HttpServer&lt;span class=&quot;z-punctuation z-accessor z-rust&quot;&gt;::&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;new&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-storage z-modifier z-rust&quot;&gt;move&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-logical z-rust&quot;&gt;||&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-rust&quot;&gt;{&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-meta z-path z-rust&quot;&gt;App&lt;span class=&quot;z-punctuation z-accessor z-rust&quot;&gt;::&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;new&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;        &lt;span class=&quot;z-punctuation z-accessor z-dot z-rust&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-function z-rust&quot;&gt;data&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;state&lt;span class=&quot;z-punctuation z-accessor z-dot z-rust&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-function z-rust&quot;&gt;clone&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-rust&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;    &lt;span class=&quot;z-punctuation z-accessor z-dot z-rust&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-function z-rust&quot;&gt;bind&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;0.0.0.0:8080&lt;span class=&quot;z-punctuation z-definition z-string z-end z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-rust&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-function z-rust&quot;&gt;expect&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;Can not bind to 0.0.0.0:8080&lt;span class=&quot;z-punctuation z-definition z-string z-end z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;    &lt;span class=&quot;z-punctuation z-accessor z-dot z-rust&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-function z-rust&quot;&gt;start&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-rust&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;and from there, it&#x27;s more or less following &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;actix&#x2F;examples&quot;&gt;actix examples&lt;&#x2F;a&gt; to read shared state in an http handler. The following will do:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;rust&quot; class=&quot;language-rust z-code&quot;&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-storage z-type z-function z-rust&quot;&gt;fn&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-function z-rust&quot;&gt;get_foos&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-parameter z-rust&quot;&gt;state&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-generic z-rust&quot;&gt;Data&lt;span class=&quot;z-punctuation z-definition z-generic z-begin z-rust&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;State&lt;span class=&quot;z-punctuation z-definition z-generic z-end z-rust&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;, &lt;span class=&quot;z-variable z-parameter z-rust&quot;&gt;req&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;:&lt;&#x2F;span&gt; HttpRequest&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt; &lt;span class=&quot;z-meta z-function z-return-type z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt; HttpResponse&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-rust&quot;&gt;{&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-storage z-type z-rust&quot;&gt;let&lt;&#x2F;span&gt; foos &lt;span class=&quot;z-keyword z-operator z-assignment z-rust&quot;&gt;=&lt;&#x2F;span&gt; state&lt;span class=&quot;z-punctuation z-accessor z-dot z-rust&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-function z-rust&quot;&gt;foos&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-rust&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-function z-rust&quot;&gt;unwrap&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-rust&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-meta z-path z-rust&quot;&gt;HttpResponse&lt;span class=&quot;z-punctuation z-accessor z-rust&quot;&gt;::&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;Ok&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-rust&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-function z-rust&quot;&gt;json&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;foos&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-rust&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;full-example&quot;&gt;Full example&lt;&#x2F;h2&gt;
&lt;p&gt;To see how it&#x27;s all put together, you can browse the source for &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;operator-rs&quot;&gt;operator-rs&lt;&#x2F;a&gt;; a full example that you can deploy directly onto kube with its &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;operator-rs&#x2F;blob&#x2F;master&#x2F;Dockerfile&quot;&gt;7MB docker image&lt;&#x2F;a&gt; using only the &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;operator-rs&#x2F;blob&#x2F;master&#x2F;yaml&#x2F;deployment.yaml&quot;&gt;necessary access&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;unresolved-problems&quot;&gt;Unresolved problems&lt;&#x2F;h2&gt;
&lt;p&gt;This is an &lt;strong&gt;early stage happy path&lt;&#x2F;strong&gt;. It works for custom resources very well, but any other resources can benefit from &lt;code&gt;k8s-openapi&lt;&#x2F;code&gt; as a side-dependency at the moment.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;when-can-we-use-this-for-pods-deployments-x&quot;&gt;When can we use this for Pods&#x2F;Deployments&#x2F;X?&lt;&#x2F;h3&gt;
&lt;p&gt;The chosen abstraction in the &lt;code&gt;kube&lt;&#x2F;code&gt; client is one targetting an &lt;code&gt;ApiResource&lt;&#x2F;code&gt;, which maps onto a url of the form &lt;code&gt;&#x2F;apis&#x2F;{group}&#x2F;v1&#x2F;namespaces&#x2F;{namespace}&#x2F;{resource}&lt;&#x2F;code&gt;. A lot of the kube apis use that format (pods has &lt;code&gt;&#x2F;api&#x2F;v1&#x2F;namespaces&#x2F;{namespace}&#x2F;pods&#x2F;&lt;&#x2F;code&gt;), so it might be somewhat be reuseable between all native structs once we get some optionals in this:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;rust&quot; class=&quot;language-rust z-code&quot;&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;span class=&quot;z-storage z-modifier z-rust&quot;&gt;pub&lt;&#x2F;span&gt; &lt;span class=&quot;z-storage z-type z-struct z-rust&quot;&gt;struct&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;span class=&quot;z-entity z-name z-struct z-rust&quot;&gt;ApiResource&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-rust&quot;&gt;{&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-comment z-line z-documentation z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-rust&quot;&gt;&#x2F;&#x2F;&#x2F;&lt;&#x2F;span&gt; API Resource name
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-storage z-modifier z-rust&quot;&gt;pub&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-member z-rust&quot;&gt;resource&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-type z-rust&quot;&gt;:&lt;&#x2F;span&gt; String,
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-comment z-line z-documentation z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-rust&quot;&gt;&#x2F;&#x2F;&#x2F;&lt;&#x2F;span&gt; API Group
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-storage z-modifier z-rust&quot;&gt;pub&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-member z-rust&quot;&gt;group&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-type z-rust&quot;&gt;:&lt;&#x2F;span&gt; String,
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-comment z-line z-documentation z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-rust&quot;&gt;&#x2F;&#x2F;&#x2F;&lt;&#x2F;span&gt; Namespace the resources reside
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-storage z-modifier z-rust&quot;&gt;pub&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-member z-rust&quot;&gt;namespace&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-type z-rust&quot;&gt;:&lt;&#x2F;span&gt; String,
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-rust&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;While this is arguably an optimistic use of kube&#x27;s rest api, it might be the simpler approach than having a bunch of massive function wrappers doing more or less the same thing.&lt;&#x2F;p&gt;
&lt;p&gt;Similarly, our &lt;code&gt;WatchEvent&lt;&#x2F;code&gt; enum might also be reuseable:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;rust&quot; class=&quot;language-rust z-code&quot;&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-annotation z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-annotation z-rust&quot;&gt;#&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-annotation z-rust&quot;&gt;serde&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-annotation z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-annotation z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;tag &lt;span class=&quot;z-keyword z-operator z-rust&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;type&lt;span class=&quot;z-punctuation z-definition z-string z-end z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;,&lt;&#x2F;span&gt; content &lt;span class=&quot;z-keyword z-operator z-rust&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;object&lt;span class=&quot;z-punctuation z-definition z-string z-end z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;,&lt;&#x2F;span&gt; rename_all &lt;span class=&quot;z-keyword z-operator z-rust&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;UPPERCASE&lt;span class=&quot;z-punctuation z-definition z-string z-end z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-annotation z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-enum z-rust&quot;&gt;&lt;span class=&quot;z-storage z-modifier z-rust&quot;&gt;pub&lt;&#x2F;span&gt; &lt;span class=&quot;z-storage z-type z-enum z-rust&quot;&gt;enum&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-enum z-rust&quot;&gt;WatchEvent&lt;&#x2F;span&gt;&amp;lt;T&amp;gt; where
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-enum z-rust&quot;&gt;  T: Debug + Clone
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-enum z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-rust&quot;&gt;{&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-enum z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    Added&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;T&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;,&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-enum z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    Modified&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;T&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;,&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-enum z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    Deleted&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;T&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;,&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-enum z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    Error&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;ApiError&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;,&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-enum z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-rust&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;This type of watch events seem to come out of many watch calls, but it&#x27;s equally unclear if it can be used correctly in a generic setting.&lt;&#x2F;p&gt;
&lt;p&gt;The same can be said about our &lt;code&gt;Metadata&lt;&#x2F;code&gt;, &lt;code&gt;Resource&amp;lt;T&amp;gt;&lt;&#x2F;code&gt;, and &lt;code&gt;ResourceList&amp;lt;T&amp;gt;&lt;&#x2F;code&gt;. These are defined in &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;kube-rs&#x2F;blob&#x2F;be4ec4848a795556158602e9a6b7a996b6eed86e&#x2F;src&#x2F;api&#x2F;resource.rs#L90-L133&quot;&gt;resource.rs&lt;&#x2F;a&gt;, and are currently unexported implementation details of &lt;code&gt;kube&lt;&#x2F;code&gt;. If they are useful, it&#x27;s possible that these will be exposed in future versions of &lt;code&gt;kube&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;There&#x27;s an interesting discussion about similar generic design in &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Arnavion&#x2F;k8s-openapi&#x2F;issues&#x2F;20&quot;&gt;k8s-openapi#20&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The plan is to test it out a bit further on data types beyond CRDs and see how well it generalizes, because it&#x27;d be a nice api to just use the resource names and groups we already know how to use from kube rbac rules.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;a-thread-for-polling-why-not-actors&quot;&gt;A thread for polling? Why not actors?&lt;&#x2F;h3&gt;
&lt;p&gt;Why not indeed. It might be better to expose &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;actix.rs&#x2F;book&#x2F;actix&#x2F;sec-2-actor.html&quot;&gt;actors&lt;&#x2F;a&gt;? We have not tried yet.
It might be a better fit long term, especially if we try to go down this route futher with &lt;code&gt;Informer&amp;lt;T&amp;gt;&lt;&#x2F;code&gt;. It&#x27;s a more complicated lifecycle model for the type of complexity we&#x27;re showcasing here though.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;library-divergence&quot;&gt;Library Divergence?&lt;&#x2F;h3&gt;
&lt;p&gt;What about the fact that there&#x27;s now like 3 kube clients in rust land, all of which have the same config parsing and &lt;code&gt;x509&lt;&#x2F;code&gt; gunk?&lt;&#x2F;p&gt;
&lt;p&gt;Yeah, that&#x27;s not great.&lt;&#x2F;p&gt;
&lt;p&gt;Maybe there&#x27;s a need for an actual crate that deals with &lt;code&gt;Configuration&lt;&#x2F;code&gt; alone so that effort isn&#x27;t duplicated.&lt;&#x2F;p&gt;
&lt;p&gt;It might also be good if we could factor this subjective view of what a reflector should do out of a &lt;code&gt;kube&lt;&#x2F;code&gt; library, but that style of &lt;code&gt;sans-io&lt;&#x2F;code&gt; based setup would require some restructuring.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;but-i-was-too-tired-to-go-on&quot;&gt;But I was too tired to go on&lt;&#x2F;h3&gt;
&lt;p&gt;That&#x27;s the state of things as of 30&#x2F;04&#x2F;19. There&#x27;s likely dragons around the corner, as well as missing features not ported from existing clients. Suggestions and ideas are &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;kube-rs&#x2F;issues&quot;&gt;welcome&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Obligatory shout-out to one of the best libraries of rust: &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;serde.rs&#x2F;&quot;&gt;serde&lt;&#x2F;a&gt; for generating &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;serde.rs&#x2F;attr-bound.html&quot;&gt;generic serialization&#x2F;deserialization code&lt;&#x2F;a&gt; on top of generic structs. There was a bit of a learning curve to implement bounds, but thankfully, the most complicated stuff that ended up being in &lt;code&gt;kube&lt;&#x2F;code&gt; was this one-line annotation:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;rust&quot; class=&quot;language-rust z-code&quot;&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-annotation z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-annotation z-rust&quot;&gt;#&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-annotation z-rust&quot;&gt;derive&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-annotation z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-annotation z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;Deserialize&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-annotation z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;span class=&quot;z-storage z-modifier z-rust&quot;&gt;pub&lt;&#x2F;span&gt; &lt;span class=&quot;z-storage z-type z-struct z-rust&quot;&gt;struct&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;span class=&quot;z-meta z-generic z-rust&quot;&gt;&lt;span class=&quot;z-entity z-name z-struct z-rust&quot;&gt;ResourceList&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-generic z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-begin z-rust&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;T&lt;span class=&quot;z-punctuation z-definition z-generic z-end z-rust&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt; where
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;  T: Debug + Clone
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-rust&quot;&gt;{&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-storage z-modifier z-rust&quot;&gt;pub&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-member z-rust&quot;&gt;apiVersion&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-type z-rust&quot;&gt;:&lt;&#x2F;span&gt; String,
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-storage z-modifier z-rust&quot;&gt;pub&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-member z-rust&quot;&gt;kind&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-type z-rust&quot;&gt;:&lt;&#x2F;span&gt; String,
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-storage z-modifier z-rust&quot;&gt;pub&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-member z-rust&quot;&gt;metadata&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-type z-rust&quot;&gt;:&lt;&#x2F;span&gt; Metadata,
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-meta z-annotation z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-annotation z-rust&quot;&gt;#&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-annotation z-rust&quot;&gt;serde&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-annotation z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-annotation z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-rust&quot;&gt;&lt;span class=&quot;z-variable z-function z-rust&quot;&gt;bound&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-rust&quot;&gt;deserialize &lt;span class=&quot;z-keyword z-operator z-rust&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;Vec&amp;lt;T&amp;gt;: Deserialize&amp;lt;&amp;#39;de&amp;gt;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-rust&quot;&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-annotation z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-storage z-modifier z-rust&quot;&gt;pub&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-member z-rust&quot;&gt;items&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-type z-rust&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-generic z-rust&quot;&gt;&lt;span class=&quot;z-support z-type z-rust&quot;&gt;Vec&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-begin z-rust&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;T&lt;span class=&quot;z-punctuation z-definition z-generic z-end z-rust&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;,
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-rust&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;next-steps&quot;&gt;Next steps&lt;&#x2F;h3&gt;
&lt;p&gt;Would be to port &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Babylonpartners&#x2F;shipcat&#x2F;tree&#x2F;master&#x2F;raftcat&quot;&gt;raftcat&lt;&#x2F;a&gt; (a small operator in babylon&#x27;s cloud) to use this client. Hopefully, after some battle testing in a slightly more advanced setting, this stuff can be less &lt;img alt=&quot;kubernetes alpha client&quot; style=&quot;display:inline&quot; src=&quot;https:&#x2F;&#x2F;img.shields.io&#x2F;badge&#x2F;kubernetes%20client-alpha-green.svg?style=plastic&amp;colorA=306CE8&quot;&#x2F;&gt; mode.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;edit-resolved-in-kube-0-6-0&quot;&gt;EDIT: Resolved in kube 0.6.0&lt;&#x2F;h3&gt;
&lt;p&gt;The above is untouched, but out of date now. Here are the major changes in &lt;code&gt;0.6.0&lt;&#x2F;code&gt;:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;the &lt;code&gt;Named&lt;&#x2F;code&gt; trait deemed unnecessary (just using &lt;code&gt;metadata.name&lt;&#x2F;code&gt; instead)&lt;&#x2F;li&gt;
&lt;li&gt;Native kube objects are supported&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;WatchEvent&lt;&#x2F;code&gt; type has been changed and exposed via a new &lt;code&gt;Informer&lt;&#x2F;code&gt; struct&lt;&#x2F;li&gt;
&lt;li&gt;handling events directly is now possible&lt;&#x2F;li&gt;
&lt;li&gt;polling is easier now&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Another thing that&#x27;s been highlighted is the misuse of kubernetes terminology. This is more describing a controller than an operator.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;operator-rs&lt;&#x2F;code&gt; has been renamed to &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;controller-rs&quot;&gt;controller-rs&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Additionally, &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Babylonpartners&#x2F;shipcat&#x2F;blob&#x2F;1e477411e8cb47dc97037fd8993278995a8f3f3e&#x2F;raftcat&#x2F;src&#x2F;state.rs#L28-L40&quot;&gt;raftcat was easily portable to use Reflectors&lt;&#x2F;a&gt; and so provides a bigger example.&lt;&#x2F;p&gt;
&lt;p&gt;See the follow-up blog post on this.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Impersonating kube service accounts</title>
        <published>2019-03-31T00:00:00+00:00</published>
        <updated>2019-03-31T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://clux.dev/post/2019-03-31-impersonating-kube-accounts/"/>
        <id>https://clux.dev/post/2019-03-31-impersonating-kube-accounts/</id>
        
        <content type="html" xml:base="https://clux.dev/post/2019-03-31-impersonating-kube-accounts/">&lt;p&gt;Authenticating with large kubernetes clusters often risks you dealing with complicated provider logic and sometimes policies outside your control.&lt;&#x2F;p&gt;
&lt;p&gt;While controllers and operators authenticate with service accounts directly, this is only true inside the cluster. That is, unless you can impersonate the service account from outside.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;EDIT:&lt;&#x2F;strong&gt; as of Kubernetes 1.24 the bypass method &lt;strong&gt;no longer works&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;..but why would you need to do this?&lt;&#x2F;p&gt;
&lt;h3 id=&quot;1-testing-service-account-access&quot;&gt;1. Testing service account access&lt;&#x2F;h3&gt;
&lt;p&gt;If you have a way to quickly impersonate a service account you can tell if your &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;kubernetes.io&#x2F;docs&#x2F;reference&#x2F;access-authn-authz&#x2F;rbac&#x2F;&quot;&gt;rbac verbs, resources&lt;&#x2F;a&gt; are correct and were slash separated in the way kube expects.&lt;&#x2F;p&gt;
&lt;p&gt;As an example, to allow shell access into pods, you must grant &lt;code&gt;create&lt;&#x2F;code&gt; on &lt;code&gt;pods&#x2F;exec&lt;&#x2F;code&gt; in the empty api group (&lt;code&gt;&quot;&quot;&lt;&#x2F;code&gt;)&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;yaml&quot; class=&quot;language-yaml z-code&quot;&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-block z-sequence z-item z-yaml&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;apiGroups&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-flow-sequence z-yaml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-sequence z-begin z-yaml&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-yaml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-yaml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-yaml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-sequence z-end z-yaml&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;  &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;resources&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;  &lt;span class=&quot;z-punctuation z-definition z-block z-sequence z-item z-yaml&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;pods&#x2F;exec&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;  &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;verbs&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-flow-sequence z-yaml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-sequence z-begin z-yaml&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-yaml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-yaml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;create&lt;span class=&quot;z-punctuation z-definition z-string z-end z-yaml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-sequence z-end z-yaml&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;It&#x27;s safe to say that the groups and resource names are often less than intuitive, and it doesn&#x27;t help that there is very lackluster errors when applying policies.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;2-kubectl-is-better-than-your-language-x-client&quot;&gt;2. kubectl is better than your language-x client&lt;&#x2F;h3&gt;
&lt;p&gt;Having your app deal with oidc providers is an unnecessary pain point &#x2F; code path when your app is meant to live in the cluster and authenticate with a service account anyway.&lt;&#x2F;p&gt;
&lt;p&gt;Even if the language you&#x27;re writing in is &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;kubernetes.io&#x2F;docs&#x2F;reference&#x2F;using-api&#x2F;client-libraries&#x2F;&quot;&gt;one of the supposedly supported languages&lt;&#x2F;a&gt;, &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kubernetes-client&#x2F;python&#x2F;issues&#x2F;628&quot;&gt;your mileage may vary if it&#x27;s not Go&lt;&#x2F;a&gt;. Even &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;kubernetes.io&#x2F;docs&#x2F;reference&#x2F;access-authn-authz&#x2F;authentication&#x2F;#client-go-credential-plugins&quot;&gt;post 1.11, it&#x27;s still beta in go&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;3-service-accounts-can-function-as-group-auth&quot;&gt;3. service accounts can function as group auth&lt;&#x2F;h3&gt;
&lt;p&gt;Not saying you shouldn&#x27;t have single sign on hooked up to kube, but if you are lacking a good solution at the moment, a few targetted developer accounts with actual rbac policies attached to them is an actual, revokeable solution (as opposed to handing over admin tokens).&lt;&#x2F;p&gt;
&lt;p&gt;It does not provide as clean of an audit trail, but if you just want to give read only access to pods, logs, deployments, you might not care.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;impersonation&quot;&gt;Impersonation&lt;&#x2F;h2&gt;
&lt;p&gt;There are currently two main ways of doing this. The new, limited-use-case way, and the old yaml wrangling method.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;rbac-controlled&quot;&gt;Rbac controlled&lt;&#x2F;h3&gt;
&lt;p&gt;These days, &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;kubernetes.io&#x2F;docs&#x2F;reference&#x2F;access-authn-authz&#x2F;authentication&#x2F;#user-impersonation&quot;&gt;kubectl supports user-impersonation&lt;&#x2F;a&gt;, so if you&#x27;re just testing access you can use &lt;code&gt;kubectl &amp;lt;verb&amp;gt; &amp;lt;resource&amp;gt; --as=jenkins&lt;&#x2F;code&gt;, provided your user has the &lt;code&gt;impersonate&lt;&#x2F;code&gt; verb set where you need it to:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;yaml&quot; class=&quot;language-yaml z-code&quot;&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-block z-sequence z-item z-yaml&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;apiGroups&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-flow-sequence z-yaml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-sequence z-begin z-yaml&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-yaml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-yaml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-yaml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-sequence z-end z-yaml&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;  &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;resources&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-flow-sequence z-yaml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-sequence z-begin z-yaml&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-yaml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-yaml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;users&lt;span class=&quot;z-punctuation z-definition z-string z-end z-yaml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-sequence z-yaml&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-yaml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-yaml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;groups&lt;span class=&quot;z-punctuation z-definition z-string z-end z-yaml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-sequence z-yaml&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-yaml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-yaml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;serviceaccounts&lt;span class=&quot;z-punctuation z-definition z-string z-end z-yaml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-sequence z-end z-yaml&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;  &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;verbs&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-flow-sequence z-yaml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-sequence z-begin z-yaml&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-yaml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-yaml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;impersonate&lt;span class=&quot;z-punctuation z-definition z-string z-end z-yaml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-sequence z-end z-yaml&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;However, this doesn&#x27;t solve problem 2 or 3 listed above.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;manual-impersonation&quot;&gt;Manual impersonation&lt;&#x2F;h3&gt;
&lt;p&gt;This method extracts the credentials from a service account and adds them as extra entries in your &lt;code&gt;~&#x2F;.kube&#x2F;config&lt;&#x2F;code&gt;. This way most language clients should be able to handle them, and you can have an unobtrusive new context to test.&lt;&#x2F;p&gt;
&lt;p&gt;The following implementation requires &lt;code&gt;kubectl&lt;&#x2F;code&gt;, &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kislyuk&#x2F;yq#installation&quot;&gt;&lt;code&gt;yq&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;, plus the existing rbac access to read service accounts and secrets in the namespace you want to impersonate.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; class=&quot;language-sh z-code&quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-begin z-shell&quot;&gt;#&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;!&#x2F;usr&#x2F;bin&#x2F;env bash&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-support z-function z-set z-shell&quot;&gt;set&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; -euo pipefail&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function z-shell&quot;&gt;&lt;span class=&quot;z-entity z-name z-function z-shell&quot;&gt;impersonate&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-begin z-shell&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-end z-shell&quot;&gt;)&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-section z-braces z-begin z-shell&quot;&gt;{&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function z-shell&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;  &lt;span class=&quot;z-storage z-modifier z-shell&quot;&gt;local&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt;-&lt;&#x2F;span&gt;r&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-readwrite z-assignment z-shell&quot;&gt;acc&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-shell&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-unquoted z-shell&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-expansion z-parameter z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-readwrite z-shell&quot;&gt;1&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function z-shell&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;  &lt;span class=&quot;z-storage z-modifier z-shell&quot;&gt;local&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt;-&lt;&#x2F;span&gt;r&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-readwrite z-assignment z-shell&quot;&gt;ns&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-shell&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-unquoted z-shell&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-expansion z-parameter z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-expansion z-parameter z-begin z-shell&quot;&gt;{&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-expansion z-parameter z-shell&quot;&gt;&lt;span class=&quot;z-variable z-other z-readwrite z-shell&quot;&gt;2&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-expansion z-parameter z-shell&quot;&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-shell&quot;&gt;:-&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-expansion z-parameter z-shell&quot;&gt;kube-system&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-expansion z-parameter z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-expansion z-parameter z-end z-shell&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function z-shell&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;  &lt;span class=&quot;z-storage z-modifier z-shell&quot;&gt;local&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt;-&lt;&#x2F;span&gt;r&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-readwrite z-assignment z-shell&quot;&gt;sec&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-shell&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-unquoted z-shell&quot;&gt;&lt;span class=&quot;z-meta z-group z-expansion z-command z-parens z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-begin z-shell&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;kubectl&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; get sa &lt;span class=&quot;z-string z-quoted z-double z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-expansion z-parameter z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-expansion z-parameter z-begin z-shell&quot;&gt;{&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-expansion z-parameter z-shell&quot;&gt;&lt;span class=&quot;z-variable z-other z-readwrite z-shell&quot;&gt;acc&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-expansion z-parameter z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-expansion z-parameter z-end z-shell&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;n&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-expansion z-parameter z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-expansion z-parameter z-begin z-shell&quot;&gt;{&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-expansion z-parameter z-shell&quot;&gt;&lt;span class=&quot;z-variable z-other z-readwrite z-shell&quot;&gt;ns&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-expansion z-parameter z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-expansion z-parameter z-end z-shell&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;oyaml&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-logical z-pipe z-shell&quot;&gt;|&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;yq&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; &lt;span class=&quot;z-string z-quoted z-double z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;.secrets[0].name&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;r&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-end z-shell&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function z-shell&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function z-shell&quot;&gt;  &lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-begin z-shell&quot;&gt;#&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt; extract required secrets from the service account&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function z-shell&quot;&gt;  &lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;kubectl&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; get secret &lt;span class=&quot;z-string z-quoted z-double z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-expansion z-parameter z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-expansion z-parameter z-begin z-shell&quot;&gt;{&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-expansion z-parameter z-shell&quot;&gt;&lt;span class=&quot;z-variable z-other z-readwrite z-shell&quot;&gt;sec&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-expansion z-parameter z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-expansion z-parameter z-end z-shell&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;n&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-expansion z-parameter z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-expansion z-parameter z-begin z-shell&quot;&gt;{&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-expansion z-parameter z-shell&quot;&gt;&lt;span class=&quot;z-variable z-other z-readwrite z-shell&quot;&gt;ns&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-expansion z-parameter z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-expansion z-parameter z-end z-shell&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;oyaml&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-redirection z-shell&quot;&gt;&amp;gt;&lt;&#x2F;span&gt; secret.yaml&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function z-shell&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;  &lt;span class=&quot;z-storage z-modifier z-shell&quot;&gt;local&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt;-&lt;&#x2F;span&gt;r&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-readwrite z-assignment z-shell&quot;&gt;token&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-shell&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-unquoted z-shell&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-expansion z-command z-parens z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-begin z-shell&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;yq&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; &lt;span class=&quot;z-string z-quoted z-double z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;.data.token&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;r&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-redirection z-shell&quot;&gt;&amp;lt;&lt;&#x2F;span&gt; secret.yaml&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-logical z-pipe z-shell&quot;&gt;|&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;base64&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;d&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-end z-shell&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function z-shell&quot;&gt;  &lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;yq&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; &lt;span class=&quot;z-string z-quoted z-double z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;.data[&lt;span class=&quot;z-constant z-character z-escape z-shell&quot;&gt;\&amp;quot;&lt;&#x2F;span&gt;ca.crt&lt;span class=&quot;z-constant z-character z-escape z-shell&quot;&gt;\&amp;quot;&lt;&#x2F;span&gt;]&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;r&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-redirection z-shell&quot;&gt;&amp;lt;&lt;&#x2F;span&gt; secret.yaml&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-logical z-pipe z-shell&quot;&gt;|&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;base64&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; --&lt;&#x2F;span&gt;decode&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-redirection z-shell&quot;&gt;&amp;gt;&lt;&#x2F;span&gt; ca.crt&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function z-shell&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function z-shell&quot;&gt;  &lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-begin z-shell&quot;&gt;#&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt; extract api server + namespace from existing kube config&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function z-shell&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;  &lt;span class=&quot;z-storage z-modifier z-shell&quot;&gt;local&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt;-&lt;&#x2F;span&gt;r&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-readwrite z-assignment z-shell&quot;&gt;context&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-shell&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-unquoted z-shell&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-expansion z-command z-parens z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-begin z-shell&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;kubectl&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; config current-context&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-end z-shell&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function z-shell&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;  &lt;span class=&quot;z-storage z-modifier z-shell&quot;&gt;local&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt;-&lt;&#x2F;span&gt;r&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-readwrite z-assignment z-shell&quot;&gt;apiserver&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-shell&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-unquoted z-shell&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-expansion z-command z-parens z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-begin z-shell&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;kubectl&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; config view&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-logical z-pipe z-shell&quot;&gt;|&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-separator z-continuation z-line z-shell&quot;&gt;\
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function z-shell&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-string z-unquoted z-shell&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-shell&quot;&gt;&lt;span class=&quot;z-meta z-group z-expansion z-command z-parens z-shell&quot;&gt;    &lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;yq&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;y&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;.clusters | map(select(.name == &lt;span class=&quot;z-constant z-character z-escape z-shell&quot;&gt;\&amp;quot;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-expansion z-parameter z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-expansion z-parameter z-begin z-shell&quot;&gt;{&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-expansion z-parameter z-shell&quot;&gt;&lt;span class=&quot;z-variable z-other z-readwrite z-shell&quot;&gt;context&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-expansion z-parameter z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-expansion z-parameter z-end z-shell&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-character z-escape z-shell&quot;&gt;\&amp;quot;&lt;&#x2F;span&gt;))&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-logical z-pipe z-shell&quot;&gt;|&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-separator z-continuation z-line z-shell&quot;&gt;\
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function z-shell&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-string z-unquoted z-shell&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-shell&quot;&gt;&lt;span class=&quot;z-meta z-group z-expansion z-command z-parens z-shell&quot;&gt;    &lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;yq&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; &lt;span class=&quot;z-string z-quoted z-double z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;.[].cluster.server&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;r&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-end z-shell&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function z-shell&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;  &lt;span class=&quot;z-storage z-modifier z-shell&quot;&gt;local&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt;-&lt;&#x2F;span&gt;r&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-readwrite z-assignment z-shell&quot;&gt;namespace&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-shell&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-unquoted z-shell&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-expansion z-command z-parens z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-begin z-shell&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;kubectl&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; config view&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-logical z-pipe z-shell&quot;&gt;|&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-separator z-continuation z-line z-shell&quot;&gt;\
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function z-shell&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-string z-unquoted z-shell&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-shell&quot;&gt;&lt;span class=&quot;z-meta z-group z-expansion z-command z-parens z-shell&quot;&gt;    &lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;yq&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;y&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;.contexts | map(select(.name == &lt;span class=&quot;z-constant z-character z-escape z-shell&quot;&gt;\&amp;quot;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-expansion z-parameter z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-expansion z-parameter z-begin z-shell&quot;&gt;{&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-expansion z-parameter z-shell&quot;&gt;&lt;span class=&quot;z-variable z-other z-readwrite z-shell&quot;&gt;context&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-expansion z-parameter z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-expansion z-parameter z-end z-shell&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-character z-escape z-shell&quot;&gt;\&amp;quot;&lt;&#x2F;span&gt;))&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-logical z-pipe z-shell&quot;&gt;|&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-separator z-continuation z-line z-shell&quot;&gt;\
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function z-shell&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-string z-unquoted z-shell&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-shell&quot;&gt;&lt;span class=&quot;z-meta z-group z-expansion z-command z-parens z-shell&quot;&gt;    &lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;yq&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; &lt;span class=&quot;z-string z-quoted z-double z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;.[].context.namespace&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;r&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-end z-shell&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function z-shell&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function z-shell&quot;&gt;  &lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-support z-function z-echo z-shell&quot;&gt;echo&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; &lt;span class=&quot;z-string z-quoted z-double z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;Got &lt;span class=&quot;z-meta z-group z-expansion z-parameter z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-expansion z-parameter z-begin z-shell&quot;&gt;{&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-expansion z-parameter z-shell&quot;&gt;&lt;span class=&quot;z-variable z-other z-readwrite z-shell&quot;&gt;context&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-expansion z-parameter z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-expansion z-parameter z-end z-shell&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; via &lt;span class=&quot;z-meta z-group z-expansion z-parameter z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-expansion z-parameter z-begin z-shell&quot;&gt;{&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-expansion z-parameter z-shell&quot;&gt;&lt;span class=&quot;z-variable z-other z-readwrite z-shell&quot;&gt;apiserver&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-expansion z-parameter z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-expansion z-parameter z-end z-shell&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; on &lt;span class=&quot;z-meta z-group z-expansion z-parameter z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-expansion z-parameter z-begin z-shell&quot;&gt;{&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-expansion z-parameter z-shell&quot;&gt;&lt;span class=&quot;z-variable z-other z-readwrite z-shell&quot;&gt;namespace&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-expansion z-parameter z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-expansion z-parameter z-end z-shell&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function z-shell&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function z-shell&quot;&gt;  &lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-begin z-shell&quot;&gt;#&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt; pass everything onto kubectl config to get it updated in ~&#x2F;.kube&#x2F;config&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function z-shell&quot;&gt;  &lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;kubectl&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; config set-cluster &lt;span class=&quot;z-punctuation z-separator z-continuation z-line z-shell&quot;&gt;\
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function z-shell&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt;    --&lt;&#x2F;span&gt;certificate-authority&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-option z-shell&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;ca.crt&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-separator z-continuation z-line z-shell&quot;&gt;\
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function z-shell&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt;    --&lt;&#x2F;span&gt;embed-certs&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-option z-shell&quot;&gt;=&lt;&#x2F;span&gt;true &lt;span class=&quot;z-punctuation z-separator z-continuation z-line z-shell&quot;&gt;\
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function z-shell&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt;    --&lt;&#x2F;span&gt;server&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-option z-shell&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-expansion z-parameter z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-expansion z-parameter z-begin z-shell&quot;&gt;{&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-expansion z-parameter z-shell&quot;&gt;&lt;span class=&quot;z-variable z-other z-readwrite z-shell&quot;&gt;apiserver&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-expansion z-parameter z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-expansion z-parameter z-end z-shell&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-separator z-continuation z-line z-shell&quot;&gt;\
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function z-shell&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt;    &lt;span class=&quot;z-string z-quoted z-double z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;impersonate-cluster&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function z-shell&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function z-shell&quot;&gt;  &lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;kubectl&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; config set-credentials &lt;span class=&quot;z-string z-quoted z-double z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;impersonator&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-separator z-continuation z-line z-shell&quot;&gt;\
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function z-shell&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt;    --&lt;&#x2F;span&gt;token&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-option z-shell&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-expansion z-parameter z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-expansion z-parameter z-begin z-shell&quot;&gt;{&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-expansion z-parameter z-shell&quot;&gt;&lt;span class=&quot;z-variable z-other z-readwrite z-shell&quot;&gt;token&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-expansion z-parameter z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-expansion z-parameter z-end z-shell&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-separator z-continuation z-line z-shell&quot;&gt;\
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function z-shell&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt;    --&lt;&#x2F;span&gt;client-key&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-option z-shell&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;ca.crt&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-separator z-continuation z-line z-shell&quot;&gt;\
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function z-shell&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt;    --&lt;&#x2F;span&gt;embed-certs&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-option z-shell&quot;&gt;=&lt;&#x2F;span&gt;true&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function z-shell&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function z-shell&quot;&gt;  &lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;kubectl&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; config set-context &lt;span class=&quot;z-punctuation z-separator z-continuation z-line z-shell&quot;&gt;\
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function z-shell&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt;    --&lt;&#x2F;span&gt;cluster&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-option z-shell&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;impersonate-cluster&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-separator z-continuation z-line z-shell&quot;&gt;\
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function z-shell&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt;    --&lt;&#x2F;span&gt;user&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-option z-shell&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;impersonator&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-separator z-continuation z-line z-shell&quot;&gt;\
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function z-shell&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt;    --&lt;&#x2F;span&gt;namespace&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-option z-shell&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-expansion z-parameter z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-expansion z-parameter z-begin z-shell&quot;&gt;{&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-expansion z-parameter z-shell&quot;&gt;&lt;span class=&quot;z-variable z-other z-readwrite z-shell&quot;&gt;namespace&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-expansion z-parameter z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-expansion z-parameter z-end z-shell&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-separator z-continuation z-line z-shell&quot;&gt;\
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function z-shell&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt;    &lt;span class=&quot;z-string z-quoted z-double z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;impersonate&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function z-shell&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function z-shell&quot;&gt;  &lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;kubectl&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; config use-context &lt;span class=&quot;z-string z-quoted z-double z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;impersonate&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-braces z-end z-shell&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-begin z-shell&quot;&gt;#&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt; usage: impersonate jenkins kube-system&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-begin z-shell&quot;&gt;#&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt; shellcheck disable=SC2068&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;impersonate&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; &lt;span class=&quot;z-meta z-group z-expansion z-parameter z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-language z-shell&quot;&gt;@&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Make it an executable &lt;code&gt;impersonate.sh&lt;&#x2F;code&gt; file and run &lt;code&gt;.&#x2F;impersonate account namespace&lt;&#x2F;code&gt;. Note that this implementation requires that your context has a namespace.&lt;&#x2F;p&gt;
&lt;p&gt;For a budget solution to 3; take the &lt;code&gt;token&lt;&#x2F;code&gt; + &lt;code&gt;secret&lt;&#x2F;code&gt;, store it in a secured &lt;code&gt;vault&lt;&#x2F;code&gt; that you probably already use policies for correctly. People can now elevate themselves from &lt;code&gt;vault&lt;&#x2F;code&gt; to &lt;code&gt;kubectl&lt;&#x2F;code&gt; while you bang your head against the oidc providers.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Three Way Charms</title>
        <published>2019-01-17T00:00:00+00:00</published>
        <updated>2019-01-17T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://clux.dev/post/2019-01-17-three-way-charm/"/>
        <id>https://clux.dev/post/2019-01-17-three-way-charm/</id>
        
        <content type="html" xml:base="https://clux.dev/post/2019-01-17-three-way-charm/">&lt;p&gt;Fighting a CR 13 Vampire at level 7 in total darkness is no easy feat.&lt;&#x2F;p&gt;
&lt;p&gt;As part of an emergency backup adventure (&lt;code&gt;EBA&lt;&#x2F;code&gt;) in the middle of a long running D&amp;amp;D campaign, our largely chaotic party of misfits (save for our low int paladin whose deity has yet to be named in his backstory) was given the poem that leads them into (and helps them navigate) &lt;code&gt;White Plume Mountain&lt;&#x2F;code&gt;:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;imgs&#x2F;whiteplume&#x2F;poem.webp&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;It&#x27;s a classic dungeon, revamped for 5th edition in &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;http:&#x2F;&#x2F;dnd.wizards.com&#x2F;products&#x2F;tabletop-games&#x2F;rpg-products&#x2F;tales-yawning-portal&quot;&gt;Tales from the Yawning Portal&lt;&#x2F;a&gt; and features three major pathways, boss fights, and major sentient weapons as the attracting carrots.&lt;&#x2F;p&gt;
&lt;p&gt;It&#x27;s also incredibly dangerous. It&#x27;s designed for a party of 8th level characters, and often recommended as weekend interim game to give people a breather from your regular campaign, because of the high likelihood of a total party kill.&lt;&#x2F;p&gt;
&lt;p&gt;However, what&#x27;s the point of getting three legendary weapons if the one shot is then over? High reward makes even the most careful players willing to confront high risk scenarios, and &lt;em&gt;that&lt;&#x2F;em&gt; can make for a really interesting dungeon crawl.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;small&gt;I may also have been caught slightly unaware when rereading the boss battles &lt;strong&gt;after&lt;&#x2F;strong&gt; having lead my 7th level adventurers into the first corridor of this dungeon.&lt;&#x2F;small&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Regardless. This dungeon seemed like the perfect match for my stunlock heavy, very tactical party of control characters with good equipment.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;ctenmiir&quot;&gt;Ctenmiir&lt;&#x2F;h2&gt;
&lt;p&gt;A &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;roll20.net&#x2F;compendium&#x2F;dnd5e&#x2F;Vampire#content&quot;&gt;Vampire&lt;&#x2F;a&gt; hidden in complete magical darkness, with a &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;rpg.stackexchange.com&#x2F;questions&#x2F;120792&#x2F;what-can-break-a-vampire-s-charm-besides-greater-restoration&quot;&gt;strong magical charm&lt;&#x2F;a&gt; that he can perform every round, that does not require concentration, nor allow repeat saves.&lt;&#x2F;p&gt;
&lt;p&gt;This encounter was unlike anything the party has faced before. All previous bosses had been either &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;dnd5e.fandom.com&#x2F;wiki&#x2F;Tasha%27s_Hideous_Laughter&quot;&gt;tashaed&lt;&#x2F;a&gt; by our trickster, &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;roll20.net&#x2F;compendium&#x2F;dnd5e&#x2F;Classes:Monk&#x2F;#toc_16&quot;&gt;stun-locked&lt;&#x2F;a&gt; by our monk, or &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;dnd5e.fandom.com&#x2F;wiki&#x2F;Hold_Person&quot;&gt;chain-held&lt;&#x2F;a&gt; by our Paladin + Warlock&#x2F;Sorcerer. But with three legendary resists, high natural saves, and difficulty hitting, only one of these even needed to be spent.&lt;&#x2F;p&gt;
&lt;p&gt;One of the reasons for that is that you don&#x27;t just start a battle like this without some buildup.&lt;&#x2F;p&gt;
&lt;p&gt;Why would the vampire want to just start the battle on even ground? Sitting on 17 INT and 18 CHA, he&#x27;ll want to get in your heads so that he can get a charm off early. And with legendary move actions, he can simply jump around and can generally dodge attacks from any over-eager party member while he attempts to persuade the party.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Well, I would pardon my manners, but it would appear you&#x27;re the ones who walked into my bedroom.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Then, when the party starts to suspect this may not be a combat encounter, you lean in to one of the heavy hitters and whisper while revealing your face (a condition of the charm to work):&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;You&#x27;re clearly the strongest one in the group. Don&#x27;t you think this would be much easier without the pointless bloodshed? Protect me and we will all get along very soon.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Make a wisdom saving throw. &lt;strong&gt;Silent failure&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Let&#x27;s all roll for initiative.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;a-game-of-charms&quot;&gt;A game of charms&lt;&#x2F;h2&gt;
&lt;p&gt;By the end of round 1, the one attempt to dispell the magical darkness had failed, and another party member had been charmed by &lt;code&gt;Ctenmiir&lt;&#x2F;code&gt; (i.e. &lt;code&gt;2&#x2F;4&lt;&#x2F;code&gt;), all while he easily kept himself out of harms way. It did not look good.&lt;&#x2F;p&gt;
&lt;p&gt;Satisfied with the situation, the vampire began feeding on the remaining members. HP drain on the rogue. Warlock down to 8hp. Some hits were taken during the process, but no cause for alarm for the vampire.&lt;&#x2F;p&gt;
&lt;p&gt;Then, having exhausted all spells that caused saves from the vampire (which he could just legendary resist), the warlock went down a different route:&lt;&#x2F;p&gt;
&lt;p&gt;He cast &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;roll20.net&#x2F;compendium&#x2F;dnd5e&#x2F;Suggestion#content&quot;&gt;Suggestion&lt;&#x2F;a&gt;, &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;roll20.net&#x2F;compendium&#x2F;dnd5e&#x2F;Classes:Sorcerer&#x2F;#toc_17&quot;&gt;Twinned&lt;&#x2F;a&gt; on the two charmed characters with the instruction:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;You have been charmed by the vampire. Do not listen to him; fight him instead.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Well within the restrictions of the spell. Paladin, Fighter: Make wisdom saving throws against the warlock&#x27;s spell DC. &lt;strong&gt;More failures&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Thus, an interesting equilibrium point was reached. Two players still charmed by the vampire, but one warlock concentrating on maintaining the suggestion to counteract this effect.&lt;&#x2F;p&gt;
&lt;p&gt;On cue, &lt;code&gt;Ctenmiir&lt;&#x2F;code&gt; jumps into the face of the warlock to try to break this concentration. &lt;strong&gt;Reaction &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;dnd5e.fandom.com&#x2F;wiki&#x2F;Shield&quot;&gt;Shield&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt; defense is successful. Party gets to now wail on the increasingly frustrated vampire.&lt;&#x2F;p&gt;
&lt;p&gt;Paladin comes in with a &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;roll20.net&#x2F;compendium&#x2F;dnd5e&#x2F;Branding%20Smite#content&quot;&gt;Branding Smite&lt;&#x2F;a&gt; to force the vampire to be permanently visible, and stop regenerating. It&#x27;s just a question of time before he goes down.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;Ctenmiir&lt;&#x2F;code&gt; makes a final crucial attempt to charm the warlock. If successful, the warlock would have to drop his concentration on his twinned suggestion to protect the vampire. Thus, the total number of charmed party members is either &lt;code&gt;0&#x2F;4&lt;&#x2F;code&gt; or &lt;code&gt;3&#x2F;4&lt;&#x2F;code&gt;, depending on one wisdom save.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;He succeeds&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The vampire is dispatched over the course of the next round, and his treasure is claimed.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;what&quot;&gt;What&lt;&#x2F;h2&gt;
&lt;p&gt;As a DM, this was one of my most memorable battles so far. So much rested on this insane combination of charms, and it could easily have ended in a TPK.&lt;&#x2F;p&gt;
&lt;p&gt;If anyone&#x27;s deserved their new sentient warhammer, it&#x27;s them.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;aside&quot;&gt;Aside&lt;&#x2F;h2&gt;
&lt;p&gt;As an amusing sidenote; at one point, the rogue history checks for knowledge of vampires (poorly), but still persuades the charmed paladin to &quot;heal&quot; the vampire.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;The vampire returns to full health. 😆&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;A metagaming attempt halted on by a fourth-to-fifth edition confusion. Karmic.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>shipcat retrospective</title>
        <published>2018-12-15T00:00:00+00:00</published>
        <updated>2023-09-28T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://clux.dev/post/shipcat-retrospective/"/>
        <id>https://clux.dev/post/shipcat-retrospective/</id>
        
        <content type="html" xml:base="https://clux.dev/post/shipcat-retrospective/">&lt;p&gt;The now defunct unicorn startup &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.babylonhealth.com&#x2F;&quot;&gt;babylon health&lt;&#x2F;a&gt; needed to micrate about 50 microservices to Kubernetes in early 2018. At Kubernetes 1.8, supporting tooling was weak, but the company pace was fast.&lt;&#x2F;p&gt;
&lt;p&gt;This is an &lt;strong&gt;historically updated post&lt;&#x2F;strong&gt; about &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;shipcat&quot;&gt;&lt;code&gt;shipcat&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;, a standardisation tool written to control the declarative format and lifecycle of every microservice, and get safety quickly.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;This article was updated after babylon&#x27;s demise in 2023. It now serves as a mini-retrospective instead of the mostly broken announcement (with the original repo being down). We add some better showcases and examples, and historical context, that together should help avoid some common misconceptions about why this weird tool was written.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;First, a bit about the problem:&lt;&#x2F;p&gt;
&lt;h2 id=&quot;kubernetes-api&quot;&gt;Kubernetes API&lt;&#x2F;h2&gt;
&lt;p&gt;Migrating to Kubernetes was a non-trivial task for a DevOps team, when the requirements where basically that &lt;strong&gt;we would do it for the engineers&lt;&#x2F;strong&gt;. We had to standardise, and we had to decide on what a &lt;strong&gt;microservice&lt;&#x2F;strong&gt; ought to look like based on what was already there.&lt;&#x2F;p&gt;
&lt;p&gt;We didn&#x27;t want engineers to all have to learn everything about the following objects at once:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ConfigMap&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;Secrets&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;Deployment&lt;&#x2F;code&gt; &#x2F; &lt;code&gt;ReplicaSet&lt;&#x2F;code&gt; &#x2F; &lt;code&gt;Pod&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;Service&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;HorizontalPodAutoscaler&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;ServiceAccount&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;Role&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;RoleBinding&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;Ingress&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;We needed validation. Admission control was new, didn&#x27;t work well with gitops for fast client-side validation, and we just needed ci checks to prevent &lt;code&gt;master&lt;&#x2F;code&gt; from being broken.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;helm&quot;&gt;Helm&lt;&#x2F;h2&gt;
&lt;p&gt;The most successful abstraction attempt Kubernetes had seen in this space; &lt;code&gt;helm&lt;&#x2F;code&gt;. A client side templating system (ignoring the bad server side part) that lets you abstract away much of the above into &lt;code&gt;charts&lt;&#x2F;code&gt; (a collection of &lt;code&gt;yaml&lt;&#x2F;code&gt; go templates) ready to be filled in with &lt;code&gt;helm values&lt;&#x2F;code&gt;; the more concise &lt;code&gt;yaml&lt;&#x2F;code&gt; that developers write directly.&lt;&#x2F;p&gt;
&lt;p&gt;Simplistic usage of &lt;code&gt;helm&lt;&#x2F;code&gt; would involve having a &lt;code&gt;charts&lt;&#x2F;code&gt; folder:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; class=&quot;language-sh z-code&quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;charts&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;└──&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; base&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;    &lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;├──&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; Chart.yaml&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;    &lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;├──&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; templates&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;    &lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;│&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt;   ├── configmap.yamls&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;    &lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;│&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt;   ├── deployment.yaml&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;    &lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;│&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt;   ├── hpa.yaml&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;    &lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;│&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt;   ├── rbac.yaml&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;    &lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;│&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt;   ├── secrets.yaml&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;    &lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;│&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt;   ├── serviceaccount.yaml&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;    &lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;│&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt;   └── service.yaml&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;    &lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;└──&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; values.yaml&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;and calling it with your substitute &lt;code&gt;myvalues.yaml&lt;&#x2F;code&gt;:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; class=&quot;language-sh z-code&quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;helm&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; template charts&#x2F;base myapp&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;f&lt;&#x2F;span&gt; myvalues.yaml&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-logical z-pipe z-shell&quot;&gt;|&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-separator z-continuation z-line z-shell&quot;&gt;\
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;    &lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;kubectl&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; apply&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;lapp&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-option z-shell&quot;&gt;=&lt;&#x2F;span&gt;myapp&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; --&lt;&#x2F;span&gt;prune&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;f&lt;&#x2F;span&gt; -&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;which will garbage collect older kube resources with the &lt;code&gt;myapp&lt;&#x2F;code&gt; label, and start any necessary rolling upgrades in kubernetes.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;drawbacks&quot;&gt;Drawbacks&lt;&#x2F;h3&gt;
&lt;p&gt;Even though you can avoid a lot of the common errors by re-using charts across apps, there were still very little sanity on what helm values could contain. Here are some values you could pass through a helm chart to kubernetes and still be accepted:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;misspelled optional values (silently ignored)&lt;&#x2F;li&gt;
&lt;li&gt;resource requests exceeding largest node (cannot schedule nor vertically auto scale)&lt;&#x2F;li&gt;
&lt;li&gt;resource requests &amp;gt; resource limits (illogical)&lt;&#x2F;li&gt;
&lt;li&gt;out of date secrets (generally causing crashes)&lt;&#x2F;li&gt;
&lt;li&gt;missing health checks &#x2F; &lt;code&gt;readinessProbe&lt;&#x2F;code&gt; (broken services can rollout)&lt;&#x2F;li&gt;
&lt;li&gt;images and versions that does not exist (fails to install&#x2F;upgrade)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;And that&#x27;s once you&#x27;ve gotten over how frurstrating it can be to write helm templates in the first place.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;limitations&quot;&gt;Limitations&lt;&#x2F;h2&gt;
&lt;p&gt;While validation is a fixable annoyance, a bigger observation is that these helm values files become a really interesting, but entirely &lt;strong&gt;accidental abstraction&lt;&#x2F;strong&gt;. These files become the canonical representation of your services, but you have no useful logic around it. You have very little validation, almost no definition of what&#x27;s allowed in there (&lt;code&gt;helm lint&lt;&#x2F;code&gt; is lackluster), you have no process of standardisation, it&#x27;s hard to test sprawling automation scripts around the values files, and you do not have any sane way of evolving these charts.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;enter-shipcat&quot;&gt;Enter shipcat&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;shipcat&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;shipcat&#x2F;raw&#x2F;master&#x2F;logo&#x2F;shipcat_logo.png&quot; alt=&quot;shipcat logo&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;What if if we could take the general idea that developers just write simplified &lt;em&gt;yaml manifests&lt;&#x2F;em&gt; for their app, but we actually &lt;strong&gt;define&lt;&#x2F;strong&gt; that API instead? By actually defining the structs we can provide a bunch of security checking and validation on top of it, and we will have a well-defined boundary for automation &#x2F; ci &#x2F; dev tools.&lt;&#x2F;p&gt;
&lt;p&gt;By defining all our syntax in a library we can have cli tools for automation, and executables running as kubernetes operators using the same definitions. It effectively provides a way to versioning the platform.&lt;&#x2F;p&gt;
&lt;p&gt;This also allowed us to solve a &lt;em&gt;secrets&lt;&#x2F;em&gt; problem. We extended the manifests with syntax that allows synchronsing secrets from &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.hashicorp.com&#x2F;products&#x2F;vault&#x2F;&quot;&gt;Vault&lt;&#x2F;a&gt; at both deploy and validation time. There are &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.hashicorp.com&#x2F;blog&#x2F;injecting-vault-secrets-into-kubernetes-pods-via-a-sidecar&quot;&gt;better solutions for this now&lt;&#x2F;a&gt;, but we needed something quickly.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;disclaimer&quot;&gt;Disclaimer&lt;&#x2F;h2&gt;
&lt;p&gt;This style of tool was not a revolutionary (nor clean) idea. At KubeCon Eu 2018 pretty much everyone had their own wrappers around &lt;code&gt;yaml&lt;&#x2F;code&gt; to help with these problems. For instance, &lt;code&gt;kubecfg&lt;&#x2F;code&gt;, &lt;code&gt;ksonnet&lt;&#x2F;code&gt;, &lt;code&gt;flux&lt;&#x2F;code&gt;, &lt;code&gt;helmfile&lt;&#x2F;code&gt;, all try to help out in this space, but they were all missing most of the sanity we required when we started experimenting.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;so, how to homebrew Kubernetes validation in an early stage gitops world&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;The result, perhaps unsurprisingly, was &lt;strong&gt;babylon dependent&lt;&#x2F;strong&gt;, fast moving, and not fit for general purpose. But it was still very helpful for the company.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;manifests&quot;&gt;Manifests&lt;&#x2F;h2&gt;
&lt;p&gt;The user interaface we settled on were service-level manifests:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;yaml&quot; class=&quot;language-yaml z-code&quot;&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;name&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;webapp&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;image&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;clux&#x2F;webapp-rs&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;version&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-float z-decimal z-yaml&quot;&gt;0&lt;span class=&quot;z-punctuation z-separator z-decimal z-yaml&quot;&gt;.&lt;&#x2F;span&gt;2.0&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;env&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;  &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;DATABASE_URL&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;IN_VAULT&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;resources&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;  &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;requests&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;    &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;cpu&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;100m&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;    &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;memory&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;100Mi&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;  &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;limits&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;    &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;cpu&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;300m&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;    &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;memory&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;300Mi&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;replicaCount&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;2&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;health&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;  &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;uri&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&#x2F;health&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;httpPort&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;8000&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;regions&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-block z-sequence z-item z-yaml&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;minikube&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;metadata&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;  &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;contacts&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;  &lt;span class=&quot;z-punctuation z-definition z-block z-sequence z-item z-yaml&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;name&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-yaml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-yaml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;Eirik&lt;span class=&quot;z-punctuation z-definition z-string z-end z-yaml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;    &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;slack&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-yaml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-yaml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;@clux&lt;span class=&quot;z-punctuation z-definition z-string z-end z-yaml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;  &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;team&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;Doves&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;  &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;repo&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;webapp-rs&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;This encapsulated the usual kubernetes apis that developers needed to configure themselves, who&#x27;s responsible for it, what regions it&#x27;s deployed in, what secrets are needed (notice the &lt;code&gt;IN_VAULT&lt;&#x2F;code&gt; marker), and how resource intensive it is.&lt;&#x2F;p&gt;
&lt;p&gt;It&#x27;s obviously quite limiting in terms of what you actually can do on Kubernetes, but this simple &quot;one deployment per microservice&quot; with some optional extras was generally sufficient for years.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;strict-syntax&quot;&gt;Strict Syntax&lt;&#x2F;h2&gt;
&lt;p&gt;Because these manifests were going to be the entry point for CI pipelines and handle platform specific validation (for medical software), we wanted maximum strictness everywhere and that includes the ability to catch errors before manifests are committed to &lt;code&gt;master&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;We leant heavily on &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;serde.rs&#x2F;attributes.html&quot;&gt;serde&#x27;s customisable codegeneration&lt;&#x2F;a&gt; to encapsulate awkward k8s apis, and to auto-generate the boilerplate validation around types and spelling errors.&lt;&#x2F;p&gt;
&lt;p&gt;The Kubernetes structs were &lt;strong&gt;handrolled&lt;&#x2F;strong&gt; for the most part, but later incorporated parts of &lt;code&gt;k8s-openapi&lt;&#x2F;code&gt; structs - however these were too &lt;code&gt;Option&lt;&#x2F;code&gt;-heavy to catch most missed-out fields on their own.&lt;&#x2F;p&gt;
&lt;p&gt;Here are some structs we used to ensure &lt;code&gt;resources&lt;&#x2F;code&gt; and &lt;code&gt;limits&lt;&#x2F;code&gt; had the right format:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;rust&quot; class=&quot;language-rust z-code&quot;&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-comment z-line z-documentation z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-rust&quot;&gt;&#x2F;&#x2F;&#x2F;&lt;&#x2F;span&gt; Kubernetes resource requests or limit
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-annotation z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-annotation z-rust&quot;&gt;#&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-annotation z-rust&quot;&gt;derive&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-annotation z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-annotation z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;Serialize&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;,&lt;&#x2F;span&gt; Deserialize&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;,&lt;&#x2F;span&gt; Clone&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;,&lt;&#x2F;span&gt; Debug&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-annotation z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-annotation z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-annotation z-rust&quot;&gt;#&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-annotation z-rust&quot;&gt;serde&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-annotation z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-annotation z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;deny_unknown_fields&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-annotation z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;span class=&quot;z-storage z-modifier z-rust&quot;&gt;pub&lt;&#x2F;span&gt; &lt;span class=&quot;z-storage z-type z-struct z-rust&quot;&gt;struct&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;span class=&quot;z-meta z-generic z-rust&quot;&gt;&lt;span class=&quot;z-entity z-name z-struct z-rust&quot;&gt;Resources&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-generic z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-begin z-rust&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;T&lt;span class=&quot;z-punctuation z-definition z-generic z-end z-rust&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-rust&quot;&gt;{&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-comment z-line z-documentation z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-rust&quot;&gt;&#x2F;&#x2F;&#x2F;&lt;&#x2F;span&gt; CPU request string
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-storage z-modifier z-rust&quot;&gt;pub&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-member z-rust&quot;&gt;cpu&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-type z-rust&quot;&gt;:&lt;&#x2F;span&gt; T,
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-comment z-line z-documentation z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-rust&quot;&gt;&#x2F;&#x2F;&#x2F;&lt;&#x2F;span&gt; Memory request string
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-storage z-modifier z-rust&quot;&gt;pub&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-member z-rust&quot;&gt;memory&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-type z-rust&quot;&gt;:&lt;&#x2F;span&gt; T,
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-comment z-line z-double-slash z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-rust&quot;&gt;&#x2F;&#x2F;&lt;&#x2F;span&gt; TODO: ephemeral-storage + extended-resources
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-rust&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-comment z-line z-documentation z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-rust&quot;&gt;&#x2F;&#x2F;&#x2F;&lt;&#x2F;span&gt; Kubernetes resources
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-annotation z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-annotation z-rust&quot;&gt;#&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-annotation z-rust&quot;&gt;derive&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-annotation z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-annotation z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;Serialize&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;,&lt;&#x2F;span&gt; Deserialize&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;,&lt;&#x2F;span&gt; Clone&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;,&lt;&#x2F;span&gt; Debug&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-annotation z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-annotation z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-annotation z-rust&quot;&gt;#&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-annotation z-rust&quot;&gt;serde&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-annotation z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-annotation z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;deny_unknown_fields&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-annotation z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;span class=&quot;z-storage z-modifier z-rust&quot;&gt;pub&lt;&#x2F;span&gt; &lt;span class=&quot;z-storage z-type z-struct z-rust&quot;&gt;struct&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;span class=&quot;z-meta z-generic z-rust&quot;&gt;&lt;span class=&quot;z-entity z-name z-struct z-rust&quot;&gt;ResourceRequirements&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-generic z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-begin z-rust&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;T&lt;span class=&quot;z-punctuation z-definition z-generic z-end z-rust&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-rust&quot;&gt;{&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-comment z-line z-documentation z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-rust&quot;&gt;&#x2F;&#x2F;&#x2F;&lt;&#x2F;span&gt; Resource requests for k8s
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-storage z-modifier z-rust&quot;&gt;pub&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-member z-rust&quot;&gt;requests&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-type z-rust&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-generic z-rust&quot;&gt;Resources&lt;span class=&quot;z-punctuation z-definition z-generic z-begin z-rust&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;T&lt;span class=&quot;z-punctuation z-definition z-generic z-end z-rust&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;,
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-comment z-line z-documentation z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-rust&quot;&gt;&#x2F;&#x2F;&#x2F;&lt;&#x2F;span&gt; Resource limits for k8s
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-storage z-modifier z-rust&quot;&gt;pub&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-member z-rust&quot;&gt;limits&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-type z-rust&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-generic z-rust&quot;&gt;Resources&lt;span class=&quot;z-punctuation z-definition z-generic z-begin z-rust&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;T&lt;span class=&quot;z-punctuation z-definition z-generic z-end z-rust&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;,
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-struct z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-rust&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Here, &lt;code&gt;serde&lt;&#x2F;code&gt; enforces the &quot;schema&quot; validation. It catches spelling-errors as extraneous types&#x2F;keys due to the &lt;code&gt;#[serde(deny_unknown_fields)]&lt;&#x2F;code&gt; instruction, and it enforces the correct types. But on the flip side, having this in code also required us updating the spec (to say, support ephemeral storage requirements).&lt;&#x2F;p&gt;
&lt;p&gt;Still, this provided cheap schema validation (before helm got it) and there was also a &lt;code&gt;verify&lt;&#x2F;code&gt; method that every struct could implement. This genenrally encapsulated common mistakes that were clearly errors and should be caught before they are sent out to the clusters:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;rust&quot; class=&quot;language-rust z-code&quot;&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-impl z-rust&quot;&gt;&lt;span class=&quot;z-storage z-type z-impl z-rust&quot;&gt;impl&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-impl z-rust&quot;&gt;&lt;span class=&quot;z-entity z-name z-impl z-rust&quot;&gt;ResourceRequirements&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-generic z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-begin z-rust&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-type z-rust&quot;&gt;String&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-end z-rust&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-impl z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-rust&quot;&gt;{&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-impl z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-comment z-line z-double-slash z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-rust&quot;&gt;&#x2F;&#x2F;&lt;&#x2F;span&gt; TODO: look at cluster config for limits?
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-impl z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-storage z-modifier z-rust&quot;&gt;pub&lt;&#x2F;span&gt; &lt;span class=&quot;z-storage z-type z-function z-rust&quot;&gt;fn&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-function z-rust&quot;&gt;verify&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-rust&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-parameter z-rust&quot;&gt;self&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-parameters z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt; &lt;span class=&quot;z-meta z-function z-return-type z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-rust&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-generic z-rust&quot;&gt;&lt;span class=&quot;z-support z-type z-rust&quot;&gt;Result&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-begin z-rust&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-end z-rust&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-rust&quot;&gt;{&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-impl z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;        &lt;span class=&quot;z-comment z-line z-double-slash z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-rust&quot;&gt;&#x2F;&#x2F;&lt;&#x2F;span&gt; (We can unwrap all the values as we assume implicit called!)
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-impl z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;        &lt;span class=&quot;z-storage z-type z-rust&quot;&gt;let&lt;&#x2F;span&gt; n &lt;span class=&quot;z-keyword z-operator z-assignment z-rust&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-language z-rust&quot;&gt;self&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-rust&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-function z-rust&quot;&gt;normalised&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-rust&quot;&gt;?&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-rust&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-impl z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;        &lt;span class=&quot;z-storage z-type z-rust&quot;&gt;let&lt;&#x2F;span&gt; req &lt;span class=&quot;z-keyword z-operator z-assignment z-rust&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-bitwise z-rust&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;n&lt;span class=&quot;z-punctuation z-accessor z-dot z-rust&quot;&gt;.&lt;&#x2F;span&gt;requests&lt;span class=&quot;z-punctuation z-terminator z-rust&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-impl z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;        &lt;span class=&quot;z-storage z-type z-rust&quot;&gt;let&lt;&#x2F;span&gt; lim &lt;span class=&quot;z-keyword z-operator z-assignment z-rust&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-bitwise z-rust&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;n&lt;span class=&quot;z-punctuation z-accessor z-dot z-rust&quot;&gt;.&lt;&#x2F;span&gt;limits&lt;span class=&quot;z-punctuation z-terminator z-rust&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-impl z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-impl z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;        &lt;span class=&quot;z-comment z-line z-double-slash z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-rust&quot;&gt;&#x2F;&#x2F;&lt;&#x2F;span&gt; 1.1 limits &amp;gt;= requests
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-impl z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;        &lt;span class=&quot;z-keyword z-control z-rust&quot;&gt;if&lt;&#x2F;span&gt; req&lt;span class=&quot;z-punctuation z-accessor z-dot z-rust&quot;&gt;.&lt;&#x2F;span&gt;cpu &lt;span class=&quot;z-keyword z-operator z-comparison z-rust&quot;&gt;&amp;gt;&lt;&#x2F;span&gt; lim&lt;span class=&quot;z-punctuation z-accessor z-dot z-rust&quot;&gt;.&lt;&#x2F;span&gt;cpu &lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-rust&quot;&gt;{&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-impl z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;            &lt;span class=&quot;z-support z-macro z-rust&quot;&gt;bail!&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;Requested more CPU than what was limited&lt;span class=&quot;z-punctuation z-definition z-string z-end z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-rust&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-impl z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;        &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-rust&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-impl z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;        &lt;span class=&quot;z-keyword z-control z-rust&quot;&gt;if&lt;&#x2F;span&gt; req&lt;span class=&quot;z-punctuation z-accessor z-dot z-rust&quot;&gt;.&lt;&#x2F;span&gt;memory &lt;span class=&quot;z-keyword z-operator z-comparison z-rust&quot;&gt;&amp;gt;&lt;&#x2F;span&gt; lim&lt;span class=&quot;z-punctuation z-accessor z-dot z-rust&quot;&gt;.&lt;&#x2F;span&gt;memory &lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-rust&quot;&gt;{&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-impl z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;            &lt;span class=&quot;z-support z-macro z-rust&quot;&gt;bail!&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;Requested more memory than what was limited&lt;span class=&quot;z-punctuation z-definition z-string z-end z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-rust&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-impl z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;        &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-rust&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-impl z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;        &lt;span class=&quot;z-comment z-line z-double-slash z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-rust&quot;&gt;&#x2F;&#x2F;&lt;&#x2F;span&gt; 1.2 sanity numbers (based on c5.9xlarge)
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-impl z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;        &lt;span class=&quot;z-keyword z-control z-rust&quot;&gt;if&lt;&#x2F;span&gt; req&lt;span class=&quot;z-punctuation z-accessor z-dot z-rust&quot;&gt;.&lt;&#x2F;span&gt;cpu &lt;span class=&quot;z-keyword z-operator z-comparison z-rust&quot;&gt;&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-float z-rust&quot;&gt;36.&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-float z-rust&quot;&gt;0&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-rust&quot;&gt;{&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-impl z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;            &lt;span class=&quot;z-support z-macro z-rust&quot;&gt;bail!&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;Requested more than 36 cores&lt;span class=&quot;z-punctuation z-definition z-string z-end z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-rust&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-impl z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;        &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-rust&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-impl z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;        &lt;span class=&quot;z-keyword z-control z-rust&quot;&gt;if&lt;&#x2F;span&gt; req&lt;span class=&quot;z-punctuation z-accessor z-dot z-rust&quot;&gt;.&lt;&#x2F;span&gt;memory &lt;span class=&quot;z-keyword z-operator z-comparison z-rust&quot;&gt;&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-float z-rust&quot;&gt;72.&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-float z-rust&quot;&gt;0&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-arithmetic z-rust&quot;&gt;*&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-float z-rust&quot;&gt;1024.&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-float z-rust&quot;&gt;0&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-arithmetic z-rust&quot;&gt;*&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-float z-rust&quot;&gt;1024.&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-float z-rust&quot;&gt;0&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-arithmetic z-rust&quot;&gt;*&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-float z-rust&quot;&gt;1024.&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-float z-rust&quot;&gt;0&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-rust&quot;&gt;{&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-impl z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;            &lt;span class=&quot;z-support z-macro z-rust&quot;&gt;bail!&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;Requested more than 72 GB of memory&lt;span class=&quot;z-punctuation z-definition z-string z-end z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-rust&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-impl z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;        &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-rust&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-impl z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;        &lt;span class=&quot;z-keyword z-control z-rust&quot;&gt;if&lt;&#x2F;span&gt; lim&lt;span class=&quot;z-punctuation z-accessor z-dot z-rust&quot;&gt;.&lt;&#x2F;span&gt;cpu &lt;span class=&quot;z-keyword z-operator z-comparison z-rust&quot;&gt;&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-float z-rust&quot;&gt;36.&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-float z-rust&quot;&gt;0&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-rust&quot;&gt;{&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-impl z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;            &lt;span class=&quot;z-support z-macro z-rust&quot;&gt;bail!&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;CPU limit set to more than 36 cores&lt;span class=&quot;z-punctuation z-definition z-string z-end z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-rust&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-impl z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;        &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-rust&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-impl z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;        &lt;span class=&quot;z-keyword z-control z-rust&quot;&gt;if&lt;&#x2F;span&gt; lim&lt;span class=&quot;z-punctuation z-accessor z-dot z-rust&quot;&gt;.&lt;&#x2F;span&gt;memory &lt;span class=&quot;z-keyword z-operator z-comparison z-rust&quot;&gt;&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-float z-rust&quot;&gt;72.&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-float z-rust&quot;&gt;0&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-arithmetic z-rust&quot;&gt;*&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-float z-rust&quot;&gt;1024.&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-float z-rust&quot;&gt;0&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-arithmetic z-rust&quot;&gt;*&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-float z-rust&quot;&gt;1024.&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-float z-rust&quot;&gt;0&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-arithmetic z-rust&quot;&gt;*&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-float z-rust&quot;&gt;1024.&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-float z-rust&quot;&gt;0&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-rust&quot;&gt;{&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-impl z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;            &lt;span class=&quot;z-support z-macro z-rust&quot;&gt;bail!&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;Memory limit set to more than 72 GB of memory&lt;span class=&quot;z-punctuation z-definition z-string z-end z-rust&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-rust&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-impl z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;        &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-rust&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-impl z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;        &lt;span class=&quot;z-support z-type z-rust&quot;&gt;Ok&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-rust&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-rust&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-impl z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-meta z-function z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;    &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-rust&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-rust&quot;&gt;&lt;span class=&quot;z-meta z-impl z-rust&quot;&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-block z-rust&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-rust&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Ultimately, the &lt;code&gt;Resources&lt;&#x2F;code&gt; struct above was attached straight onto to the core &lt;code&gt;Manifest&lt;&#x2F;code&gt; struct (representing the microservice defn above). Devs would write standard resources and be generally unaware of the constraints until they were violated:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;yaml&quot; class=&quot;language-yaml z-code&quot;&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;resources&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;  &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;requests&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;    &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;cpu&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;100m&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;    &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;memory&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;100Mi&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;  &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;limits&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;    &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;cpu&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;300m&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;    &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;memory&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;300Mi&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;In this case, the syntax matches the Kubernetes API directly - and this was preferred - but had extra validation.&lt;&#x2F;p&gt;
&lt;p&gt;We did plan on moving validation to a more declarative format (like &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.openpolicyagent.org&#x2F;&quot;&gt;OPAs&lt;&#x2F;a&gt;) down the line, but there was no rush; this worked.&lt;&#x2F;p&gt;
&lt;p&gt;All of the syntax ended up in &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;shipcat&#x2F;tree&#x2F;master&#x2F;shipcat_definitions&#x2F;src&quot;&gt;shipcat&#x2F;structs&lt;&#x2F;a&gt; - and required developer code-review to modify since it could affect the whole platform.&lt;&#x2F;p&gt;
&lt;p&gt;Once a new version of &lt;code&gt;shipcat&lt;&#x2F;code&gt; was released, we bumped a pin for it in a &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;shipcat&#x2F;blob&#x2F;master&#x2F;examples&quot;&gt;configuration management monorepo with all the manifests&lt;&#x2F;a&gt;, and the new syntax + feature become available for the whole company.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;cli-usage&quot;&gt;CLI Usage&lt;&#x2F;h2&gt;
&lt;p&gt;Developers could check that their manifests pass validation rules locally, or wait for pre-merge validation on CI:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; class=&quot;language-sh z-code&quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;shipcat&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; validate myapp &lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-begin z-shell&quot;&gt;#&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt; lint&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;shipcat&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; template myapp &lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-begin z-shell&quot;&gt;#&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt; generate template output&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;the last being roughly equivalent to:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; class=&quot;language-sh z-code&quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;shipcat&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; values myapp&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-logical z-pipe z-shell&quot;&gt;|&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;helm&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; template charts&#x2F;base&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;We did always lean on helm charts for templating yaml, but this was always an implementation detail that only a handful of engineers needed to touch as we followed the &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=HzJ9ycX1h0c&quot;&gt;one chart to rule them all approach&lt;&#x2F;a&gt;. Templates were also linted heavily with &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;garethr&#x2F;kubeva&quot;&gt;&lt;code&gt;kubeval&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; against all services in all regions during chart upgrades.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;kubernetes-usage&quot;&gt;Kubernetes Usage&lt;&#x2F;h2&gt;
&lt;p&gt;We had wrappers around the normal &lt;code&gt;shipcat template myapp | kubectl X&lt;&#x2F;code&gt; pipeline:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; class=&quot;language-sh z-code&quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;shipcat&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; diff myapp &lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-begin z-shell&quot;&gt;#&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt; diff templated yaml against current cluster&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;shipcat&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; apply myapp &lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-begin z-shell&quot;&gt;#&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt; kubectl apply the template - providing a diff and a progress bar&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;We didn&#x27;t really apply locally except when doing local testing, but we could. There was a &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;shipcat&#x2F;blob&#x2F;master&#x2F;shipcat_cli&#x2F;src&#x2F;auth.rs&quot;&gt;glorified kubernetes context switcher&lt;&#x2F;a&gt; that ensured we were pointing to the correct vault for the cluster, so it was pretty easy to test on and get accurate diffs.&lt;&#x2F;p&gt;
&lt;p&gt;The upgrade was much nicer than any other CLI that existed at the time, it &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;shipcat&#x2F;blob&#x2F;669bbb8408ea5b3c93582774b021aebb12c2a970&#x2F;shipcat_cli&#x2F;src&#x2F;track.rs#L415-L508&quot;&gt;tracked upgrades with deployment-replica progress bars&lt;&#x2F;a&gt;, &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;shipcat&#x2F;blob&#x2F;669bbb8408ea5b3c93582774b021aebb12c2a970&#x2F;shipcat_cli&#x2F;src&#x2F;apply.rs#L312-L335&quot;&gt;bubbled up errors, captured error logs from crashing pods&lt;&#x2F;a&gt;, &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;shipcat&#x2F;blob&#x2F;669bbb8408ea5b3c93582774b021aebb12c2a970&#x2F;shipcat_cli&#x2F;src&#x2F;apply.rs#L262-L291&quot;&gt;provided inline diffs pre-upgrade&lt;&#x2F;a&gt;, gated on validation, sent &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;shipcat&#x2F;blob&#x2F;669bbb8408ea5b3c93582774b021aebb12c2a970&#x2F;shipcat_cli&#x2F;src&#x2F;slack.rs#L138-L255&quot;&gt;successful rollout notifications&lt;&#x2F;a&gt; to maintainers on slack.&lt;&#x2F;p&gt;
&lt;p&gt;CI actually used this apply setup and &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;shipcat&#x2F;blob&#x2F;669bbb8408ea5b3c93582774b021aebb12c2a970&#x2F;shipcat_cli&#x2F;src&#x2F;cluster.rs#L192-L221&quot;&gt;reconciled the whole cluster&lt;&#x2F;a&gt; in parallel using async rust with &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;futures&#x2F;latest&#x2F;futures&#x2F;stream&#x2F;trait.StreamExt.html#method.buffer_unordered&quot;&gt;&lt;code&gt;StreamExt::buffer_unordered&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; class=&quot;language-sh z-code&quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;shipcat&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; cluster helm reconcile&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;this help avoid the numerous tiller bugs and actually let us define a sensible amount of time to wait for a deployment to complete (there&#x27;s an &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;shipcat&#x2F;blob&#x2F;669bbb8408ea5b3c93582774b021aebb12c2a970&#x2F;shipcat_definitions&#x2F;src&#x2F;math.rs#L79-L109&quot;&gt;algorithm in there for it&lt;&#x2F;a&gt;).&lt;&#x2F;p&gt;
&lt;p&gt;In the end, we almost turned it into a CD controller, but in an awkward clash of new and old tech, we just ran the above reconcile command on jenkins every 5m lol.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;at the time &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;helm&#x2F;community&#x2F;blob&#x2F;master&#x2F;helm-v3&#x2F;000-helm-v3.md&quot;&gt;helm 3 was planning to architect away tiller entirely&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;The dev ergonomics was one of its biggest selling points (and possibly prevented a revolt against a ops-led + mandated tool). In my later jobs, achieving a similar level of dev ergonomics would take multiple microservices talking to flux.&lt;&#x2F;p&gt;
&lt;p&gt;Perhaps all this does not seem that impressive now, but it helps if you have visited that &lt;strong&gt;precise layer of hell&lt;&#x2F;strong&gt; that &lt;code&gt;helm 2&lt;&#x2F;code&gt; dominated. It had such a painful and broken CD flow.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;&#x2F;h2&gt;
&lt;p&gt;Looking back at this, it&#x27;s a kind of wild everything-CLI. It accomplished the goal though. It moved fast, but did so safely. It was not universally well-received, but most of the people who complained about it early on later came to me later to say &quot;i don&#x27;t know how else we could have done this&quot;.&lt;&#x2F;p&gt;
&lt;p&gt;It also let us build a quick and simple service-registry on top of the service spec (there&#x27;s a controller called &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;shipcat&#x2F;tree&#x2F;master&#x2F;raftcat&quot;&gt;raftcat&lt;&#x2F;a&gt; that cross-linked to all the tools we used for each service).&lt;&#x2F;p&gt;
&lt;p&gt;Ultimately, it&#x27;s not a tool most people know about, or at the very least not very well understood, and this makes sense. It was ultimately tied to babylon&#x27;s platform. Why would you tell people about this, if not except out of interest? The more surprising nail in that coffin was in late 2022, when it was &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;babylonhealth&#x2F;shipcat&quot;&gt;made private from its repo&lt;&#x2F;a&gt; without much ceremony. Now only my &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;shipcat&quot;&gt;safety fork&lt;&#x2F;a&gt; remains. Similar &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;techcrunch.com&#x2F;2023&#x2F;08&#x2F;31&#x2F;the-fall-of-babylon-failed-tele-health-startup-once-valued-at-nearly-2b-goes-bankrupt-and-sold-for-parts&#x2F;&quot;&gt;unravellings later happened to the company&lt;&#x2F;a&gt;, but unfortunately you cannot safety fork your share value.&lt;&#x2F;p&gt;
&lt;details&gt;&lt;summary style=&quot;cursor:pointer&quot;&gt;&lt;b&gt;Original Presentation&lt;&#x2F;b&gt;&lt;&#x2F;summary&gt;
&lt;p&gt;
For anyone super interested, there is also our original talk: &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=FvKQP7Qnfuc&quot;&gt;Babylon Health - Leveraging Kubernetes for global scale&lt;&#x2F;a&gt;
from DoxLon2018 that provides some context.
&lt;p&gt;Don&#x27;t make me watch it again though.&lt;&#x2F;p&gt;
&lt;&#x2F;p&gt;
&lt;&#x2F;details&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Colemak Switchover</title>
        <published>2013-03-20T00:00:00+00:00</published>
        <updated>2023-09-30T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://clux.dev/post/2013-03-20-colemak-switchover/"/>
        <id>https://clux.dev/post/2013-03-20-colemak-switchover/</id>
        
        <content type="html" xml:base="https://clux.dev/post/2013-03-20-colemak-switchover/">&lt;p&gt;&lt;img src=&quot;&#x2F;imgs&#x2F;colemak.png&quot; alt=&quot;colemak finger layout&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;QWERTY sucks. You always learn it wrong, it&#x27;s optimized for not jamming your typewriters, and it&#x27;s got a bunch of history with shortcut keys.&lt;&#x2F;p&gt;
&lt;p&gt;My brother started using &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;http:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Dvorak_Simplified_Keyboard#Comparison_of_the_QWERTY_and_Dvorak_layouts&quot;&gt;DVORAK&lt;&#x2F;a&gt; (a similarly unconventional layout) which aims to reduce the number of awkward finger movements using analysis of language and layout experimentations. My problem with DVORAK is that they moved important shortcut keys like &lt;code&gt;X&lt;&#x2F;code&gt;, &lt;code&gt;C&lt;&#x2F;code&gt;, &lt;code&gt;W&lt;&#x2F;code&gt;, &lt;code&gt;Q&lt;&#x2F;code&gt;, &lt;code&gt;S&lt;&#x2F;code&gt; and &lt;code&gt;T&lt;&#x2F;code&gt; so far away from left &lt;code&gt;CTRL&lt;&#x2F;code&gt; that the benefit disappeared. That was a deal-breaker. So while my brother was very happy with his new DVORAK wpm (that hugely improved on his actually dyslexic QWERTY speed), my attachment to passwords kept me hesitating.&lt;&#x2F;p&gt;
&lt;p&gt;Eventually, I figured out that you can bind &lt;code&gt;Alt-Shift&lt;&#x2F;code&gt; (on WIN and Linux) to change back to QWERTY for pattern-based passwords. This was the missing ingredient that allowed a smooth migration.&lt;&#x2F;p&gt;
&lt;p&gt;The change was hard initially, but after two months, I had caught up with my old QWERTY speed, and at that point everything felt effortless.&lt;&#x2F;p&gt;
&lt;p&gt;So, what to expect? Take a &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;http:&#x2F;&#x2F;hi-games.net&#x2F;typing-test&#x2F;&quot;&gt;2 minute typing test&lt;&#x2F;a&gt;. I used to get around &lt;code&gt;85&lt;&#x2F;code&gt; before the switch after years and years of use. It took me 2 months to tie that, and now, 2 years after the switch, I have crossed the 100 average mark - and all my fingers are in use!&lt;&#x2F;p&gt;
&lt;p&gt;The unusual choice never caused me any real problems, but my QWERTY speed obviouly suffered. The biggest downside is just the amount of time it takes for you hands to get used to it. If you are already typing badly on QWERTY, then go for it; kill two birds with one stone. You have to unlearn your current QWERTY anyway.&lt;&#x2F;p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Time Since Change&lt;&#x2F;th&gt;&lt;th&gt;Average Trial English Typing Speed&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;2w&lt;&#x2F;td&gt;&lt;td&gt;60 wpm&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;2mo&lt;&#x2F;td&gt;&lt;td&gt;80 wpm&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;6mo&lt;&#x2F;td&gt;&lt;td&gt;90 wpm&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;2y&lt;&#x2F;td&gt;&lt;td&gt;100 wpm&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;p&gt;&lt;strong&gt;Records&lt;&#x2F;strong&gt;: 102wpm on the hi-games 2 minute typing test, 120wpm on typeracer. Nothing amazing, but decidedly very respectable.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;2023-update&quot;&gt;2023 Update&lt;&#x2F;h2&gt;
&lt;p&gt;After more than a decade using it, I&#x27;m still very happy with it, and never had any RSI like symptomps despite lots of long evenings programming.&lt;&#x2F;p&gt;
&lt;p&gt;Should you do this? Eh. Maybe. There are many yaks in the world, but I don&#x27;t regret shaving this. Maybe &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;workmanlayout.org&#x2F;&quot;&gt;Workman-P&lt;&#x2F;a&gt; would have been my choice had I changed today.&lt;&#x2F;p&gt;
&lt;p&gt;Lastly, not to be underestimated is the added bonus of confusing everyone who tries to type on my computer. They will type in a few cool commands with their complete control of QWERTY, but it will of course come out as gibberish.&lt;&#x2F;p&gt;
&lt;p&gt;This last quote was part of the original post, and would like to highlight that this is still true:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;I may not know a whole lot about debugging C yet, but at least I can use this really annoying keyboard layout.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Tournament Seeding Placement</title>
        <published>2011-03-20T00:00:00+00:00</published>
        <updated>2018-12-09T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://clux.dev/post/2011-03-20-tournament-seeding-placement/"/>
        <id>https://clux.dev/post/2011-03-20-tournament-seeding-placement/</id>
        
        <content type="html" xml:base="https://clux.dev/post/2011-03-20-tournament-seeding-placement/">&lt;p&gt;A particularly tricky problem with tournament scheduling that made it into &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;duel&quot;&gt;tournament&#x2F;duel&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;This turned out to take a little more mental effort than initially expected and is documented herein for historical reasons.&lt;&#x2F;p&gt;
&lt;p&gt;The problem of how to order seeds into the tournament brackets seemed almost a bit random. But after some hours on the couch with pen and paper and &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;http:&#x2F;&#x2F;beta.ivc.no&#x2F;blog&#x2F;&quot;&gt;ivc&lt;&#x2F;a&gt; to talk to, we found a sensible solution.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;intro&quot;&gt;Intro&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;imgs&#x2F;seeding&#x2F;blizzcon_single_duel_8p.webp&quot; alt=&quot;System from BlizzCon (n=3)&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The seeding is the correspondence ${p \mid player} \leftrightarrow {1,2,\ldots,2^n}$ where the number $k(p)\in{1,2,\ldots,2^n}$ is the estimated ranking for player $p$, i.e. player $p$ is expected to beat player $q$ if and only if $k(p) &amp;gt; k(q)$. The main problem is how to sort the players in the first round so that the the best players meet as late as possible (depending on their skill) in the tournament. The image below illustrates this for $2^3$ players. Formally we say:&lt;&#x2F;p&gt;
&lt;h2 id=&quot;definitions&quot;&gt;Definitions&lt;&#x2F;h2&gt;
&lt;p&gt;If there are $2^n$ players in the tournament then the ordering is &lt;em&gt;proper&lt;&#x2F;em&gt; if the following hold.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;If the seeding is perfect (perfectly predicts the match outcomes) then only the $2^{n+1-k}$ top seeded players are left in round $k$.&lt;&#x2F;li&gt;
&lt;li&gt;In each round the sum of the seeds in each match is constant.&lt;&#x2F;li&gt;
&lt;li&gt;The even seed in each match is placed at the bottom.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;imgs&#x2F;seeding&#x2F;bracket8.webp&quot; alt=&quot;canonical n=3 bracket&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;It&#x27;s a bit much to assume that seedings are perfect, but the seeding above needs these three conditions to generate the analogous binary tree in $n$ dimensions, so we will use them. Besides, condition 2 does sort of provide some loose similar quality guarantee: the lower the sum, the most likely the better the games. The image above fills out what will happen in an eight player tournament if the seeding is perfect.&lt;&#x2F;p&gt;
&lt;p&gt;Knowing that it was these three properties that we wanted, we could at this point just generated the next level in the canonical tree successively until we got to the desired level to (i.e. make an arbitrarily large tournament system), but this would have been inefficient and a bit tedious (compared to finding patterns in numbers at paper, but that might be subjective). I tried first to find a system in the sequence ${(1),(1,2),(1,4,3,2),(1,8,5,4,3,6,7,2),\ldots}$, but this turned out to be very fruitless. Having ivc over, I explained the problem to him and we stared at it for a couple of hours (because that&#x27;s just the kind of inviting friend I am).&lt;&#x2F;p&gt;
&lt;p&gt;Turns out the key was to look at the match numbers $1,\ldots,2^{n-1}$ by ordering from the top in the brackets. I.e. match 1 is 1 vs. 8, match 2 is 5 vs. 4 etc. The major clue here is that in a match number that is a power of two, the even numbered seed in that match is also a power of two. In fact match $2^k \mapsto 2^{n-k}$, so the hard part is interpolating this function for general match numbers.&lt;&#x2F;p&gt;
&lt;p&gt;The system becomes clear first when we look at a full 32 player tournament i.e. $n=5$. In the interests of fully testing out the $\LaTeX$, I would ideally write this out, but tables are a bit of a pain in TeX, and I have this paper anyway.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;imgs&#x2F;seeding&#x2F;32bracket.webp&quot; alt=&quot;canonical n=5 bracket&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;This is expanded uniquely using the three defined properties and the smaller bracket above. The match numbers in the first round are written on the left. Notice that the top players all follow diagonal paths when they reach vastly inferior players.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;imgs&#x2F;seeding&#x2F;16system.webp&quot; alt=&quot;system for n=5&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The system comes from decomposing the match number $i$ as $i=2^k + l$ where $k = \lfloor \log_2{i} \rfloor$. If we write the even seed as powers of two then they display a binary counting system going up between match numbers that are powers of two. In fact, it&#x27;s the binary representation of $i-2l$ that is required, so let $c_j = bit_j (i-2l)$. We can then verify the final function (sending match number to the even seed in that match).&lt;&#x2F;p&gt;
&lt;p&gt;$$2^k + l \mapsto \begin{cases} 2^{n-k},&amp;amp; \text{if $l=0$} \\ 2^{n-k-1}+2^n \sum_{j=1} 2^{-j}c_j,&amp;amp; \text{if $0 &amp;lt; l &amp;lt; 2^k$.}\end{cases}$$&lt;&#x2F;p&gt;
&lt;h2 id=&quot;python-code&quot;&gt;Python code&lt;&#x2F;h2&gt;
&lt;pre data-lang=&quot;python&quot; class=&quot;language-python z-code&quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function z-python&quot;&gt;&lt;span class=&quot;z-storage z-type z-function z-python&quot;&gt;&lt;span class=&quot;z-keyword z-declaration z-function z-python&quot;&gt;def&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;even_seed_from_match_nr&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-python&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-python&quot;&gt;i&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-parameters z-python&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-parameter z-python&quot;&gt;n&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-function z-begin z-python&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-comment z-line z-number-sign z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-python&quot;&gt;#&lt;&#x2F;span&gt; match_nr, log2(participants)
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;    &lt;span class=&quot;z-comment z-line z-number-sign z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-python&quot;&gt;#&lt;&#x2F;span&gt;decompose i = 2^k + r where 0 &amp;lt;= r &amp;lt; 2^k
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;    &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;k&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-python&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-support z-type z-python&quot;&gt;int&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;math&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-python&quot;&gt;.&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;floor&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;math&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-python&quot;&gt;.&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;log&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;i&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-arguments z-python&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-python&quot;&gt;2&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;    &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;r&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-python&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;i&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-arithmetic z-python&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-group z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-python&quot;&gt;1&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-comparison z-python&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-comparison z-python&quot;&gt;&amp;lt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;k&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;    &lt;span class=&quot;z-meta z-statement z-conditional z-if z-python&quot;&gt;&lt;span class=&quot;z-keyword z-control z-conditional z-if z-python&quot;&gt;if&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-group z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;r&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-comparison z-python&quot;&gt;==&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-python&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-block z-conditional z-if z-python&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-control z-flow z-return z-python&quot;&gt;return&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-python&quot;&gt;1&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-comparison z-python&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-comparison z-python&quot;&gt;&amp;lt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;n&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-arithmetic z-python&quot;&gt;-&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;k&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;    &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;nr&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-python&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-support z-function z-builtin z-python&quot;&gt;bin&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;i&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-arithmetic z-python&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-python&quot;&gt;2&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-arithmetic z-python&quot;&gt;*&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;r&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-brackets z-begin z-python&quot;&gt;[&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-arguments z-python&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-python&quot;&gt;2&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-slice z-python&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-brackets z-end z-python&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-brackets z-begin z-python&quot;&gt;[&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-slice z-python&quot;&gt;:&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-slice z-python&quot;&gt;:&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-arithmetic z-python&quot;&gt;-&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-python&quot;&gt;1&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-brackets z-end z-python&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;    &lt;span class=&quot;z-keyword z-control z-flow z-return z-python&quot;&gt;return&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-support z-type z-python&quot;&gt;int&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;nr&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-arguments z-python&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-python&quot;&gt;2&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-comparison z-python&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-comparison z-python&quot;&gt;&amp;lt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;n&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-arithmetic z-python&quot;&gt;-&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-support z-function z-builtin z-python&quot;&gt;len&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;nr&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-arithmetic z-python&quot;&gt;|&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-python&quot;&gt;1&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-comparison z-python&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-comparison z-python&quot;&gt;&amp;lt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;n&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-arithmetic z-python&quot;&gt;-&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;k&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-arithmetic z-python&quot;&gt;-&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-python&quot;&gt;1&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;One of the crazier things I have written in python. And as such, it needs a few notes, especially on the non-zero r (denoted as l earlier in doc) case: &lt;code&gt;nr = binary(i-2*r)&lt;&#x2F;code&gt; reversed (remove leading 0b part of string first). Then shift &lt;code&gt;n-k&lt;&#x2F;code&gt; and add in leading term. However, nr should be k bits, so we need to shift more if not (when reversing leading become trailing) so must shift extra &lt;code&gt;len(nr)-k&lt;&#x2F;code&gt; bits. Without the compensation for extra zeroes the return wouldve looked like this: &lt;code&gt;return int(bin(i-2*r)[2:][::-1],2) &amp;lt;&amp;lt; n-k | 1 &amp;lt;&amp;lt; n-k-1&lt;&#x2F;code&gt;. Insane.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;note-from-years-later&quot;&gt;Note from years later&lt;&#x2F;h2&gt;
&lt;p&gt;This provided a part of my open source &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clux&#x2F;duel&quot;&gt;duel tournament&lt;&#x2F;a&gt; library.&lt;&#x2F;p&gt;
&lt;p&gt;The code that deals with this particular bit now looks like this:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;js&quot; class=&quot;language-js z-code&quot;&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;z-source z-ts&quot;&gt;&lt;span class=&quot;z-meta z-var z-expr z-ts&quot;&gt;&lt;span class=&quot;z-storage z-type z-ts&quot;&gt;var&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-var-single-variable z-expr z-ts&quot;&gt;&lt;span class=&quot;z-meta z-definition z-variable z-ts&quot;&gt;&lt;span class=&quot;z-entity z-name z-function z-ts&quot;&gt;evenSeed&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-ts&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function z-expression z-ts&quot;&gt;&lt;span class=&quot;z-storage z-type z-function z-ts&quot;&gt;function&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-parameters z-ts&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameters z-begin z-ts&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-parameter z-ts&quot;&gt;i&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-parameter z-ts&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-parameter z-ts&quot;&gt;p&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-parameters z-end z-ts&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-block z-ts&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-block z-ts&quot;&gt;{&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ts&quot;&gt;&lt;span class=&quot;z-meta z-var z-expr z-ts&quot;&gt;&lt;span class=&quot;z-meta z-function z-expression z-ts&quot;&gt;&lt;span class=&quot;z-meta z-block z-ts&quot;&gt;  &lt;span class=&quot;z-meta z-var z-expr z-ts&quot;&gt;&lt;span class=&quot;z-storage z-type z-ts&quot;&gt;var&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-var-single-variable z-expr z-ts&quot;&gt;&lt;span class=&quot;z-meta z-definition z-variable z-ts&quot;&gt;&lt;span class=&quot;z-variable z-other z-readwrite z-ts&quot;&gt;k&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-ts&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-ts&quot;&gt;&lt;span class=&quot;z-support z-constant z-math z-ts&quot;&gt;Math&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-ts&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-function z-math z-ts&quot;&gt;floor&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-brace z-round z-ts&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-ts&quot;&gt;&lt;span class=&quot;z-support z-constant z-math z-ts&quot;&gt;Math&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-ts&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-function z-math z-ts&quot;&gt;log&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-brace z-round z-ts&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-readwrite z-ts&quot;&gt;i&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-brace z-round z-ts&quot;&gt;)&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-arithmetic z-ts&quot;&gt;&#x2F;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-ts&quot;&gt;&lt;span class=&quot;z-support z-constant z-math z-ts&quot;&gt;Math&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-ts&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-function z-math z-ts&quot;&gt;log&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-brace z-round z-ts&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-decimal z-ts&quot;&gt;2&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-brace z-round z-ts&quot;&gt;)&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-brace z-round z-ts&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ts&quot;&gt;&lt;span class=&quot;z-meta z-var z-expr z-ts&quot;&gt;&lt;span class=&quot;z-meta z-function z-expression z-ts&quot;&gt;&lt;span class=&quot;z-meta z-block z-ts&quot;&gt;    &lt;span class=&quot;z-punctuation z-separator z-comma z-ts&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-readwrite z-ts&quot;&gt;r&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-ts&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-readwrite z-ts&quot;&gt;i&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-arithmetic z-ts&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-ts&quot;&gt;&lt;span class=&quot;z-support z-constant z-math z-ts&quot;&gt;Math&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-ts&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-function z-math z-ts&quot;&gt;pow&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-brace z-round z-ts&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-decimal z-ts&quot;&gt;2&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-comma z-ts&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-readwrite z-ts&quot;&gt;k&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-brace z-round z-ts&quot;&gt;)&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-statement z-ts&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ts&quot;&gt;&lt;span class=&quot;z-meta z-var z-expr z-ts&quot;&gt;&lt;span class=&quot;z-meta z-function z-expression z-ts&quot;&gt;&lt;span class=&quot;z-meta z-block z-ts&quot;&gt;  &lt;span class=&quot;z-keyword z-control z-conditional z-ts&quot;&gt;if&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-brace z-round z-ts&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-readwrite z-ts&quot;&gt;r&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-comparison z-ts&quot;&gt;===&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-decimal z-ts&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-brace z-round z-ts&quot;&gt;)&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-block z-ts&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-block z-ts&quot;&gt;{&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ts&quot;&gt;&lt;span class=&quot;z-meta z-var z-expr z-ts&quot;&gt;&lt;span class=&quot;z-meta z-function z-expression z-ts&quot;&gt;&lt;span class=&quot;z-meta z-block z-ts&quot;&gt;&lt;span class=&quot;z-meta z-block z-ts&quot;&gt;    &lt;span class=&quot;z-keyword z-control z-flow z-ts&quot;&gt;return&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-ts&quot;&gt;&lt;span class=&quot;z-support z-constant z-math z-ts&quot;&gt;Math&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-ts&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-function z-math z-ts&quot;&gt;pow&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-brace z-round z-ts&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-decimal z-ts&quot;&gt;2&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-comma z-ts&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-readwrite z-ts&quot;&gt;p&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-arithmetic z-ts&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-readwrite z-ts&quot;&gt;k&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-brace z-round z-ts&quot;&gt;)&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-statement z-ts&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ts&quot;&gt;&lt;span class=&quot;z-meta z-var z-expr z-ts&quot;&gt;&lt;span class=&quot;z-meta z-function z-expression z-ts&quot;&gt;&lt;span class=&quot;z-meta z-block z-ts&quot;&gt;&lt;span class=&quot;z-meta z-block z-ts&quot;&gt;  &lt;span class=&quot;z-punctuation z-definition z-block z-ts&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ts&quot;&gt;&lt;span class=&quot;z-meta z-var z-expr z-ts&quot;&gt;&lt;span class=&quot;z-meta z-function z-expression z-ts&quot;&gt;&lt;span class=&quot;z-meta z-block z-ts&quot;&gt;  &lt;span class=&quot;z-meta z-var z-expr z-ts&quot;&gt;&lt;span class=&quot;z-storage z-type z-ts&quot;&gt;var&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-var-single-variable z-expr z-ts&quot;&gt;&lt;span class=&quot;z-meta z-definition z-variable z-ts&quot;&gt;&lt;span class=&quot;z-variable z-other z-readwrite z-ts&quot;&gt;nr&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-ts&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-brace z-round z-ts&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-readwrite z-ts&quot;&gt;i&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-arithmetic z-ts&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-decimal z-ts&quot;&gt;2&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-arithmetic z-ts&quot;&gt;*&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-readwrite z-ts&quot;&gt;r&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-brace z-round z-ts&quot;&gt;)&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-ts&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-ts&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-function z-ts&quot;&gt;toString&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-brace z-round z-ts&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-decimal z-ts&quot;&gt;2&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-brace z-round z-ts&quot;&gt;)&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-ts&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-ts&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-function z-ts&quot;&gt;split&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-brace z-round z-ts&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-single z-ts&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-ts&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-ts&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-brace z-round z-ts&quot;&gt;)&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-ts&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-ts&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-function z-ts&quot;&gt;reverse&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-brace z-round z-ts&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-brace z-round z-ts&quot;&gt;)&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-ts&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-ts&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-function z-ts&quot;&gt;join&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-brace z-round z-ts&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-single z-ts&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-ts&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-ts&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-brace z-round z-ts&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-statement z-ts&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ts&quot;&gt;&lt;span class=&quot;z-meta z-var z-expr z-ts&quot;&gt;&lt;span class=&quot;z-meta z-function z-expression z-ts&quot;&gt;&lt;span class=&quot;z-meta z-block z-ts&quot;&gt;  &lt;span class=&quot;z-keyword z-control z-flow z-ts&quot;&gt;return&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-brace z-round z-ts&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-ts&quot;&gt;&lt;span class=&quot;z-support z-function z-ts&quot;&gt;parseInt&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-brace z-round z-ts&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-readwrite z-ts&quot;&gt;nr&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-comma z-ts&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-decimal z-ts&quot;&gt;2&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-brace z-round z-ts&quot;&gt;)&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-bitwise z-shift z-ts&quot;&gt;&amp;lt;&amp;lt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-readwrite z-ts&quot;&gt;p&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-arithmetic z-ts&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-object z-ts&quot;&gt;nr&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-ts&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-variable z-property z-ts&quot;&gt;length&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-brace z-round z-ts&quot;&gt;)&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-arithmetic z-ts&quot;&gt;+&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-ts&quot;&gt;&lt;span class=&quot;z-support z-constant z-math z-ts&quot;&gt;Math&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-ts&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-function z-math z-ts&quot;&gt;pow&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-brace z-round z-ts&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-decimal z-ts&quot;&gt;2&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-comma z-ts&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-readwrite z-ts&quot;&gt;p&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-arithmetic z-ts&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-readwrite z-ts&quot;&gt;k&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-arithmetic z-ts&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-decimal z-ts&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-brace z-round z-ts&quot;&gt;)&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-statement z-ts&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ts&quot;&gt;&lt;span class=&quot;z-meta z-var z-expr z-ts&quot;&gt;&lt;span class=&quot;z-meta z-function z-expression z-ts&quot;&gt;&lt;span class=&quot;z-meta z-block z-ts&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-block z-ts&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-statement z-ts&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Still as &lt;strong&gt;confusing&lt;&#x2F;strong&gt; (if it wasn&#x27;t for this accompanying blog post).&lt;&#x2F;p&gt;
&lt;p&gt;There&#x27;s probably a more elegant method to be deduced.
The method here is just emulating the pattern we see in the binary representation after all. Still, funny what you can do with strings and patterns.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Vault of Therayne</title>
        <published>2006-08-09T00:00:00+00:00</published>
        <updated>2006-08-09T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://clux.dev/post/2006-08-09-vault-of-therayne/"/>
        <id>https://clux.dev/post/2006-08-09-vault-of-therayne/</id>
        
        <content type="html" xml:base="https://clux.dev/post/2006-08-09-vault-of-therayne/">&lt;p&gt;An easter egg and puzzle solution for &lt;code&gt;Dungeon Siege 2 Broken World&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
 
&lt;img src=&quot;https:&#x2F;&#x2F;clux.dev&#x2F;imgs&#x2F;therayne&#x2F;overview1.jpg&quot; alt=&quot;overview1&quot; width=&quot;363&quot; height=&quot;205&quot; loading=&quot;lazy&quot; &#x2F;&gt;
&lt;p&gt;After doing the first two rooms of the Treasure Hunt quest, you can attempt two additional puzzles of the same type, but these are ridiculously hard. If you made the second one, you have no doubt noticed that these are much trickier than the general lightning reflection puzzle in the original DS2. The third is manageable with a good dose of trial and error - still more than expected for an otherwise mindless hack&#x27;n slash game - but the last one is almost impossible.&lt;&#x2F;p&gt;
&lt;p&gt;So I present a mathematical way to solve it. First three solutions are included for completeness, the method used is at the end.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;r1-square&quot;&gt;R1: Square&lt;&#x2F;h2&gt;
&lt;p&gt;Click each node once.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;r2-square-square&quot;&gt;R2: Square + Square&lt;&#x2F;h2&gt;
&lt;p&gt; 
&lt;img src=&quot;https:&#x2F;&#x2F;clux.dev&#x2F;imgs&#x2F;therayne&#x2F;overview2.jpg&quot; alt=&quot;overview2&quot; width=&quot;469&quot; height=&quot;313&quot; loading=&quot;lazy&quot; &#x2F;&gt;

 
&lt;img src=&quot;https:&#x2F;&#x2F;clux.dev&#x2F;imgs&#x2F;therayne&#x2F;square-diagram.gif&quot; alt=&quot;square-diagram&quot; width=&quot;204&quot; height=&quot;189&quot; loading=&quot;lazy&quot; &#x2F;&gt;
&lt;&#x2F;p&gt;
&lt;p&gt;Click nodes $A,C,F,H$ once, in whatever order.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;r3-octagon-square&quot;&gt;R3: Octagon + Square&lt;&#x2F;h2&gt;
&lt;p&gt; 
&lt;img src=&quot;https:&#x2F;&#x2F;clux.dev&#x2F;imgs&#x2F;therayne&#x2F;overview3.jpg&quot; alt=&quot;overview3&quot; width=&quot;598&quot; height=&quot;382&quot; loading=&quot;lazy&quot; &#x2F;&gt;

 
&lt;img src=&quot;https:&#x2F;&#x2F;clux.dev&#x2F;imgs&#x2F;therayne&#x2F;octagon-diagram.gif&quot; alt=&quot;octagon-diagram&quot; width=&quot;272&quot; height=&quot;265&quot; loading=&quot;lazy&quot; &#x2F;&gt;
&lt;&#x2F;p&gt;
&lt;p&gt;Found two solutions here; one from trial and error:
$B,E,G,I,J,K,L$&lt;&#x2F;p&gt;
&lt;p&gt;While this came out of mathematica:
$B,C,D,G,I,K,L$&lt;&#x2F;p&gt;
&lt;h2 id=&quot;r4-dodecagon-square&quot;&gt;R4: Dodecagon + Square&lt;&#x2F;h2&gt;
&lt;p&gt;The one that necessitated math.&lt;&#x2F;p&gt;
&lt;p&gt; 
&lt;img src=&quot;https:&#x2F;&#x2F;clux.dev&#x2F;imgs&#x2F;therayne&#x2F;overview4.jpg&quot; alt=&quot;overview4&quot; width=&quot;600&quot; height=&quot;388&quot; loading=&quot;lazy&quot; &#x2F;&gt;

 
&lt;img src=&quot;https:&#x2F;&#x2F;clux.dev&#x2F;imgs&#x2F;therayne&#x2F;dodecagon-diagram.gif&quot; alt=&quot;dodecagon-diagram&quot; width=&quot;275&quot; height=&quot;275&quot; loading=&quot;lazy&quot; &#x2F;&gt;
&lt;&#x2F;p&gt;
&lt;p&gt;Derived solution: $B,E,F,G,I,J,K,N,O$&lt;&#x2F;p&gt;
&lt;p&gt;Developer solution: $B,C,D,E,G,K,P$&lt;&#x2F;p&gt;
&lt;p&gt;Pick one, and press each node once in any order.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;method&quot;&gt;Method&lt;&#x2F;h2&gt;
&lt;p&gt;Every block must be inverted an odd number of times, and since inverting twice is the same as not doing anything, these operations are equivalent to addition mod 2.&lt;&#x2F;p&gt;
&lt;p&gt;Each row $j$ in matrix $\mathbf{V}$ represents which lights are inverted by $f(j)$.
For instance: $f(A)$ inverts A, L, M, O, and P (as shown in the diagram), which is the first row in V.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;cpp&quot; class=&quot;language-cpp z-code&quot;&gt;&lt;code class=&quot;language-cpp&quot; data-lang=&quot;cpp&quot;&gt;&lt;span class=&quot;z-source z-c++&quot;&gt;V&lt;span class=&quot;z-keyword z-operator z-assignment z-c&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-block z-c++&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-c++&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-block z-c++&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-c++&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-c++&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-c++&quot;&gt;&lt;span class=&quot;z-meta z-block z-c++&quot;&gt;  &lt;span class=&quot;z-meta z-block z-c++&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-c++&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-c++&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-c++&quot;&gt;&lt;span class=&quot;z-meta z-block z-c++&quot;&gt;  &lt;span class=&quot;z-meta z-block z-c++&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-c++&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-c++&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-c++&quot;&gt;&lt;span class=&quot;z-meta z-block z-c++&quot;&gt;  &lt;span class=&quot;z-meta z-block z-c++&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-c++&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-c++&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-c++&quot;&gt;&lt;span class=&quot;z-meta z-block z-c++&quot;&gt;  &lt;span class=&quot;z-meta z-block z-c++&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-c++&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-c++&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-c++&quot;&gt;&lt;span class=&quot;z-meta z-block z-c++&quot;&gt;  &lt;span class=&quot;z-meta z-block z-c++&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-c++&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-c++&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-c++&quot;&gt;&lt;span class=&quot;z-meta z-block z-c++&quot;&gt;  &lt;span class=&quot;z-meta z-block z-c++&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-c++&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-c++&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-c++&quot;&gt;&lt;span class=&quot;z-meta z-block z-c++&quot;&gt;  &lt;span class=&quot;z-meta z-block z-c++&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-c++&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-c++&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-c++&quot;&gt;&lt;span class=&quot;z-meta z-block z-c++&quot;&gt;  &lt;span class=&quot;z-meta z-block z-c++&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-c++&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-c++&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-c++&quot;&gt;&lt;span class=&quot;z-meta z-block z-c++&quot;&gt;  &lt;span class=&quot;z-meta z-block z-c++&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-c++&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-c++&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-c++&quot;&gt;&lt;span class=&quot;z-meta z-block z-c++&quot;&gt;  &lt;span class=&quot;z-meta z-block z-c++&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-c++&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-c++&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-c++&quot;&gt;&lt;span class=&quot;z-meta z-block z-c++&quot;&gt;  &lt;span class=&quot;z-meta z-block z-c++&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-c++&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-c++&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-c++&quot;&gt;&lt;span class=&quot;z-meta z-block z-c++&quot;&gt;  &lt;span class=&quot;z-meta z-block z-c++&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-c++&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-c++&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-c++&quot;&gt;&lt;span class=&quot;z-meta z-block z-c++&quot;&gt;  &lt;span class=&quot;z-meta z-block z-c++&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-c++&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-c++&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-c++&quot;&gt;&lt;span class=&quot;z-meta z-block z-c++&quot;&gt;  &lt;span class=&quot;z-meta z-block z-c++&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-c++&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-c++&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-c++&quot;&gt;&lt;span class=&quot;z-meta z-block z-c++&quot;&gt;  &lt;span class=&quot;z-meta z-block z-c++&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-c++&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-c++&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-c++&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Solving the equation $\mathbf{Vx} = {1,1,....1} \mod{2}$ reveals how many times one must utilize $f(j)$ to invert every light source.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;cpp&quot; class=&quot;language-cpp z-code&quot;&gt;&lt;code class=&quot;language-cpp&quot; data-lang=&quot;cpp&quot;&gt;&lt;span class=&quot;z-source z-c++&quot;&gt;i&lt;span class=&quot;z-keyword z-operator z-assignment z-c&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-block z-c++&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-c++&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-c++&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-c++&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-c++&quot;&gt;LinearSolve&lt;span class=&quot;z-meta z-brackets z-c++&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-brackets z-begin z-c++&quot;&gt;[&lt;&#x2F;span&gt;V&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; i&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; Modulus &lt;span class=&quot;z-punctuation z-accessor z-arrow z-c++&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt; 2]
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-c++&quot;&gt;&lt;span class=&quot;z-meta z-brackets z-c++&quot;&gt;&lt;span class=&quot;z-variable z-other z-readwrite z-member z-c++&quot;&gt;Answer&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-ternary z-c&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-block z-c++&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-c++&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-c++&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-c++&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-c++&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;in other words: $B,E,F,G,I,J,K,N,O$&lt;&#x2F;p&gt;
&lt;p&gt;This post was later found by one of the game developers who sent me their solution; $B,C,D,E,G,K,P$, and this yields all odds when taking the dot product with $V$.&lt;&#x2F;p&gt;
</content>
        
    </entry>
</feed>
